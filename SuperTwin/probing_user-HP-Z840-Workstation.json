{"hostname": "user-HP-Z840-Workstation", "os": "Ubuntu 18.04.5 LTS", "arch": "x86_64", "uuid": "C4B974C6-8EFF-E611-9C43-BC0000D00000", "system": {"motherboard": {"name": "2129", "vendor": "Hewlett-Packard"}, "bios": {"version": "M60 v02.31", "date": "12/14/2016", "vendor": "Hewlett-Packard"}, "kernel": {"version": "5.4.0-139-generic"}}, "memory": {"total": {"size": 0, "banks": 2}, "banks": {}}, "network": {"eno1": {"ipv4": "", "businfo": "pci@0000:00:19.0", "vendor": "Intel Corporation", "model": "", "firmware": "0.1-4", "virtual": "no", "speed": "", "serial": "70:5a:0f:42:ed:4d", "link": "no"}, "enp5s0": {"ipv4": "172.23.120.93", "businfo": "pci@0000:05:00.0", "vendor": "Intel Corporation", "model": "", "firmware": "3.25, 0x80000678", "virtual": "no", "speed": "1Gbit/s", "serial": "70:5a:0f:42:ed:4e", "link": "yes"}, "docker0": {"ipv4": "172.17.0.1", "businfo": "", "vendor": "", "model": "", "firmware": "N/A", "virtual": "no", "speed": "", "serial": "02:42:64:62:1d:97", "link": "no"}}, "disk": {"no_disks": 2, "sda": {"size": 256060514304, "model": "MTFDDAK256MBF-1A"}, "nvme0n1": {"size": 500107862016, "model": "KINGSTON SKC2000M8500G"}}, "cpu": {"specs": {"sockets": 2, "model": "Intel(R) Xeon(R) CPU E5-2640 v4 @ 2.40GHz", "type": "x86_64", "cores": 10, "threads": 20, "threads_per_core": 2, "hyperthreading": "on", "min_mhz": 1200.0, "max_mhz": 3400.0, "flags": "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cdp_l3 invpcid_single pti intel_ppin ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm cqm rdt_a rdseed adx smap intel_pt xsaveopt cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local dtherm ida arat pln pts md_clear flush_l1d"}, "tlb": [{"type": "data TLB: 1G pages", "association": "4-way", "size": "4 entries"}, {"type": "data TLB: 4K pages", "association": "4-way", "size": "64 entries"}, {"type": "instruction TLB: 2M/4M pages", "association": "fully", "size": "8 entries"}, {"type": "instruction TLB: 4K", "association": "8-way", "size": "64 entries"}, {"type": "L2 TLB: 4K/2M pages", "association": "6-way", "size": "1536 entries"}], "cache": {"L1D": {"size": "32 kB", "associativity": "8", "no_sets": "64", "cache_line_size": "64", "shared_by_threads": "2", "cache_groups": [[0, 20], [1, 21], [2, 22], [3, 23], [4, 24], [5, 25], [6, 26], [7, 27], [8, 28], [9, 29], [10, 30], [11, 31], [12, 32], [13, 33], [14, 34], [15, 35], [16, 36], [17, 37], [18, 38], [19, 39]]}, "L2": {"size": "256 kB", "associativity": "8", "no_sets": "512", "cache_line_size": "64", "shared_by_threads": "2", "cache_groups": [[0, 20], [1, 21], [2, 22], [3, 23], [4, 24], [5, 25], [6, 26], [7, 27], [8, 28], [9, 29], [10, 30], [11, 31], [12, 32], [13, 33], [14, 34], [15, 35], [16, 36], [17, 37], [18, 38], [19, 39]]}, "L3": {"size": "25 MB", "associativity": "20", "no_sets": "20480", "cache_line_size": "64", "shared_by_threads": "20", "cache_groups": [[0, 20, 1, 21, 2, 22, 3, 23, 4, 24, 5, 25, 6, 26, 7, 27, 8, 28, 9, 29], [10, 30, 11, 31, 12, 32, 13, 33, 14, 34, 15, 35, 16, 36, 17, 37, 18, 38, 19, 39]]}}}, "numa": {"0": {"processors": [0, 20, 1, 21, 2, 22, 3, 23, 4, 24, 5, 25, 6, 26, 7, 27, 8, 28, 9, 29], "distances": [10, 21], "total_memory": "32103 MB"}, "1": {"processors": [10, 30, 11, 31, 12, 32, 13, 33, 14, 34, 15, 35, 16, 36, 17, 37, 18, 38, 19, 39], "distances": [21, 10], "total_memory": "32221.6 MB"}}, "affinity": {"socket": {"0": {"cores": {"0": [0, 20], "1": [1, 21], "2": [2, 22], "3": [3, 23], "4": [4, 24], "5": [5, 25], "6": [6, 26], "7": [7, 27], "8": [8, 28], "9": [9, 29]}}, "1": {"cores": {"10": [10, 30], "11": [11, 31], "12": [12, 32], "13": [13, 33], "14": [14, 34], "15": [15, 35], "16": [16, 36], "17": [17, 37], "18": [18, 38], "19": [19, 39]}}}}, "gpus": {}, "PMUs": {"ix86arch": {"events": [["UNHALTED_CORE_CYCLES", "count core clock cycles whenever the clock signal on the specific core is running (not halted)."], ["INSTRUCTION_RETIRED", "count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction."], ["UNHALTED_REFERENCE_CYCLES", "count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions."], ["LLC_REFERENCES", "count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch."], ["LLC_MISSES", "count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch."], ["BRANCH_INSTRUCTIONS_RETIRED", "count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction."], ["MISPREDICTED_BRANCH_RETIRED", "count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware."]], "features": {"name": "Intel X86 architectural PMU", "no_events": 7, "max_encoding": 1, "counters": 7, "type": "core PMU"}}, "perf": {"events": [["PERF_COUNT_HW_CPU_CYCLES", "PERF_COUNT_HW_CPU_CYCLES."], ["CYCLES", "PERF_COUNT_HW_CPU_CYCLES."], ["CPU-CYCLES", "PERF_COUNT_HW_CPU_CYCLES."], ["PERF_COUNT_HW_INSTRUCTIONS", "PERF_COUNT_HW_INSTRUCTIONS."], ["INSTRUCTIONS", "PERF_COUNT_HW_INSTRUCTIONS."], ["PERF_COUNT_HW_CACHE_REFERENCES", "PERF_COUNT_HW_CACHE_REFERENCES."], ["CACHE-REFERENCES", "PERF_COUNT_HW_CACHE_REFERENCES."], ["PERF_COUNT_HW_CACHE_MISSES", "PERF_COUNT_HW_CACHE_MISSES."], ["CACHE-MISSES", "PERF_COUNT_HW_CACHE_MISSES."], ["PERF_COUNT_HW_BRANCH_INSTRUCTIONS", "PERF_COUNT_HW_BRANCH_INSTRUCTIONS."], ["BRANCH-INSTRUCTIONS", "PERF_COUNT_HW_BRANCH_INSTRUCTIONS."], ["BRANCHES", "PERF_COUNT_HW_BRANCH_INSTRUCTIONS."], ["PERF_COUNT_HW_BRANCH_MISSES", "PERF_COUNT_HW_BRANCH_MISSES."], ["BRANCH-MISSES", "PERF_COUNT_HW_BRANCH_MISSES."], ["PERF_COUNT_HW_BUS_CYCLES", "PERF_COUNT_HW_BUS_CYCLES."], ["BUS-CYCLES", "PERF_COUNT_HW_BUS_CYCLES."], ["PERF_COUNT_HW_STALLED_CYCLES_FRONTEND", "PERF_COUNT_HW_STALLED_CYCLES_FRONTEND."], ["STALLED-CYCLES-FRONTEND", "PERF_COUNT_HW_STALLED_CYCLES_FRONTEND."], ["IDLE-CYCLES-FRONTEND", "PERF_COUNT_HW_STALLED_CYCLES_FRONTEND."], ["PERF_COUNT_HW_STALLED_CYCLES_BACKEND", "PERF_COUNT_HW_STALLED_CYCLES_BACKEND."], ["STALLED-CYCLES-BACKEND", "PERF_COUNT_HW_STALLED_CYCLES_BACKEND."], ["IDLE-CYCLES-BACKEND", "PERF_COUNT_HW_STALLED_CYCLES_BACKEND."], ["PERF_COUNT_HW_REF_CPU_CYCLES", "PERF_COUNT_HW_REF_CPU_CYCLES."], ["REF-CYCLES", "PERF_COUNT_HW_REF_CPU_CYCLES."], ["PERF_COUNT_SW_CPU_CLOCK", "PERF_COUNT_SW_CPU_CLOCK."], ["CPU-CLOCK", "PERF_COUNT_SW_CPU_CLOCK."], ["PERF_COUNT_SW_TASK_CLOCK", "PERF_COUNT_SW_TASK_CLOCK."], ["TASK-CLOCK", "PERF_COUNT_SW_TASK_CLOCK."], ["PERF_COUNT_SW_PAGE_FAULTS", "PERF_COUNT_SW_PAGE_FAULTS."], ["PAGE-FAULTS", "PERF_COUNT_SW_PAGE_FAULTS."], ["FAULTS", "PERF_COUNT_SW_PAGE_FAULTS."], ["PERF_COUNT_SW_CONTEXT_SWITCHES", "PERF_COUNT_SW_CONTEXT_SWITCHES."], ["CONTEXT-SWITCHES", "PERF_COUNT_SW_CONTEXT_SWITCHES."], ["CS", "PERF_COUNT_SW_CONTEXT_SWITCHES."], ["PERF_COUNT_SW_CPU_MIGRATIONS", "PERF_COUNT_SW_CPU_MIGRATIONS."], ["CPU-MIGRATIONS", "PERF_COUNT_SW_CPU_MIGRATIONS."], ["MIGRATIONS", "PERF_COUNT_SW_CPU_MIGRATIONS."], ["PERF_COUNT_SW_PAGE_FAULTS_MIN", "PERF_COUNT_SW_PAGE_FAULTS_MIN."], ["MINOR-FAULTS", "PERF_COUNT_SW_PAGE_FAULTS_MIN."], ["PERF_COUNT_SW_PAGE_FAULTS_MAJ", "PERF_COUNT_SW_PAGE_FAULTS_MAJ."], ["MAJOR-FAULTS", "PERF_COUNT_SW_PAGE_FAULTS_MAJ."], ["PERF_COUNT_SW_CGROUP_SWITCHES", "PERF_COUNT_SW_CGROUP_SWITCHES."], ["CGROUP-SWITCHES", "PERF_COUNT_SW_CGROUP_SWITCHES."], ["PERF_COUNT_HW_CACHE_L1D:READ", "L1 data cache. read access."], ["PERF_COUNT_HW_CACHE_L1D:WRITE", "L1 data cache. write access."], ["PERF_COUNT_HW_CACHE_L1D:PREFETCH", "L1 data cache. prefetch access."], ["PERF_COUNT_HW_CACHE_L1D:ACCESS", "L1 data cache. hit access."], ["PERF_COUNT_HW_CACHE_L1D:MISS", "L1 data cache. miss access."], ["L1-DCACHE-LOADS", "L1 cache load accesses."], ["L1-DCACHE-LOAD-MISSES", "L1 cache load misses."], ["L1-DCACHE-STORES", "L1 cache store accesses."], ["L1-DCACHE-STORE-MISSES", "L1 cache store misses."], ["L1-DCACHE-PREFETCHES", "L1 cache prefetch accesses."], ["L1-DCACHE-PREFETCH-MISSES", "L1 cache prefetch misses."], ["PERF_COUNT_HW_CACHE_L1I:READ", "L1 instruction cache. read access."], ["PERF_COUNT_HW_CACHE_L1I:PREFETCH", "L1 instruction cache. prefetch access."], ["PERF_COUNT_HW_CACHE_L1I:ACCESS", "L1 instruction cache. hit access."], ["PERF_COUNT_HW_CACHE_L1I:MISS", "L1 instruction cache. miss access."], ["L1-ICACHE-LOADS", "L1I cache load accesses."], ["L1-ICACHE-LOAD-MISSES", "L1I cache load misses."], ["L1-ICACHE-PREFETCHES", "L1I cache prefetch accesses."], ["L1-ICACHE-PREFETCH-MISSES", "L1I cache prefetch misses."], ["PERF_COUNT_HW_CACHE_LL:READ", "Last level cache. read access."], ["PERF_COUNT_HW_CACHE_LL:WRITE", "Last level cache. write access."], ["PERF_COUNT_HW_CACHE_LL:PREFETCH", "Last level cache. prefetch access."], ["PERF_COUNT_HW_CACHE_LL:ACCESS", "Last level cache. hit access."], ["PERF_COUNT_HW_CACHE_LL:MISS", "Last level cache. miss access."], ["LLC-LOADS", "Last level cache load accesses."], ["LLC-LOAD-MISSES", "Last level cache load misses."], ["LLC-STORES", "Last level cache store accesses."], ["LLC-STORE-MISSES", "Last level cache store misses."], ["LLC-PREFETCHES", "Last level cache prefetch accesses."], ["LLC-PREFETCH-MISSES", "Last level cache prefetch misses."], ["PERF_COUNT_HW_CACHE_DTLB:READ", "Data Translation Lookaside Buffer. read access."], ["PERF_COUNT_HW_CACHE_DTLB:WRITE", "Data Translation Lookaside Buffer. write access."], ["PERF_COUNT_HW_CACHE_DTLB:PREFETCH", "Data Translation Lookaside Buffer. prefetch access."], ["PERF_COUNT_HW_CACHE_DTLB:ACCESS", "Data Translation Lookaside Buffer. hit access."], ["PERF_COUNT_HW_CACHE_DTLB:MISS", "Data Translation Lookaside Buffer. miss access."], ["DTLB-LOADS", "Data TLB load accesses."], ["DTLB-LOAD-MISSES", "Data TLB load misses."], ["DTLB-STORES", "Data TLB store accesses."], ["DTLB-STORE-MISSES", "Data TLB store misses."], ["DTLB-PREFETCHES", "Data TLB prefetch accesses."], ["DTLB-PREFETCH-MISSES", "Data TLB prefetch misses."], ["PERF_COUNT_HW_CACHE_ITLB:READ", "Instruction Translation Lookaside Buffer. read access."], ["PERF_COUNT_HW_CACHE_ITLB:ACCESS", "Instruction Translation Lookaside Buffer. hit access."], ["PERF_COUNT_HW_CACHE_ITLB:MISS", "Instruction Translation Lookaside Buffer. miss access."], ["ITLB-LOADS", "Instruction TLB load accesses."], ["ITLB-LOAD-MISSES", "Instruction TLB load misses."], ["PERF_COUNT_HW_CACHE_BPU:READ", "Branch Prediction Unit. read access."], ["PERF_COUNT_HW_CACHE_BPU:ACCESS", "Branch Prediction Unit. hit access."], ["PERF_COUNT_HW_CACHE_BPU:MISS", "Branch Prediction Unit. miss access."], ["BRANCH-LOADS", "Branch  load accesses."], ["BRANCH-LOAD-MISSES", "Branch  load misses."], ["PERF_COUNT_HW_CACHE_NODE:READ", "Node memory access. read access."], ["PERF_COUNT_HW_CACHE_NODE:WRITE", "Node memory access. write access."], ["PERF_COUNT_HW_CACHE_NODE:PREFETCH", "Node memory access. prefetch access."], ["PERF_COUNT_HW_CACHE_NODE:ACCESS", "Node memory access. hit access."], ["PERF_COUNT_HW_CACHE_NODE:MISS", "Node memory access. miss access."], ["NODE-LOADS", "Node  load accesses."], ["NODE-LOAD-MISSES", "Node  load misses."], ["NODE-STORES", "Node  store accesses."], ["NODE-STORE-MISSES", "Node  store misses."], ["NODE-PREFETCHES", "Node  prefetch accesses."], ["NODE-PREFETCH-MISSES", "Node  prefetch misses."], ["btrfs:btrfs_transaction_commit", "tracepoint. btrfs_transaction_commit."], ["btrfs:btrfs_inode_new", "tracepoint. btrfs_inode_new."], ["btrfs:btrfs_inode_request", "tracepoint. btrfs_inode_request."], ["btrfs:btrfs_inode_evict", "tracepoint. btrfs_inode_evict."], ["btrfs:btrfs_get_extent", "tracepoint. btrfs_get_extent."], ["btrfs:btrfs_handle_em_exist", "tracepoint. btrfs_handle_em_exist."], ["btrfs:btrfs_get_extent_show_fi_regular", "tracepoint. btrfs_get_extent_show_fi_regular."], ["btrfs:btrfs_truncate_show_fi_regular", "tracepoint. btrfs_truncate_show_fi_regular."], ["btrfs:btrfs_get_extent_show_fi_inline", "tracepoint. btrfs_get_extent_show_fi_inline."], ["btrfs:btrfs_truncate_show_fi_inline", "tracepoint. btrfs_truncate_show_fi_inline."], ["btrfs:btrfs_ordered_extent_add", "tracepoint. btrfs_ordered_extent_add."], ["btrfs:btrfs_ordered_extent_remove", "tracepoint. btrfs_ordered_extent_remove."], ["btrfs:btrfs_ordered_extent_start", "tracepoint. btrfs_ordered_extent_start."], ["btrfs:btrfs_ordered_extent_put", "tracepoint. btrfs_ordered_extent_put."], ["btrfs:__extent_writepage", "tracepoint. __extent_writepage."], ["btrfs:btrfs_writepage_end_io_hook", "tracepoint. btrfs_writepage_end_io_hook."], ["btrfs:btrfs_sync_file", "tracepoint. btrfs_sync_file."], ["btrfs:btrfs_sync_fs", "tracepoint. btrfs_sync_fs."], ["btrfs:btrfs_add_block_group", "tracepoint. btrfs_add_block_group."], ["btrfs:add_delayed_tree_ref", "tracepoint. add_delayed_tree_ref."], ["btrfs:run_delayed_tree_ref", "tracepoint. run_delayed_tree_ref."], ["btrfs:add_delayed_data_ref", "tracepoint. add_delayed_data_ref."], ["btrfs:run_delayed_data_ref", "tracepoint. run_delayed_data_ref."], ["btrfs:add_delayed_ref_head", "tracepoint. add_delayed_ref_head."], ["btrfs:run_delayed_ref_head", "tracepoint. run_delayed_ref_head."], ["btrfs:btrfs_chunk_alloc", "tracepoint. btrfs_chunk_alloc."], ["btrfs:btrfs_chunk_free", "tracepoint. btrfs_chunk_free."], ["btrfs:btrfs_cow_block", "tracepoint. btrfs_cow_block."], ["btrfs:btrfs_space_reservation", "tracepoint. btrfs_space_reservation."], ["btrfs:btrfs_trigger_flush", "tracepoint. btrfs_trigger_flush."], ["btrfs:btrfs_flush_space", "tracepoint. btrfs_flush_space."], ["btrfs:btrfs_reserved_extent_alloc", "tracepoint. btrfs_reserved_extent_alloc."], ["btrfs:btrfs_reserved_extent_free", "tracepoint. btrfs_reserved_extent_free."], ["btrfs:find_free_extent", "tracepoint. find_free_extent."], ["btrfs:btrfs_reserve_extent", "tracepoint. btrfs_reserve_extent."], ["btrfs:btrfs_reserve_extent_cluster", "tracepoint. btrfs_reserve_extent_cluster."], ["btrfs:btrfs_find_cluster", "tracepoint. btrfs_find_cluster."], ["btrfs:btrfs_failed_cluster_setup", "tracepoint. btrfs_failed_cluster_setup."], ["btrfs:btrfs_setup_cluster", "tracepoint. btrfs_setup_cluster."], ["btrfs:alloc_extent_state", "tracepoint. alloc_extent_state."], ["btrfs:free_extent_state", "tracepoint. free_extent_state."], ["btrfs:btrfs_work_queued", "tracepoint. btrfs_work_queued."], ["btrfs:btrfs_work_sched", "tracepoint. btrfs_work_sched."], ["btrfs:btrfs_all_work_done", "tracepoint. btrfs_all_work_done."], ["btrfs:btrfs_ordered_sched", "tracepoint. btrfs_ordered_sched."], ["btrfs:btrfs_workqueue_alloc", "tracepoint. btrfs_workqueue_alloc."], ["btrfs:btrfs_workqueue_destroy", "tracepoint. btrfs_workqueue_destroy."], ["btrfs:btrfs_qgroup_reserve_data", "tracepoint. btrfs_qgroup_reserve_data."], ["btrfs:btrfs_qgroup_release_data", "tracepoint. btrfs_qgroup_release_data."], ["btrfs:btrfs_qgroup_account_extents", "tracepoint. btrfs_qgroup_account_extents."], ["btrfs:btrfs_qgroup_trace_extent", "tracepoint. btrfs_qgroup_trace_extent."], ["btrfs:qgroup_num_dirty_extents", "tracepoint. qgroup_num_dirty_extents."], ["btrfs:btrfs_qgroup_account_extent", "tracepoint. btrfs_qgroup_account_extent."], ["btrfs:qgroup_update_counters", "tracepoint. qgroup_update_counters."], ["btrfs:qgroup_update_reserve", "tracepoint. qgroup_update_reserve."], ["btrfs:qgroup_meta_reserve", "tracepoint. qgroup_meta_reserve."], ["btrfs:qgroup_meta_convert", "tracepoint. qgroup_meta_convert."], ["btrfs:qgroup_meta_free_all_pertrans", "tracepoint. qgroup_meta_free_all_pertrans."], ["btrfs:btrfs_prelim_ref_merge", "tracepoint. btrfs_prelim_ref_merge."], ["btrfs:btrfs_prelim_ref_insert", "tracepoint. btrfs_prelim_ref_insert."], ["btrfs:btrfs_inode_mod_outstanding_extents", "tracepoint. btrfs_inode_mod_outstanding_extents."], ["btrfs:btrfs_remove_block_group", "tracepoint. btrfs_remove_block_group."], ["btrfs:btrfs_add_unused_block_group", "tracepoint. btrfs_add_unused_block_group."], ["btrfs:btrfs_skip_unused_block_group", "tracepoint. btrfs_skip_unused_block_group."], ["btrfs:btrfs_set_extent_bit", "tracepoint. btrfs_set_extent_bit."], ["btrfs:btrfs_clear_extent_bit", "tracepoint. btrfs_clear_extent_bit."], ["btrfs:btrfs_convert_extent_bit", "tracepoint. btrfs_convert_extent_bit."], ["btrfs:btrfs_tree_read_lock", "tracepoint. btrfs_tree_read_lock."], ["btrfs:btrfs_tree_lock", "tracepoint. btrfs_tree_lock."], ["btrfs:btrfs_tree_unlock", "tracepoint. btrfs_tree_unlock."], ["btrfs:btrfs_tree_read_unlock", "tracepoint. btrfs_tree_read_unlock."], ["btrfs:btrfs_tree_read_unlock_blocking", "tracepoint. btrfs_tree_read_unlock_blocking."], ["btrfs:btrfs_set_lock_blocking_read", "tracepoint. btrfs_set_lock_blocking_read."], ["btrfs:btrfs_set_lock_blocking_write", "tracepoint. btrfs_set_lock_blocking_write."], ["btrfs:btrfs_try_tree_read_lock", "tracepoint. btrfs_try_tree_read_lock."], ["btrfs:btrfs_try_tree_write_lock", "tracepoint. btrfs_try_tree_write_lock."], ["btrfs:btrfs_tree_read_lock_atomic", "tracepoint. btrfs_tree_read_lock_atomic."], ["btrfs:update_bytes_may_use", "tracepoint. update_bytes_may_use."], ["btrfs:update_bytes_pinned", "tracepoint. update_bytes_pinned."], ["xfs:xfs_attr_list_sf", "tracepoint. xfs_attr_list_sf."], ["xfs:xfs_attr_list_sf_all", "tracepoint. xfs_attr_list_sf_all."], ["xfs:xfs_attr_list_leaf", "tracepoint. xfs_attr_list_leaf."], ["xfs:xfs_attr_list_leaf_end", "tracepoint. xfs_attr_list_leaf_end."], ["xfs:xfs_attr_list_full", "tracepoint. xfs_attr_list_full."], ["xfs:xfs_attr_list_add", "tracepoint. xfs_attr_list_add."], ["xfs:xfs_attr_list_wrong_blk", "tracepoint. xfs_attr_list_wrong_blk."], ["xfs:xfs_attr_list_notfound", "tracepoint. xfs_attr_list_notfound."], ["xfs:xfs_attr_leaf_list", "tracepoint. xfs_attr_leaf_list."], ["xfs:xfs_attr_node_list", "tracepoint. xfs_attr_node_list."], ["xfs:xfs_perag_get", "tracepoint. xfs_perag_get."], ["xfs:xfs_perag_get_tag", "tracepoint. xfs_perag_get_tag."], ["xfs:xfs_perag_put", "tracepoint. xfs_perag_put."], ["xfs:xfs_perag_set_reclaim", "tracepoint. xfs_perag_set_reclaim."], ["xfs:xfs_perag_clear_reclaim", "tracepoint. xfs_perag_clear_reclaim."], ["xfs:xfs_perag_set_eofblocks", "tracepoint. xfs_perag_set_eofblocks."], ["xfs:xfs_perag_clear_eofblocks", "tracepoint. xfs_perag_clear_eofblocks."], ["xfs:xfs_perag_set_cowblocks", "tracepoint. xfs_perag_set_cowblocks."], ["xfs:xfs_perag_clear_cowblocks", "tracepoint. xfs_perag_clear_cowblocks."], ["xfs:xfs_read_agf", "tracepoint. xfs_read_agf."], ["xfs:xfs_alloc_read_agf", "tracepoint. xfs_alloc_read_agf."], ["xfs:xfs_read_agi", "tracepoint. xfs_read_agi."], ["xfs:xfs_ialloc_read_agi", "tracepoint. xfs_ialloc_read_agi."], ["xfs:xfs_attr_list_node_descend", "tracepoint. xfs_attr_list_node_descend."], ["xfs:xfs_iext_insert", "tracepoint. xfs_iext_insert."], ["xfs:xfs_iext_remove", "tracepoint. xfs_iext_remove."], ["xfs:xfs_bmap_pre_update", "tracepoint. xfs_bmap_pre_update."], ["xfs:xfs_bmap_post_update", "tracepoint. xfs_bmap_post_update."], ["xfs:xfs_read_extent", "tracepoint. xfs_read_extent."], ["xfs:xfs_write_extent", "tracepoint. xfs_write_extent."], ["xfs:xfs_buf_init", "tracepoint. xfs_buf_init."], ["xfs:xfs_buf_free", "tracepoint. xfs_buf_free."], ["xfs:xfs_buf_hold", "tracepoint. xfs_buf_hold."], ["xfs:xfs_buf_rele", "tracepoint. xfs_buf_rele."], ["xfs:xfs_buf_iodone", "tracepoint. xfs_buf_iodone."], ["xfs:xfs_buf_submit", "tracepoint. xfs_buf_submit."], ["xfs:xfs_buf_lock", "tracepoint. xfs_buf_lock."], ["xfs:xfs_buf_lock_done", "tracepoint. xfs_buf_lock_done."], ["xfs:xfs_buf_trylock_fail", "tracepoint. xfs_buf_trylock_fail."], ["xfs:xfs_buf_trylock", "tracepoint. xfs_buf_trylock."], ["xfs:xfs_buf_unlock", "tracepoint. xfs_buf_unlock."], ["xfs:xfs_buf_iowait", "tracepoint. xfs_buf_iowait."], ["xfs:xfs_buf_iowait_done", "tracepoint. xfs_buf_iowait_done."], ["xfs:xfs_buf_delwri_queue", "tracepoint. xfs_buf_delwri_queue."], ["xfs:xfs_buf_delwri_queued", "tracepoint. xfs_buf_delwri_queued."], ["xfs:xfs_buf_delwri_split", "tracepoint. xfs_buf_delwri_split."], ["xfs:xfs_buf_delwri_pushbuf", "tracepoint. xfs_buf_delwri_pushbuf."], ["xfs:xfs_buf_get_uncached", "tracepoint. xfs_buf_get_uncached."], ["xfs:xfs_buf_item_relse", "tracepoint. xfs_buf_item_relse."], ["xfs:xfs_buf_item_iodone_async", "tracepoint. xfs_buf_item_iodone_async."], ["xfs:xfs_buf_error_relse", "tracepoint. xfs_buf_error_relse."], ["xfs:xfs_buf_wait_buftarg", "tracepoint. xfs_buf_wait_buftarg."], ["xfs:xfs_trans_read_buf_shut", "tracepoint. xfs_trans_read_buf_shut."], ["xfs:xfs_btree_corrupt", "tracepoint. xfs_btree_corrupt."], ["xfs:xfs_reset_dqcounts", "tracepoint. xfs_reset_dqcounts."], ["xfs:xfs_buf_find", "tracepoint. xfs_buf_find."], ["xfs:xfs_buf_get", "tracepoint. xfs_buf_get."], ["xfs:xfs_buf_read", "tracepoint. xfs_buf_read."], ["xfs:xfs_buf_ioerror", "tracepoint. xfs_buf_ioerror."], ["xfs:xfs_buf_item_size", "tracepoint. xfs_buf_item_size."], ["xfs:xfs_buf_item_size_ordered", "tracepoint. xfs_buf_item_size_ordered."], ["xfs:xfs_buf_item_size_stale", "tracepoint. xfs_buf_item_size_stale."], ["xfs:xfs_buf_item_format", "tracepoint. xfs_buf_item_format."], ["xfs:xfs_buf_item_format_stale", "tracepoint. xfs_buf_item_format_stale."], ["xfs:xfs_buf_item_ordered", "tracepoint. xfs_buf_item_ordered."], ["xfs:xfs_buf_item_pin", "tracepoint. xfs_buf_item_pin."], ["xfs:xfs_buf_item_unpin", "tracepoint. xfs_buf_item_unpin."], ["xfs:xfs_buf_item_unpin_stale", "tracepoint. xfs_buf_item_unpin_stale."], ["xfs:xfs_buf_item_release", "tracepoint. xfs_buf_item_release."], ["xfs:xfs_buf_item_committed", "tracepoint. xfs_buf_item_committed."], ["xfs:xfs_buf_item_push", "tracepoint. xfs_buf_item_push."], ["xfs:xfs_trans_get_buf", "tracepoint. xfs_trans_get_buf."], ["xfs:xfs_trans_get_buf_recur", "tracepoint. xfs_trans_get_buf_recur."], ["xfs:xfs_trans_getsb", "tracepoint. xfs_trans_getsb."], ["xfs:xfs_trans_getsb_recur", "tracepoint. xfs_trans_getsb_recur."], ["xfs:xfs_trans_read_buf", "tracepoint. xfs_trans_read_buf."], ["xfs:xfs_trans_read_buf_recur", "tracepoint. xfs_trans_read_buf_recur."], ["xfs:xfs_trans_log_buf", "tracepoint. xfs_trans_log_buf."], ["xfs:xfs_trans_brelse", "tracepoint. xfs_trans_brelse."], ["xfs:xfs_trans_bjoin", "tracepoint. xfs_trans_bjoin."], ["xfs:xfs_trans_bhold", "tracepoint. xfs_trans_bhold."], ["xfs:xfs_trans_bhold_release", "tracepoint. xfs_trans_bhold_release."], ["xfs:xfs_trans_binval", "tracepoint. xfs_trans_binval."], ["xfs:xfs_filestream_free", "tracepoint. xfs_filestream_free."], ["xfs:xfs_filestream_lookup", "tracepoint. xfs_filestream_lookup."], ["xfs:xfs_filestream_scan", "tracepoint. xfs_filestream_scan."], ["xfs:xfs_filestream_pick", "tracepoint. xfs_filestream_pick."], ["xfs:xfs_ilock", "tracepoint. xfs_ilock."], ["xfs:xfs_ilock_nowait", "tracepoint. xfs_ilock_nowait."], ["xfs:xfs_ilock_demote", "tracepoint. xfs_ilock_demote."], ["xfs:xfs_iunlock", "tracepoint. xfs_iunlock."], ["xfs:xfs_iget_skip", "tracepoint. xfs_iget_skip."], ["xfs:xfs_iget_reclaim", "tracepoint. xfs_iget_reclaim."], ["xfs:xfs_iget_reclaim_fail", "tracepoint. xfs_iget_reclaim_fail."], ["xfs:xfs_iget_hit", "tracepoint. xfs_iget_hit."], ["xfs:xfs_iget_miss", "tracepoint. xfs_iget_miss."], ["xfs:xfs_getattr", "tracepoint. xfs_getattr."], ["xfs:xfs_setattr", "tracepoint. xfs_setattr."], ["xfs:xfs_readlink", "tracepoint. xfs_readlink."], ["xfs:xfs_inactive_symlink", "tracepoint. xfs_inactive_symlink."], ["xfs:xfs_alloc_file_space", "tracepoint. xfs_alloc_file_space."], ["xfs:xfs_free_file_space", "tracepoint. xfs_free_file_space."], ["xfs:xfs_zero_file_space", "tracepoint. xfs_zero_file_space."], ["xfs:xfs_collapse_file_space", "tracepoint. xfs_collapse_file_space."], ["xfs:xfs_insert_file_space", "tracepoint. xfs_insert_file_space."], ["xfs:xfs_readdir", "tracepoint. xfs_readdir."], ["xfs:xfs_get_acl", "tracepoint. xfs_get_acl."], ["xfs:xfs_vm_bmap", "tracepoint. xfs_vm_bmap."], ["xfs:xfs_file_ioctl", "tracepoint. xfs_file_ioctl."], ["xfs:xfs_file_compat_ioctl", "tracepoint. xfs_file_compat_ioctl."], ["xfs:xfs_ioctl_setattr", "tracepoint. xfs_ioctl_setattr."], ["xfs:xfs_dir_fsync", "tracepoint. xfs_dir_fsync."], ["xfs:xfs_file_fsync", "tracepoint. xfs_file_fsync."], ["xfs:xfs_destroy_inode", "tracepoint. xfs_destroy_inode."], ["xfs:xfs_update_time", "tracepoint. xfs_update_time."], ["xfs:xfs_dquot_dqalloc", "tracepoint. xfs_dquot_dqalloc."], ["xfs:xfs_dquot_dqdetach", "tracepoint. xfs_dquot_dqdetach."], ["xfs:xfs_inode_set_eofblocks_tag", "tracepoint. xfs_inode_set_eofblocks_tag."], ["xfs:xfs_inode_clear_eofblocks_tag", "tracepoint. xfs_inode_clear_eofblocks_tag."], ["xfs:xfs_inode_free_eofblocks_invalid", "tracepoint. xfs_inode_free_eofblocks_invalid."], ["xfs:xfs_inode_set_cowblocks_tag", "tracepoint. xfs_inode_set_cowblocks_tag."], ["xfs:xfs_inode_clear_cowblocks_tag", "tracepoint. xfs_inode_clear_cowblocks_tag."], ["xfs:xfs_inode_free_cowblocks_invalid", "tracepoint. xfs_inode_free_cowblocks_invalid."], ["xfs:xfs_filemap_fault", "tracepoint. xfs_filemap_fault."], ["xfs:xfs_iomap_prealloc_size", "tracepoint. xfs_iomap_prealloc_size."], ["xfs:xfs_irec_merge_pre", "tracepoint. xfs_irec_merge_pre."], ["xfs:xfs_irec_merge_post", "tracepoint. xfs_irec_merge_post."], ["xfs:xfs_irele", "tracepoint. xfs_irele."], ["xfs:xfs_inode_pin", "tracepoint. xfs_inode_pin."], ["xfs:xfs_inode_unpin", "tracepoint. xfs_inode_unpin."], ["xfs:xfs_inode_unpin_nowait", "tracepoint. xfs_inode_unpin_nowait."], ["xfs:xfs_remove", "tracepoint. xfs_remove."], ["xfs:xfs_link", "tracepoint. xfs_link."], ["xfs:xfs_lookup", "tracepoint. xfs_lookup."], ["xfs:xfs_create", "tracepoint. xfs_create."], ["xfs:xfs_symlink", "tracepoint. xfs_symlink."], ["xfs:xfs_rename", "tracepoint. xfs_rename."], ["xfs:xfs_dqadjust", "tracepoint. xfs_dqadjust."], ["xfs:xfs_dqreclaim_want", "tracepoint. xfs_dqreclaim_want."], ["xfs:xfs_dqreclaim_dirty", "tracepoint. xfs_dqreclaim_dirty."], ["xfs:xfs_dqreclaim_busy", "tracepoint. xfs_dqreclaim_busy."], ["xfs:xfs_dqreclaim_done", "tracepoint. xfs_dqreclaim_done."], ["xfs:xfs_dqattach_found", "tracepoint. xfs_dqattach_found."], ["xfs:xfs_dqattach_get", "tracepoint. xfs_dqattach_get."], ["xfs:xfs_dqalloc", "tracepoint. xfs_dqalloc."], ["xfs:xfs_dqtobp_read", "tracepoint. xfs_dqtobp_read."], ["xfs:xfs_dqread", "tracepoint. xfs_dqread."], ["xfs:xfs_dqread_fail", "tracepoint. xfs_dqread_fail."], ["xfs:xfs_dqget_hit", "tracepoint. xfs_dqget_hit."], ["xfs:xfs_dqget_miss", "tracepoint. xfs_dqget_miss."], ["xfs:xfs_dqget_freeing", "tracepoint. xfs_dqget_freeing."], ["xfs:xfs_dqget_dup", "tracepoint. xfs_dqget_dup."], ["xfs:xfs_dqput", "tracepoint. xfs_dqput."], ["xfs:xfs_dqput_free", "tracepoint. xfs_dqput_free."], ["xfs:xfs_dqrele", "tracepoint. xfs_dqrele."], ["xfs:xfs_dqflush", "tracepoint. xfs_dqflush."], ["xfs:xfs_dqflush_force", "tracepoint. xfs_dqflush_force."], ["xfs:xfs_dqflush_done", "tracepoint. xfs_dqflush_done."], ["xfs:xfs_log_done_nonperm", "tracepoint. xfs_log_done_nonperm."], ["xfs:xfs_log_done_perm", "tracepoint. xfs_log_done_perm."], ["xfs:xfs_log_umount_write", "tracepoint. xfs_log_umount_write."], ["xfs:xfs_log_grant_sleep", "tracepoint. xfs_log_grant_sleep."], ["xfs:xfs_log_grant_wake", "tracepoint. xfs_log_grant_wake."], ["xfs:xfs_log_grant_wake_up", "tracepoint. xfs_log_grant_wake_up."], ["xfs:xfs_log_reserve", "tracepoint. xfs_log_reserve."], ["xfs:xfs_log_reserve_exit", "tracepoint. xfs_log_reserve_exit."], ["xfs:xfs_log_regrant", "tracepoint. xfs_log_regrant."], ["xfs:xfs_log_regrant_exit", "tracepoint. xfs_log_regrant_exit."], ["xfs:xfs_log_regrant_reserve_enter", "tracepoint. xfs_log_regrant_reserve_enter."], ["xfs:xfs_log_regrant_reserve_exit", "tracepoint. xfs_log_regrant_reserve_exit."], ["xfs:xfs_log_regrant_reserve_sub", "tracepoint. xfs_log_regrant_reserve_sub."], ["xfs:xfs_log_ungrant_enter", "tracepoint. xfs_log_ungrant_enter."], ["xfs:xfs_log_ungrant_exit", "tracepoint. xfs_log_ungrant_exit."], ["xfs:xfs_log_ungrant_sub", "tracepoint. xfs_log_ungrant_sub."], ["xfs:xfs_log_cil_wait", "tracepoint. xfs_log_cil_wait."], ["xfs:xfs_log_force", "tracepoint. xfs_log_force."], ["xfs:xfs_ail_push", "tracepoint. xfs_ail_push."], ["xfs:xfs_ail_pinned", "tracepoint. xfs_ail_pinned."], ["xfs:xfs_ail_locked", "tracepoint. xfs_ail_locked."], ["xfs:xfs_ail_flushing", "tracepoint. xfs_ail_flushing."], ["xfs:xfs_ail_insert", "tracepoint. xfs_ail_insert."], ["xfs:xfs_ail_move", "tracepoint. xfs_ail_move."], ["xfs:xfs_ail_delete", "tracepoint. xfs_ail_delete."], ["xfs:xfs_log_assign_tail_lsn", "tracepoint. xfs_log_assign_tail_lsn."], ["xfs:xfs_file_buffered_read", "tracepoint. xfs_file_buffered_read."], ["xfs:xfs_file_direct_read", "tracepoint. xfs_file_direct_read."], ["xfs:xfs_file_dax_read", "tracepoint. xfs_file_dax_read."], ["xfs:xfs_file_buffered_write", "tracepoint. xfs_file_buffered_write."], ["xfs:xfs_file_direct_write", "tracepoint. xfs_file_direct_write."], ["xfs:xfs_file_dax_write", "tracepoint. xfs_file_dax_write."], ["xfs:xfs_writepage", "tracepoint. xfs_writepage."], ["xfs:xfs_releasepage", "tracepoint. xfs_releasepage."], ["xfs:xfs_invalidatepage", "tracepoint. xfs_invalidatepage."], ["xfs:xfs_vm_readpage", "tracepoint. xfs_vm_readpage."], ["xfs:xfs_vm_readpages", "tracepoint. xfs_vm_readpages."], ["xfs:xfs_map_blocks_found", "tracepoint. xfs_map_blocks_found."], ["xfs:xfs_map_blocks_alloc", "tracepoint. xfs_map_blocks_alloc."], ["xfs:xfs_iomap_alloc", "tracepoint. xfs_iomap_alloc."], ["xfs:xfs_iomap_found", "tracepoint. xfs_iomap_found."], ["xfs:xfs_delalloc_enospc", "tracepoint. xfs_delalloc_enospc."], ["xfs:xfs_unwritten_convert", "tracepoint. xfs_unwritten_convert."], ["xfs:xfs_setfilesize", "tracepoint. xfs_setfilesize."], ["xfs:xfs_zero_eof", "tracepoint. xfs_zero_eof."], ["xfs:xfs_end_io_direct_write", "tracepoint. xfs_end_io_direct_write."], ["xfs:xfs_end_io_direct_write_unwritten", "tracepoint. xfs_end_io_direct_write_unwritten."], ["xfs:xfs_end_io_direct_write_append", "tracepoint. xfs_end_io_direct_write_append."], ["xfs:xfs_itruncate_extents_start", "tracepoint. xfs_itruncate_extents_start."], ["xfs:xfs_itruncate_extents_end", "tracepoint. xfs_itruncate_extents_end."], ["xfs:xfs_pagecache_inval", "tracepoint. xfs_pagecache_inval."], ["xfs:xfs_bunmap", "tracepoint. xfs_bunmap."], ["xfs:xfs_extent_busy", "tracepoint. xfs_extent_busy."], ["xfs:xfs_extent_busy_enomem", "tracepoint. xfs_extent_busy_enomem."], ["xfs:xfs_extent_busy_force", "tracepoint. xfs_extent_busy_force."], ["xfs:xfs_extent_busy_reuse", "tracepoint. xfs_extent_busy_reuse."], ["xfs:xfs_extent_busy_clear", "tracepoint. xfs_extent_busy_clear."], ["xfs:xfs_extent_busy_trim", "tracepoint. xfs_extent_busy_trim."], ["xfs:xfs_agf", "tracepoint. xfs_agf."], ["xfs:xfs_agfl_reset", "tracepoint. xfs_agfl_reset."], ["xfs:xfs_free_extent", "tracepoint. xfs_free_extent."], ["xfs:xfs_alloc_exact_done", "tracepoint. xfs_alloc_exact_done."], ["xfs:xfs_alloc_exact_notfound", "tracepoint. xfs_alloc_exact_notfound."], ["xfs:xfs_alloc_exact_error", "tracepoint. xfs_alloc_exact_error."], ["xfs:xfs_alloc_near_nominleft", "tracepoint. xfs_alloc_near_nominleft."], ["xfs:xfs_alloc_near_first", "tracepoint. xfs_alloc_near_first."], ["xfs:xfs_alloc_near_greater", "tracepoint. xfs_alloc_near_greater."], ["xfs:xfs_alloc_near_lesser", "tracepoint. xfs_alloc_near_lesser."], ["xfs:xfs_alloc_near_error", "tracepoint. xfs_alloc_near_error."], ["xfs:xfs_alloc_near_noentry", "tracepoint. xfs_alloc_near_noentry."], ["xfs:xfs_alloc_near_busy", "tracepoint. xfs_alloc_near_busy."], ["xfs:xfs_alloc_size_neither", "tracepoint. xfs_alloc_size_neither."], ["xfs:xfs_alloc_size_noentry", "tracepoint. xfs_alloc_size_noentry."], ["xfs:xfs_alloc_size_nominleft", "tracepoint. xfs_alloc_size_nominleft."], ["xfs:xfs_alloc_size_done", "tracepoint. xfs_alloc_size_done."], ["xfs:xfs_alloc_size_error", "tracepoint. xfs_alloc_size_error."], ["xfs:xfs_alloc_size_busy", "tracepoint. xfs_alloc_size_busy."], ["xfs:xfs_alloc_small_freelist", "tracepoint. xfs_alloc_small_freelist."], ["xfs:xfs_alloc_small_notenough", "tracepoint. xfs_alloc_small_notenough."], ["xfs:xfs_alloc_small_done", "tracepoint. xfs_alloc_small_done."], ["xfs:xfs_alloc_small_error", "tracepoint. xfs_alloc_small_error."], ["xfs:xfs_alloc_vextent_badargs", "tracepoint. xfs_alloc_vextent_badargs."], ["xfs:xfs_alloc_vextent_nofix", "tracepoint. xfs_alloc_vextent_nofix."], ["xfs:xfs_alloc_vextent_noagbp", "tracepoint. xfs_alloc_vextent_noagbp."], ["xfs:xfs_alloc_vextent_loopfailed", "tracepoint. xfs_alloc_vextent_loopfailed."], ["xfs:xfs_alloc_vextent_allfailed", "tracepoint. xfs_alloc_vextent_allfailed."], ["xfs:xfs_dir2_sf_addname", "tracepoint. xfs_dir2_sf_addname."], ["xfs:xfs_dir2_sf_create", "tracepoint. xfs_dir2_sf_create."], ["xfs:xfs_dir2_sf_lookup", "tracepoint. xfs_dir2_sf_lookup."], ["xfs:xfs_dir2_sf_replace", "tracepoint. xfs_dir2_sf_replace."], ["xfs:xfs_dir2_sf_removename", "tracepoint. xfs_dir2_sf_removename."], ["xfs:xfs_dir2_sf_toino4", "tracepoint. xfs_dir2_sf_toino4."], ["xfs:xfs_dir2_sf_toino8", "tracepoint. xfs_dir2_sf_toino8."], ["xfs:xfs_dir2_sf_to_block", "tracepoint. xfs_dir2_sf_to_block."], ["xfs:xfs_dir2_block_addname", "tracepoint. xfs_dir2_block_addname."], ["xfs:xfs_dir2_block_lookup", "tracepoint. xfs_dir2_block_lookup."], ["xfs:xfs_dir2_block_replace", "tracepoint. xfs_dir2_block_replace."], ["xfs:xfs_dir2_block_removename", "tracepoint. xfs_dir2_block_removename."], ["xfs:xfs_dir2_block_to_sf", "tracepoint. xfs_dir2_block_to_sf."], ["xfs:xfs_dir2_block_to_leaf", "tracepoint. xfs_dir2_block_to_leaf."], ["xfs:xfs_dir2_leaf_addname", "tracepoint. xfs_dir2_leaf_addname."], ["xfs:xfs_dir2_leaf_lookup", "tracepoint. xfs_dir2_leaf_lookup."], ["xfs:xfs_dir2_leaf_replace", "tracepoint. xfs_dir2_leaf_replace."], ["xfs:xfs_dir2_leaf_removename", "tracepoint. xfs_dir2_leaf_removename."], ["xfs:xfs_dir2_leaf_to_block", "tracepoint. xfs_dir2_leaf_to_block."], ["xfs:xfs_dir2_leaf_to_node", "tracepoint. xfs_dir2_leaf_to_node."], ["xfs:xfs_dir2_node_addname", "tracepoint. xfs_dir2_node_addname."], ["xfs:xfs_dir2_node_lookup", "tracepoint. xfs_dir2_node_lookup."], ["xfs:xfs_dir2_node_replace", "tracepoint. xfs_dir2_node_replace."], ["xfs:xfs_dir2_node_removename", "tracepoint. xfs_dir2_node_removename."], ["xfs:xfs_dir2_node_to_leaf", "tracepoint. xfs_dir2_node_to_leaf."], ["xfs:xfs_attr_sf_add", "tracepoint. xfs_attr_sf_add."], ["xfs:xfs_attr_sf_addname", "tracepoint. xfs_attr_sf_addname."], ["xfs:xfs_attr_sf_create", "tracepoint. xfs_attr_sf_create."], ["xfs:xfs_attr_sf_lookup", "tracepoint. xfs_attr_sf_lookup."], ["xfs:xfs_attr_sf_remove", "tracepoint. xfs_attr_sf_remove."], ["xfs:xfs_attr_sf_to_leaf", "tracepoint. xfs_attr_sf_to_leaf."], ["xfs:xfs_attr_leaf_add", "tracepoint. xfs_attr_leaf_add."], ["xfs:xfs_attr_leaf_add_old", "tracepoint. xfs_attr_leaf_add_old."], ["xfs:xfs_attr_leaf_add_new", "tracepoint. xfs_attr_leaf_add_new."], ["xfs:xfs_attr_leaf_add_work", "tracepoint. xfs_attr_leaf_add_work."], ["xfs:xfs_attr_leaf_addname", "tracepoint. xfs_attr_leaf_addname."], ["xfs:xfs_attr_leaf_create", "tracepoint. xfs_attr_leaf_create."], ["xfs:xfs_attr_leaf_compact", "tracepoint. xfs_attr_leaf_compact."], ["xfs:xfs_attr_leaf_get", "tracepoint. xfs_attr_leaf_get."], ["xfs:xfs_attr_leaf_lookup", "tracepoint. xfs_attr_leaf_lookup."], ["xfs:xfs_attr_leaf_replace", "tracepoint. xfs_attr_leaf_replace."], ["xfs:xfs_attr_leaf_remove", "tracepoint. xfs_attr_leaf_remove."], ["xfs:xfs_attr_leaf_removename", "tracepoint. xfs_attr_leaf_removename."], ["xfs:xfs_attr_leaf_split", "tracepoint. xfs_attr_leaf_split."], ["xfs:xfs_attr_leaf_split_before", "tracepoint. xfs_attr_leaf_split_before."], ["xfs:xfs_attr_leaf_split_after", "tracepoint. xfs_attr_leaf_split_after."], ["xfs:xfs_attr_leaf_clearflag", "tracepoint. xfs_attr_leaf_clearflag."], ["xfs:xfs_attr_leaf_setflag", "tracepoint. xfs_attr_leaf_setflag."], ["xfs:xfs_attr_leaf_flipflags", "tracepoint. xfs_attr_leaf_flipflags."], ["xfs:xfs_attr_leaf_to_sf", "tracepoint. xfs_attr_leaf_to_sf."], ["xfs:xfs_attr_leaf_to_node", "tracepoint. xfs_attr_leaf_to_node."], ["xfs:xfs_attr_leaf_rebalance", "tracepoint. xfs_attr_leaf_rebalance."], ["xfs:xfs_attr_leaf_unbalance", "tracepoint. xfs_attr_leaf_unbalance."], ["xfs:xfs_attr_leaf_toosmall", "tracepoint. xfs_attr_leaf_toosmall."], ["xfs:xfs_attr_node_addname", "tracepoint. xfs_attr_node_addname."], ["xfs:xfs_attr_node_get", "tracepoint. xfs_attr_node_get."], ["xfs:xfs_attr_node_replace", "tracepoint. xfs_attr_node_replace."], ["xfs:xfs_attr_node_removename", "tracepoint. xfs_attr_node_removename."], ["xfs:xfs_attr_fillstate", "tracepoint. xfs_attr_fillstate."], ["xfs:xfs_attr_refillstate", "tracepoint. xfs_attr_refillstate."], ["xfs:xfs_attr_rmtval_get", "tracepoint. xfs_attr_rmtval_get."], ["xfs:xfs_attr_rmtval_set", "tracepoint. xfs_attr_rmtval_set."], ["xfs:xfs_attr_rmtval_remove", "tracepoint. xfs_attr_rmtval_remove."], ["xfs:xfs_da_split", "tracepoint. xfs_da_split."], ["xfs:xfs_da_join", "tracepoint. xfs_da_join."], ["xfs:xfs_da_link_before", "tracepoint. xfs_da_link_before."], ["xfs:xfs_da_link_after", "tracepoint. xfs_da_link_after."], ["xfs:xfs_da_unlink_back", "tracepoint. xfs_da_unlink_back."], ["xfs:xfs_da_unlink_forward", "tracepoint. xfs_da_unlink_forward."], ["xfs:xfs_da_root_split", "tracepoint. xfs_da_root_split."], ["xfs:xfs_da_root_join", "tracepoint. xfs_da_root_join."], ["xfs:xfs_da_node_add", "tracepoint. xfs_da_node_add."], ["xfs:xfs_da_node_create", "tracepoint. xfs_da_node_create."], ["xfs:xfs_da_node_split", "tracepoint. xfs_da_node_split."], ["xfs:xfs_da_node_remove", "tracepoint. xfs_da_node_remove."], ["xfs:xfs_da_node_rebalance", "tracepoint. xfs_da_node_rebalance."], ["xfs:xfs_da_node_unbalance", "tracepoint. xfs_da_node_unbalance."], ["xfs:xfs_da_node_toosmall", "tracepoint. xfs_da_node_toosmall."], ["xfs:xfs_da_swap_lastblock", "tracepoint. xfs_da_swap_lastblock."], ["xfs:xfs_da_grow_inode", "tracepoint. xfs_da_grow_inode."], ["xfs:xfs_da_shrink_inode", "tracepoint. xfs_da_shrink_inode."], ["xfs:xfs_da_fixhashpath", "tracepoint. xfs_da_fixhashpath."], ["xfs:xfs_da_path_shift", "tracepoint. xfs_da_path_shift."], ["xfs:xfs_dir2_leafn_add", "tracepoint. xfs_dir2_leafn_add."], ["xfs:xfs_dir2_leafn_remove", "tracepoint. xfs_dir2_leafn_remove."], ["xfs:xfs_dir2_grow_inode", "tracepoint. xfs_dir2_grow_inode."], ["xfs:xfs_dir2_shrink_inode", "tracepoint. xfs_dir2_shrink_inode."], ["xfs:xfs_dir2_leafn_moveents", "tracepoint. xfs_dir2_leafn_moveents."], ["xfs:xfs_swap_extent_before", "tracepoint. xfs_swap_extent_before."], ["xfs:xfs_swap_extent_after", "tracepoint. xfs_swap_extent_after."], ["xfs:xfs_log_recover", "tracepoint. xfs_log_recover."], ["xfs:xfs_log_recover_record", "tracepoint. xfs_log_recover_record."], ["xfs:xfs_log_recover_item_add", "tracepoint. xfs_log_recover_item_add."], ["xfs:xfs_log_recover_item_add_cont", "tracepoint. xfs_log_recover_item_add_cont."], ["xfs:xfs_log_recover_item_reorder_head", "tracepoint. xfs_log_recover_item_reorder_head."], ["xfs:xfs_log_recover_item_reorder_tail", "tracepoint. xfs_log_recover_item_reorder_tail."], ["xfs:xfs_log_recover_item_recover", "tracepoint. xfs_log_recover_item_recover."], ["xfs:xfs_log_recover_buf_not_cancel", "tracepoint. xfs_log_recover_buf_not_cancel."], ["xfs:xfs_log_recover_buf_cancel", "tracepoint. xfs_log_recover_buf_cancel."], ["xfs:xfs_log_recover_buf_cancel_add", "tracepoint. xfs_log_recover_buf_cancel_add."], ["xfs:xfs_log_recover_buf_cancel_ref_inc", "tracepoint. xfs_log_recover_buf_cancel_ref_inc."], ["xfs:xfs_log_recover_buf_recover", "tracepoint. xfs_log_recover_buf_recover."], ["xfs:xfs_log_recover_buf_skip", "tracepoint. xfs_log_recover_buf_skip."], ["xfs:xfs_log_recover_buf_inode_buf", "tracepoint. xfs_log_recover_buf_inode_buf."], ["xfs:xfs_log_recover_buf_reg_buf", "tracepoint. xfs_log_recover_buf_reg_buf."], ["xfs:xfs_log_recover_buf_dquot_buf", "tracepoint. xfs_log_recover_buf_dquot_buf."], ["xfs:xfs_log_recover_inode_recover", "tracepoint. xfs_log_recover_inode_recover."], ["xfs:xfs_log_recover_inode_cancel", "tracepoint. xfs_log_recover_inode_cancel."], ["xfs:xfs_log_recover_inode_skip", "tracepoint. xfs_log_recover_inode_skip."], ["xfs:xfs_log_recover_icreate_cancel", "tracepoint. xfs_log_recover_icreate_cancel."], ["xfs:xfs_log_recover_icreate_recover", "tracepoint. xfs_log_recover_icreate_recover."], ["xfs:xfs_discard_extent", "tracepoint. xfs_discard_extent."], ["xfs:xfs_discard_toosmall", "tracepoint. xfs_discard_toosmall."], ["xfs:xfs_discard_exclude", "tracepoint. xfs_discard_exclude."], ["xfs:xfs_discard_busy", "tracepoint. xfs_discard_busy."], ["xfs:xfs_btree_updkeys", "tracepoint. xfs_btree_updkeys."], ["xfs:xfs_btree_overlapped_query_range", "tracepoint. xfs_btree_overlapped_query_range."], ["xfs:xfs_defer_cancel", "tracepoint. xfs_defer_cancel."], ["xfs:xfs_defer_trans_roll", "tracepoint. xfs_defer_trans_roll."], ["xfs:xfs_defer_trans_abort", "tracepoint. xfs_defer_trans_abort."], ["xfs:xfs_defer_finish", "tracepoint. xfs_defer_finish."], ["xfs:xfs_defer_finish_done", "tracepoint. xfs_defer_finish_done."], ["xfs:xfs_defer_trans_roll_error", "tracepoint. xfs_defer_trans_roll_error."], ["xfs:xfs_defer_finish_error", "tracepoint. xfs_defer_finish_error."], ["xfs:xfs_defer_create_intent", "tracepoint. xfs_defer_create_intent."], ["xfs:xfs_defer_cancel_list", "tracepoint. xfs_defer_cancel_list."], ["xfs:xfs_defer_pending_finish", "tracepoint. xfs_defer_pending_finish."], ["xfs:xfs_defer_pending_abort", "tracepoint. xfs_defer_pending_abort."], ["xfs:xfs_bmap_free_defer", "tracepoint. xfs_bmap_free_defer."], ["xfs:xfs_bmap_free_deferred", "tracepoint. xfs_bmap_free_deferred."], ["xfs:xfs_agfl_free_defer", "tracepoint. xfs_agfl_free_defer."], ["xfs:xfs_agfl_free_deferred", "tracepoint. xfs_agfl_free_deferred."], ["xfs:xfs_rmap_unmap", "tracepoint. xfs_rmap_unmap."], ["xfs:xfs_rmap_unmap_done", "tracepoint. xfs_rmap_unmap_done."], ["xfs:xfs_rmap_unmap_error", "tracepoint. xfs_rmap_unmap_error."], ["xfs:xfs_rmap_map", "tracepoint. xfs_rmap_map."], ["xfs:xfs_rmap_map_done", "tracepoint. xfs_rmap_map_done."], ["xfs:xfs_rmap_map_error", "tracepoint. xfs_rmap_map_error."], ["xfs:xfs_rmap_convert", "tracepoint. xfs_rmap_convert."], ["xfs:xfs_rmap_convert_done", "tracepoint. xfs_rmap_convert_done."], ["xfs:xfs_rmap_convert_error", "tracepoint. xfs_rmap_convert_error."], ["xfs:xfs_rmap_convert_state", "tracepoint. xfs_rmap_convert_state."], ["xfs:xfs_rmap_defer", "tracepoint. xfs_rmap_defer."], ["xfs:xfs_rmap_deferred", "tracepoint. xfs_rmap_deferred."], ["xfs:xfs_rmapbt_alloc_block", "tracepoint. xfs_rmapbt_alloc_block."], ["xfs:xfs_rmapbt_free_block", "tracepoint. xfs_rmapbt_free_block."], ["xfs:xfs_rmap_update", "tracepoint. xfs_rmap_update."], ["xfs:xfs_rmap_insert", "tracepoint. xfs_rmap_insert."], ["xfs:xfs_rmap_delete", "tracepoint. xfs_rmap_delete."], ["xfs:xfs_rmap_insert_error", "tracepoint. xfs_rmap_insert_error."], ["xfs:xfs_rmap_delete_error", "tracepoint. xfs_rmap_delete_error."], ["xfs:xfs_rmap_update_error", "tracepoint. xfs_rmap_update_error."], ["xfs:xfs_rmap_find_left_neighbor_candidate", "tracepoint. xfs_rmap_find_left_neighbor_candidate."], ["xfs:xfs_rmap_find_left_neighbor_query", "tracepoint. xfs_rmap_find_left_neighbor_query."], ["xfs:xfs_rmap_lookup_le_range_candidate", "tracepoint. xfs_rmap_lookup_le_range_candidate."], ["xfs:xfs_rmap_lookup_le_range", "tracepoint. xfs_rmap_lookup_le_range."], ["xfs:xfs_rmap_lookup_le_range_result", "tracepoint. xfs_rmap_lookup_le_range_result."], ["xfs:xfs_rmap_find_right_neighbor_result", "tracepoint. xfs_rmap_find_right_neighbor_result."], ["xfs:xfs_rmap_find_left_neighbor_result", "tracepoint. xfs_rmap_find_left_neighbor_result."], ["xfs:xfs_bmap_defer", "tracepoint. xfs_bmap_defer."], ["xfs:xfs_bmap_deferred", "tracepoint. xfs_bmap_deferred."], ["xfs:xfs_ag_resv_init", "tracepoint. xfs_ag_resv_init."], ["xfs:xfs_ag_resv_free", "tracepoint. xfs_ag_resv_free."], ["xfs:xfs_ag_resv_alloc_extent", "tracepoint. xfs_ag_resv_alloc_extent."], ["xfs:xfs_ag_resv_free_extent", "tracepoint. xfs_ag_resv_free_extent."], ["xfs:xfs_ag_resv_critical", "tracepoint. xfs_ag_resv_critical."], ["xfs:xfs_ag_resv_needed", "tracepoint. xfs_ag_resv_needed."], ["xfs:xfs_ag_resv_free_error", "tracepoint. xfs_ag_resv_free_error."], ["xfs:xfs_ag_resv_init_error", "tracepoint. xfs_ag_resv_init_error."], ["xfs:xfs_refcountbt_alloc_block", "tracepoint. xfs_refcountbt_alloc_block."], ["xfs:xfs_refcountbt_free_block", "tracepoint. xfs_refcountbt_free_block."], ["xfs:xfs_refcount_lookup", "tracepoint. xfs_refcount_lookup."], ["xfs:xfs_refcount_get", "tracepoint. xfs_refcount_get."], ["xfs:xfs_refcount_update", "tracepoint. xfs_refcount_update."], ["xfs:xfs_refcount_insert", "tracepoint. xfs_refcount_insert."], ["xfs:xfs_refcount_delete", "tracepoint. xfs_refcount_delete."], ["xfs:xfs_refcount_insert_error", "tracepoint. xfs_refcount_insert_error."], ["xfs:xfs_refcount_delete_error", "tracepoint. xfs_refcount_delete_error."], ["xfs:xfs_refcount_update_error", "tracepoint. xfs_refcount_update_error."], ["xfs:xfs_refcount_increase", "tracepoint. xfs_refcount_increase."], ["xfs:xfs_refcount_decrease", "tracepoint. xfs_refcount_decrease."], ["xfs:xfs_refcount_cow_increase", "tracepoint. xfs_refcount_cow_increase."], ["xfs:xfs_refcount_cow_decrease", "tracepoint. xfs_refcount_cow_decrease."], ["xfs:xfs_refcount_merge_center_extents", "tracepoint. xfs_refcount_merge_center_extents."], ["xfs:xfs_refcount_modify_extent", "tracepoint. xfs_refcount_modify_extent."], ["xfs:xfs_refcount_recover_extent", "tracepoint. xfs_refcount_recover_extent."], ["xfs:xfs_refcount_split_extent", "tracepoint. xfs_refcount_split_extent."], ["xfs:xfs_refcount_merge_left_extent", "tracepoint. xfs_refcount_merge_left_extent."], ["xfs:xfs_refcount_merge_right_extent", "tracepoint. xfs_refcount_merge_right_extent."], ["xfs:xfs_refcount_find_left_extent", "tracepoint. xfs_refcount_find_left_extent."], ["xfs:xfs_refcount_find_right_extent", "tracepoint. xfs_refcount_find_right_extent."], ["xfs:xfs_refcount_adjust_error", "tracepoint. xfs_refcount_adjust_error."], ["xfs:xfs_refcount_adjust_cow_error", "tracepoint. xfs_refcount_adjust_cow_error."], ["xfs:xfs_refcount_merge_center_extents_error", "tracepoint. xfs_refcount_merge_center_extents_error."], ["xfs:xfs_refcount_modify_extent_error", "tracepoint. xfs_refcount_modify_extent_error."], ["xfs:xfs_refcount_split_extent_error", "tracepoint. xfs_refcount_split_extent_error."], ["xfs:xfs_refcount_merge_left_extent_error", "tracepoint. xfs_refcount_merge_left_extent_error."], ["xfs:xfs_refcount_merge_right_extent_error", "tracepoint. xfs_refcount_merge_right_extent_error."], ["xfs:xfs_refcount_find_left_extent_error", "tracepoint. xfs_refcount_find_left_extent_error."], ["xfs:xfs_refcount_find_right_extent_error", "tracepoint. xfs_refcount_find_right_extent_error."], ["xfs:xfs_refcount_find_shared", "tracepoint. xfs_refcount_find_shared."], ["xfs:xfs_refcount_find_shared_result", "tracepoint. xfs_refcount_find_shared_result."], ["xfs:xfs_refcount_find_shared_error", "tracepoint. xfs_refcount_find_shared_error."], ["xfs:xfs_refcount_defer", "tracepoint. xfs_refcount_defer."], ["xfs:xfs_refcount_deferred", "tracepoint. xfs_refcount_deferred."], ["xfs:xfs_refcount_finish_one_leftover", "tracepoint. xfs_refcount_finish_one_leftover."], ["xfs:xfs_reflink_set_inode_flag", "tracepoint. xfs_reflink_set_inode_flag."], ["xfs:xfs_reflink_unset_inode_flag", "tracepoint. xfs_reflink_unset_inode_flag."], ["xfs:xfs_reflink_update_inode_size", "tracepoint. xfs_reflink_update_inode_size."], ["xfs:xfs_reflink_remap_imap", "tracepoint. xfs_reflink_remap_imap."], ["xfs:xfs_reflink_remap_blocks_loop", "tracepoint. xfs_reflink_remap_blocks_loop."], ["xfs:xfs_reflink_punch_range", "tracepoint. xfs_reflink_punch_range."], ["xfs:xfs_reflink_remap", "tracepoint. xfs_reflink_remap."], ["xfs:xfs_reflink_remap_range", "tracepoint. xfs_reflink_remap_range."], ["xfs:xfs_reflink_remap_range_error", "tracepoint. xfs_reflink_remap_range_error."], ["xfs:xfs_reflink_set_inode_flag_error", "tracepoint. xfs_reflink_set_inode_flag_error."], ["xfs:xfs_reflink_update_inode_size_error", "tracepoint. xfs_reflink_update_inode_size_error."], ["xfs:xfs_reflink_remap_blocks_error", "tracepoint. xfs_reflink_remap_blocks_error."], ["xfs:xfs_reflink_remap_extent_error", "tracepoint. xfs_reflink_remap_extent_error."], ["xfs:xfs_reflink_compare_extents", "tracepoint. xfs_reflink_compare_extents."], ["xfs:xfs_reflink_compare_extents_error", "tracepoint. xfs_reflink_compare_extents_error."], ["xfs:xfs_ioctl_clone", "tracepoint. xfs_ioctl_clone."], ["xfs:xfs_reflink_unshare", "tracepoint. xfs_reflink_unshare."], ["xfs:xfs_reflink_unshare_error", "tracepoint. xfs_reflink_unshare_error."], ["xfs:xfs_reflink_trim_around_shared", "tracepoint. xfs_reflink_trim_around_shared."], ["xfs:xfs_reflink_cow_found", "tracepoint. xfs_reflink_cow_found."], ["xfs:xfs_reflink_cow_enospc", "tracepoint. xfs_reflink_cow_enospc."], ["xfs:xfs_reflink_convert_cow", "tracepoint. xfs_reflink_convert_cow."], ["xfs:xfs_reflink_bounce_dio_write", "tracepoint. xfs_reflink_bounce_dio_write."], ["xfs:xfs_reflink_cancel_cow_range", "tracepoint. xfs_reflink_cancel_cow_range."], ["xfs:xfs_reflink_end_cow", "tracepoint. xfs_reflink_end_cow."], ["xfs:xfs_reflink_cow_remap", "tracepoint. xfs_reflink_cow_remap."], ["xfs:xfs_reflink_cancel_cow_range_error", "tracepoint. xfs_reflink_cancel_cow_range_error."], ["xfs:xfs_reflink_end_cow_error", "tracepoint. xfs_reflink_end_cow_error."], ["xfs:xfs_reflink_cancel_cow", "tracepoint. xfs_reflink_cancel_cow."], ["xfs:xfs_swap_extent_rmap_remap", "tracepoint. xfs_swap_extent_rmap_remap."], ["xfs:xfs_swap_extent_rmap_remap_piece", "tracepoint. xfs_swap_extent_rmap_remap_piece."], ["xfs:xfs_swap_extent_rmap_error", "tracepoint. xfs_swap_extent_rmap_error."], ["xfs:xfs_fsmap_low_key", "tracepoint. xfs_fsmap_low_key."], ["xfs:xfs_fsmap_high_key", "tracepoint. xfs_fsmap_high_key."], ["xfs:xfs_fsmap_mapping", "tracepoint. xfs_fsmap_mapping."], ["xfs:xfs_getfsmap_low_key", "tracepoint. xfs_getfsmap_low_key."], ["xfs:xfs_getfsmap_high_key", "tracepoint. xfs_getfsmap_high_key."], ["xfs:xfs_getfsmap_mapping", "tracepoint. xfs_getfsmap_mapping."], ["xfs:xfs_trans_resv_calc", "tracepoint. xfs_trans_resv_calc."], ["xfs:xfs_trans_alloc", "tracepoint. xfs_trans_alloc."], ["xfs:xfs_trans_cancel", "tracepoint. xfs_trans_cancel."], ["xfs:xfs_trans_commit", "tracepoint. xfs_trans_commit."], ["xfs:xfs_trans_dup", "tracepoint. xfs_trans_dup."], ["xfs:xfs_trans_free", "tracepoint. xfs_trans_free."], ["xfs:xfs_trans_roll", "tracepoint. xfs_trans_roll."], ["xfs:xfs_trans_add_item", "tracepoint. xfs_trans_add_item."], ["xfs:xfs_trans_commit_items", "tracepoint. xfs_trans_commit_items."], ["xfs:xfs_trans_free_items", "tracepoint. xfs_trans_free_items."], ["xfs:xfs_iunlink_update_bucket", "tracepoint. xfs_iunlink_update_bucket."], ["xfs:xfs_iunlink_update_dinode", "tracepoint. xfs_iunlink_update_dinode."], ["xfs:xfs_iunlink", "tracepoint. xfs_iunlink."], ["xfs:xfs_iunlink_remove", "tracepoint. xfs_iunlink_remove."], ["xfs:xfs_iunlink_map_prev_fallback", "tracepoint. xfs_iunlink_map_prev_fallback."], ["xfs:xfs_fs_mark_sick", "tracepoint. xfs_fs_mark_sick."], ["xfs:xfs_fs_mark_healthy", "tracepoint. xfs_fs_mark_healthy."], ["xfs:xfs_fs_unfixed_corruption", "tracepoint. xfs_fs_unfixed_corruption."], ["xfs:xfs_rt_mark_sick", "tracepoint. xfs_rt_mark_sick."], ["xfs:xfs_rt_mark_healthy", "tracepoint. xfs_rt_mark_healthy."], ["xfs:xfs_rt_unfixed_corruption", "tracepoint. xfs_rt_unfixed_corruption."], ["xfs:xfs_ag_mark_sick", "tracepoint. xfs_ag_mark_sick."], ["xfs:xfs_ag_mark_healthy", "tracepoint. xfs_ag_mark_healthy."], ["xfs:xfs_ag_unfixed_corruption", "tracepoint. xfs_ag_unfixed_corruption."], ["xfs:xfs_inode_mark_sick", "tracepoint. xfs_inode_mark_sick."], ["xfs:xfs_inode_mark_healthy", "tracepoint. xfs_inode_mark_healthy."], ["xfs:xfs_iwalk_ag", "tracepoint. xfs_iwalk_ag."], ["xfs:xfs_iwalk_ag_rec", "tracepoint. xfs_iwalk_ag_rec."], ["xfs:xfs_pwork_init", "tracepoint. xfs_pwork_init."], ["xfs:kmem_alloc", "tracepoint. kmem_alloc."], ["xfs:kmem_alloc_io", "tracepoint. kmem_alloc_io."], ["xfs:kmem_alloc_large", "tracepoint. kmem_alloc_large."], ["xfs:kmem_realloc", "tracepoint. kmem_realloc."], ["xfs:kmem_zone_alloc", "tracepoint. kmem_zone_alloc."], ["xfs:xfs_check_new_dalign", "tracepoint. xfs_check_new_dalign."], ["kvmmmu:kvm_mmu_pagetable_walk", "tracepoint. kvm_mmu_pagetable_walk."], ["kvmmmu:kvm_mmu_paging_element", "tracepoint. kvm_mmu_paging_element."], ["kvmmmu:kvm_mmu_set_accessed_bit", "tracepoint. kvm_mmu_set_accessed_bit."], ["kvmmmu:kvm_mmu_set_dirty_bit", "tracepoint. kvm_mmu_set_dirty_bit."], ["kvmmmu:kvm_mmu_walker_error", "tracepoint. kvm_mmu_walker_error."], ["kvmmmu:kvm_mmu_get_page", "tracepoint. kvm_mmu_get_page."], ["kvmmmu:kvm_mmu_sync_page", "tracepoint. kvm_mmu_sync_page."], ["kvmmmu:kvm_mmu_unsync_page", "tracepoint. kvm_mmu_unsync_page."], ["kvmmmu:kvm_mmu_prepare_zap_page", "tracepoint. kvm_mmu_prepare_zap_page."], ["kvmmmu:mark_mmio_spte", "tracepoint. mark_mmio_spte."], ["kvmmmu:handle_mmio_page_fault", "tracepoint. handle_mmio_page_fault."], ["kvmmmu:fast_page_fault", "tracepoint. fast_page_fault."], ["kvmmmu:kvm_mmu_zap_all_fast", "tracepoint. kvm_mmu_zap_all_fast."], ["kvmmmu:check_mmio_spte", "tracepoint. check_mmio_spte."], ["kvmmmu:kvm_mmu_set_spte", "tracepoint. kvm_mmu_set_spte."], ["kvmmmu:kvm_mmu_spte_requested", "tracepoint. kvm_mmu_spte_requested."], ["kvm:kvm_entry", "tracepoint. kvm_entry."], ["kvm:kvm_hypercall", "tracepoint. kvm_hypercall."], ["kvm:kvm_hv_hypercall", "tracepoint. kvm_hv_hypercall."], ["kvm:kvm_pio", "tracepoint. kvm_pio."], ["kvm:kvm_fast_mmio", "tracepoint. kvm_fast_mmio."], ["kvm:kvm_cpuid", "tracepoint. kvm_cpuid."], ["kvm:kvm_apic", "tracepoint. kvm_apic."], ["kvm:kvm_exit", "tracepoint. kvm_exit."], ["kvm:kvm_inj_virq", "tracepoint. kvm_inj_virq."], ["kvm:kvm_inj_exception", "tracepoint. kvm_inj_exception."], ["kvm:kvm_page_fault", "tracepoint. kvm_page_fault."], ["kvm:kvm_msr", "tracepoint. kvm_msr."], ["kvm:kvm_cr", "tracepoint. kvm_cr."], ["kvm:kvm_pic_set_irq", "tracepoint. kvm_pic_set_irq."], ["kvm:kvm_apic_ipi", "tracepoint. kvm_apic_ipi."], ["kvm:kvm_apic_accept_irq", "tracepoint. kvm_apic_accept_irq."], ["kvm:kvm_eoi", "tracepoint. kvm_eoi."], ["kvm:kvm_pv_eoi", "tracepoint. kvm_pv_eoi."], ["kvm:kvm_nested_vmrun", "tracepoint. kvm_nested_vmrun."], ["kvm:kvm_nested_intercepts", "tracepoint. kvm_nested_intercepts."], ["kvm:kvm_nested_vmexit", "tracepoint. kvm_nested_vmexit."], ["kvm:kvm_nested_vmexit_inject", "tracepoint. kvm_nested_vmexit_inject."], ["kvm:kvm_nested_intr_vmexit", "tracepoint. kvm_nested_intr_vmexit."], ["kvm:kvm_invlpga", "tracepoint. kvm_invlpga."], ["kvm:kvm_skinit", "tracepoint. kvm_skinit."], ["kvm:kvm_emulate_insn", "tracepoint. kvm_emulate_insn."], ["kvm:vcpu_match_mmio", "tracepoint. vcpu_match_mmio."], ["kvm:kvm_write_tsc_offset", "tracepoint. kvm_write_tsc_offset."], ["kvm:kvm_update_master_clock", "tracepoint. kvm_update_master_clock."], ["kvm:kvm_track_tsc", "tracepoint. kvm_track_tsc."], ["kvm:kvm_pml_full", "tracepoint. kvm_pml_full."], ["kvm:kvm_ple_window_update", "tracepoint. kvm_ple_window_update."], ["kvm:kvm_pvclock_update", "tracepoint. kvm_pvclock_update."], ["kvm:kvm_wait_lapic_expire", "tracepoint. kvm_wait_lapic_expire."], ["kvm:kvm_enter_smm", "tracepoint. kvm_enter_smm."], ["kvm:kvm_pi_irte_update", "tracepoint. kvm_pi_irte_update."], ["kvm:kvm_hv_notify_acked_sint", "tracepoint. kvm_hv_notify_acked_sint."], ["kvm:kvm_hv_synic_set_irq", "tracepoint. kvm_hv_synic_set_irq."], ["kvm:kvm_hv_synic_send_eoi", "tracepoint. kvm_hv_synic_send_eoi."], ["kvm:kvm_hv_synic_set_msr", "tracepoint. kvm_hv_synic_set_msr."], ["kvm:kvm_hv_stimer_set_config", "tracepoint. kvm_hv_stimer_set_config."], ["kvm:kvm_hv_stimer_set_count", "tracepoint. kvm_hv_stimer_set_count."], ["kvm:kvm_hv_stimer_start_periodic", "tracepoint. kvm_hv_stimer_start_periodic."], ["kvm:kvm_hv_stimer_start_one_shot", "tracepoint. kvm_hv_stimer_start_one_shot."], ["kvm:kvm_hv_stimer_callback", "tracepoint. kvm_hv_stimer_callback."], ["kvm:kvm_hv_stimer_expiration", "tracepoint. kvm_hv_stimer_expiration."], ["kvm:kvm_hv_stimer_cleanup", "tracepoint. kvm_hv_stimer_cleanup."], ["kvm:kvm_avic_incomplete_ipi", "tracepoint. kvm_avic_incomplete_ipi."], ["kvm:kvm_avic_unaccelerated_access", "tracepoint. kvm_avic_unaccelerated_access."], ["kvm:kvm_hv_timer_state", "tracepoint. kvm_hv_timer_state."], ["kvm:kvm_hv_flush_tlb", "tracepoint. kvm_hv_flush_tlb."], ["kvm:kvm_hv_flush_tlb_ex", "tracepoint. kvm_hv_flush_tlb_ex."], ["kvm:kvm_hv_send_ipi", "tracepoint. kvm_hv_send_ipi."], ["kvm:kvm_hv_send_ipi_ex", "tracepoint. kvm_hv_send_ipi_ex."], ["kvm:kvm_pv_tlb_flush", "tracepoint. kvm_pv_tlb_flush."], ["kvm:kvm_nested_vmenter_failed", "tracepoint. kvm_nested_vmenter_failed."], ["kvm:kvm_userspace_exit", "tracepoint. kvm_userspace_exit."], ["kvm:kvm_vcpu_wakeup", "tracepoint. kvm_vcpu_wakeup."], ["kvm:kvm_set_irq", "tracepoint. kvm_set_irq."], ["kvm:kvm_ioapic_set_irq", "tracepoint. kvm_ioapic_set_irq."], ["kvm:kvm_ioapic_delayed_eoi_inj", "tracepoint. kvm_ioapic_delayed_eoi_inj."], ["kvm:kvm_msi_set_irq", "tracepoint. kvm_msi_set_irq."], ["kvm:kvm_ack_irq", "tracepoint. kvm_ack_irq."], ["kvm:kvm_mmio", "tracepoint. kvm_mmio."], ["kvm:kvm_fpu", "tracepoint. kvm_fpu."], ["kvm:kvm_age_page", "tracepoint. kvm_age_page."], ["kvm:kvm_try_async_get_page", "tracepoint. kvm_try_async_get_page."], ["kvm:kvm_async_pf_doublefault", "tracepoint. kvm_async_pf_doublefault."], ["kvm:kvm_async_pf_not_present", "tracepoint. kvm_async_pf_not_present."], ["kvm:kvm_async_pf_ready", "tracepoint. kvm_async_pf_ready."], ["kvm:kvm_async_pf_completed", "tracepoint. kvm_async_pf_completed."], ["kvm:kvm_halt_poll_ns", "tracepoint. kvm_halt_poll_ns."], ["hda_intel:azx_suspend", "tracepoint. azx_suspend."], ["hda_intel:azx_resume", "tracepoint. azx_resume."], ["hda_intel:azx_runtime_suspend", "tracepoint. azx_runtime_suspend."], ["hda_intel:azx_runtime_resume", "tracepoint. azx_runtime_resume."], ["hda_controller:azx_pcm_trigger", "tracepoint. azx_pcm_trigger."], ["hda_controller:azx_get_position", "tracepoint. azx_get_position."], ["hda_controller:azx_pcm_open", "tracepoint. azx_pcm_open."], ["hda_controller:azx_pcm_close", "tracepoint. azx_pcm_close."], ["hda_controller:azx_pcm_hw_params", "tracepoint. azx_pcm_hw_params."], ["hda_controller:azx_pcm_prepare", "tracepoint. azx_pcm_prepare."], ["hda:hda_send_cmd", "tracepoint. hda_send_cmd."], ["hda:hda_get_response", "tracepoint. hda_get_response."], ["hda:hda_unsol_event", "tracepoint. hda_unsol_event."], ["hda:snd_hdac_stream_start", "tracepoint. snd_hdac_stream_start."], ["hda:snd_hdac_stream_stop", "tracepoint. snd_hdac_stream_stop."], ["drm:drm_vblank_event", "tracepoint. drm_vblank_event."], ["drm:drm_vblank_event_queued", "tracepoint. drm_vblank_event_queued."], ["drm:drm_vblank_event_delivered", "tracepoint. drm_vblank_event_delivered."], ["mei:mei_reg_read", "tracepoint. mei_reg_read."], ["mei:mei_reg_write", "tracepoint. mei_reg_write."], ["mei:mei_pci_cfg_read", "tracepoint. mei_pci_cfg_read."], ["fib6:fib6_table_lookup", "tracepoint. fib6_table_lookup."], ["bpf_test_run:bpf_test_finish", "tracepoint. bpf_test_finish."], ["devlink:devlink_hwmsg", "tracepoint. devlink_hwmsg."], ["devlink:devlink_hwerr", "tracepoint. devlink_hwerr."], ["devlink:devlink_health_report", "tracepoint. devlink_health_report."], ["devlink:devlink_health_recover_aborted", "tracepoint. devlink_health_recover_aborted."], ["devlink:devlink_health_reporter_state_update", "tracepoint. devlink_health_reporter_state_update."], ["skb:kfree_skb", "tracepoint. kfree_skb."], ["skb:consume_skb", "tracepoint. consume_skb."], ["skb:skb_copy_datagram_iovec", "tracepoint. skb_copy_datagram_iovec."], ["net:net_dev_start_xmit", "tracepoint. net_dev_start_xmit."], ["net:net_dev_xmit", "tracepoint. net_dev_xmit."], ["net:net_dev_xmit_timeout", "tracepoint. net_dev_xmit_timeout."], ["net:net_dev_queue", "tracepoint. net_dev_queue."], ["net:netif_receive_skb", "tracepoint. netif_receive_skb."], ["net:netif_rx", "tracepoint. netif_rx."], ["net:napi_gro_frags_entry", "tracepoint. napi_gro_frags_entry."], ["net:napi_gro_receive_entry", "tracepoint. napi_gro_receive_entry."], ["net:netif_receive_skb_entry", "tracepoint. netif_receive_skb_entry."], ["net:netif_receive_skb_list_entry", "tracepoint. netif_receive_skb_list_entry."], ["net:netif_rx_entry", "tracepoint. netif_rx_entry."], ["net:netif_rx_ni_entry", "tracepoint. netif_rx_ni_entry."], ["net:napi_gro_frags_exit", "tracepoint. napi_gro_frags_exit."], ["net:napi_gro_receive_exit", "tracepoint. napi_gro_receive_exit."], ["net:netif_receive_skb_exit", "tracepoint. netif_receive_skb_exit."], ["net:netif_rx_exit", "tracepoint. netif_rx_exit."], ["net:netif_rx_ni_exit", "tracepoint. netif_rx_ni_exit."], ["net:netif_receive_skb_list_exit", "tracepoint. netif_receive_skb_list_exit."], ["napi:napi_poll", "tracepoint. napi_poll."], ["sock:sock_rcvqueue_full", "tracepoint. sock_rcvqueue_full."], ["sock:sock_exceed_buf_limit", "tracepoint. sock_exceed_buf_limit."], ["sock:inet_sock_set_state", "tracepoint. inet_sock_set_state."], ["udp:udp_fail_queue_rcv_skb", "tracepoint. udp_fail_queue_rcv_skb."], ["tcp:tcp_retransmit_skb", "tracepoint. tcp_retransmit_skb."], ["tcp:tcp_send_reset", "tracepoint. tcp_send_reset."], ["tcp:tcp_receive_reset", "tracepoint. tcp_receive_reset."], ["tcp:tcp_destroy_sock", "tracepoint. tcp_destroy_sock."], ["tcp:tcp_rcv_space_adjust", "tracepoint. tcp_rcv_space_adjust."], ["tcp:tcp_retransmit_synack", "tracepoint. tcp_retransmit_synack."], ["tcp:tcp_probe", "tracepoint. tcp_probe."], ["fib:fib_table_lookup", "tracepoint. fib_table_lookup."], ["qdisc:qdisc_dequeue", "tracepoint. qdisc_dequeue."], ["bridge:br_fdb_add", "tracepoint. br_fdb_add."], ["bridge:br_fdb_external_learn_add", "tracepoint. br_fdb_external_learn_add."], ["bridge:fdb_delete", "tracepoint. fdb_delete."], ["bridge:br_fdb_update", "tracepoint. br_fdb_update."], ["page_pool:page_pool_inflight", "tracepoint. page_pool_inflight."], ["page_pool:page_pool_state_release", "tracepoint. page_pool_state_release."], ["page_pool:page_pool_state_hold", "tracepoint. page_pool_state_hold."], ["neigh:neigh_create", "tracepoint. neigh_create."], ["neigh:neigh_update", "tracepoint. neigh_update."], ["neigh:neigh_update_done", "tracepoint. neigh_update_done."], ["neigh:neigh_timer_handler", "tracepoint. neigh_timer_handler."], ["neigh:neigh_event_send_done", "tracepoint. neigh_event_send_done."], ["neigh:neigh_event_send_dead", "tracepoint. neigh_event_send_dead."], ["neigh:neigh_cleanup_and_release", "tracepoint. neigh_cleanup_and_release."], ["ras:extlog_mem_event", "tracepoint. extlog_mem_event."], ["ras:mc_event", "tracepoint. mc_event."], ["ras:arm_event", "tracepoint. arm_event."], ["ras:non_standard_event", "tracepoint. non_standard_event."], ["ras:aer_event", "tracepoint. aer_event."], ["ras:memory_failure_event", "tracepoint. memory_failure_event."], ["devfreq:devfreq_monitor", "tracepoint. devfreq_monitor."], ["cros_ec:cros_ec_cmd", "tracepoint. cros_ec_cmd."], ["mmc:mmc_request_start", "tracepoint. mmc_request_start."], ["mmc:mmc_request_done", "tracepoint. mmc_request_done."], ["thermal_power_allocator:thermal_power_allocator", "tracepoint. thermal_power_allocator."], ["thermal_power_allocator:thermal_power_allocator_pid", "tracepoint. thermal_power_allocator_pid."], ["thermal:thermal_temperature", "tracepoint. thermal_temperature."], ["thermal:cdev_update", "tracepoint. cdev_update."], ["thermal:thermal_zone_trip", "tracepoint. thermal_zone_trip."], ["thermal:thermal_power_devfreq_get_power", "tracepoint. thermal_power_devfreq_get_power."], ["thermal:thermal_power_devfreq_limit", "tracepoint. thermal_power_devfreq_limit."], ["hwmon:hwmon_attr_show", "tracepoint. hwmon_attr_show."], ["hwmon:hwmon_attr_store", "tracepoint. hwmon_attr_store."], ["hwmon:hwmon_attr_show_string", "tracepoint. hwmon_attr_show_string."], ["smbus:smbus_write", "tracepoint. smbus_write."], ["smbus:smbus_read", "tracepoint. smbus_read."], ["smbus:smbus_reply", "tracepoint. smbus_reply."], ["smbus:smbus_result", "tracepoint. smbus_result."], ["i2c:i2c_write", "tracepoint. i2c_write."], ["i2c:i2c_read", "tracepoint. i2c_read."], ["i2c:i2c_reply", "tracepoint. i2c_reply."], ["i2c:i2c_result", "tracepoint. i2c_result."], ["rtc:rtc_set_time", "tracepoint. rtc_set_time."], ["rtc:rtc_read_time", "tracepoint. rtc_read_time."], ["rtc:rtc_set_alarm", "tracepoint. rtc_set_alarm."], ["rtc:rtc_read_alarm", "tracepoint. rtc_read_alarm."], ["rtc:rtc_irq_set_freq", "tracepoint. rtc_irq_set_freq."], ["rtc:rtc_irq_set_state", "tracepoint. rtc_irq_set_state."], ["rtc:rtc_alarm_irq_enable", "tracepoint. rtc_alarm_irq_enable."], ["rtc:rtc_set_offset", "tracepoint. rtc_set_offset."], ["rtc:rtc_read_offset", "tracepoint. rtc_read_offset."], ["rtc:rtc_timer_enqueue", "tracepoint. rtc_timer_enqueue."], ["rtc:rtc_timer_dequeue", "tracepoint. rtc_timer_dequeue."], ["rtc:rtc_timer_fired", "tracepoint. rtc_timer_fired."], ["xhci-hcd:xhci_dbg_address", "tracepoint. xhci_dbg_address."], ["xhci-hcd:xhci_dbg_context_change", "tracepoint. xhci_dbg_context_change."], ["xhci-hcd:xhci_dbg_quirks", "tracepoint. xhci_dbg_quirks."], ["xhci-hcd:xhci_dbg_reset_ep", "tracepoint. xhci_dbg_reset_ep."], ["xhci-hcd:xhci_dbg_cancel_urb", "tracepoint. xhci_dbg_cancel_urb."], ["xhci-hcd:xhci_dbg_init", "tracepoint. xhci_dbg_init."], ["xhci-hcd:xhci_dbg_ring_expansion", "tracepoint. xhci_dbg_ring_expansion."], ["xhci-hcd:xhci_address_ctx", "tracepoint. xhci_address_ctx."], ["xhci-hcd:xhci_handle_event", "tracepoint. xhci_handle_event."], ["xhci-hcd:xhci_handle_command", "tracepoint. xhci_handle_command."], ["xhci-hcd:xhci_handle_transfer", "tracepoint. xhci_handle_transfer."], ["xhci-hcd:xhci_queue_trb", "tracepoint. xhci_queue_trb."], ["xhci-hcd:xhci_dbc_handle_event", "tracepoint. xhci_dbc_handle_event."], ["xhci-hcd:xhci_dbc_handle_transfer", "tracepoint. xhci_dbc_handle_transfer."], ["xhci-hcd:xhci_dbc_gadget_ep_queue", "tracepoint. xhci_dbc_gadget_ep_queue."], ["xhci-hcd:xhci_free_virt_device", "tracepoint. xhci_free_virt_device."], ["xhci-hcd:xhci_alloc_virt_device", "tracepoint. xhci_alloc_virt_device."], ["xhci-hcd:xhci_setup_device", "tracepoint. xhci_setup_device."], ["xhci-hcd:xhci_setup_addressable_virt_device", "tracepoint. xhci_setup_addressable_virt_device."], ["xhci-hcd:xhci_stop_device", "tracepoint. xhci_stop_device."], ["xhci-hcd:xhci_urb_enqueue", "tracepoint. xhci_urb_enqueue."], ["xhci-hcd:xhci_urb_giveback", "tracepoint. xhci_urb_giveback."], ["xhci-hcd:xhci_urb_dequeue", "tracepoint. xhci_urb_dequeue."], ["xhci-hcd:xhci_handle_cmd_stop_ep", "tracepoint. xhci_handle_cmd_stop_ep."], ["xhci-hcd:xhci_handle_cmd_set_deq_ep", "tracepoint. xhci_handle_cmd_set_deq_ep."], ["xhci-hcd:xhci_handle_cmd_reset_ep", "tracepoint. xhci_handle_cmd_reset_ep."], ["xhci-hcd:xhci_handle_cmd_config_ep", "tracepoint. xhci_handle_cmd_config_ep."], ["xhci-hcd:xhci_add_endpoint", "tracepoint. xhci_add_endpoint."], ["xhci-hcd:xhci_alloc_dev", "tracepoint. xhci_alloc_dev."], ["xhci-hcd:xhci_free_dev", "tracepoint. xhci_free_dev."], ["xhci-hcd:xhci_handle_cmd_disable_slot", "tracepoint. xhci_handle_cmd_disable_slot."], ["xhci-hcd:xhci_discover_or_reset_device", "tracepoint. xhci_discover_or_reset_device."], ["xhci-hcd:xhci_setup_device_slot", "tracepoint. xhci_setup_device_slot."], ["xhci-hcd:xhci_handle_cmd_addr_dev", "tracepoint. xhci_handle_cmd_addr_dev."], ["xhci-hcd:xhci_handle_cmd_reset_dev", "tracepoint. xhci_handle_cmd_reset_dev."], ["xhci-hcd:xhci_handle_cmd_set_deq", "tracepoint. xhci_handle_cmd_set_deq."], ["xhci-hcd:xhci_configure_endpoint", "tracepoint. xhci_configure_endpoint."], ["xhci-hcd:xhci_address_ctrl_ctx", "tracepoint. xhci_address_ctrl_ctx."], ["xhci-hcd:xhci_configure_endpoint_ctrl_ctx", "tracepoint. xhci_configure_endpoint_ctrl_ctx."], ["xhci-hcd:xhci_ring_alloc", "tracepoint. xhci_ring_alloc."], ["xhci-hcd:xhci_ring_free", "tracepoint. xhci_ring_free."], ["xhci-hcd:xhci_ring_expansion", "tracepoint. xhci_ring_expansion."], ["xhci-hcd:xhci_inc_enq", "tracepoint. xhci_inc_enq."], ["xhci-hcd:xhci_inc_deq", "tracepoint. xhci_inc_deq."], ["xhci-hcd:xhci_handle_port_status", "tracepoint. xhci_handle_port_status."], ["xhci-hcd:xhci_get_port_status", "tracepoint. xhci_get_port_status."], ["xhci-hcd:xhci_hub_status_data", "tracepoint. xhci_hub_status_data."], ["xhci-hcd:xhci_dbc_alloc_request", "tracepoint. xhci_dbc_alloc_request."], ["xhci-hcd:xhci_dbc_free_request", "tracepoint. xhci_dbc_free_request."], ["xhci-hcd:xhci_dbc_queue_request", "tracepoint. xhci_dbc_queue_request."], ["xhci-hcd:xhci_dbc_giveback_request", "tracepoint. xhci_dbc_giveback_request."], ["mdio:mdio_access", "tracepoint. mdio_access."], ["spi:spi_controller_idle", "tracepoint. spi_controller_idle."], ["spi:spi_controller_busy", "tracepoint. spi_controller_busy."], ["spi:spi_message_submit", "tracepoint. spi_message_submit."], ["spi:spi_message_start", "tracepoint. spi_message_start."], ["spi:spi_message_done", "tracepoint. spi_message_done."], ["spi:spi_transfer_start", "tracepoint. spi_transfer_start."], ["spi:spi_transfer_stop", "tracepoint. spi_transfer_stop."], ["libata:ata_qc_issue", "tracepoint. ata_qc_issue."], ["libata:ata_qc_complete_internal", "tracepoint. ata_qc_complete_internal."], ["libata:ata_qc_complete_failed", "tracepoint. ata_qc_complete_failed."], ["libata:ata_qc_complete_done", "tracepoint. ata_qc_complete_done."], ["libata:ata_eh_link_autopsy", "tracepoint. ata_eh_link_autopsy."], ["libata:ata_eh_link_autopsy_qc", "tracepoint. ata_eh_link_autopsy_qc."], ["scsi:scsi_dispatch_cmd_start", "tracepoint. scsi_dispatch_cmd_start."], ["scsi:scsi_dispatch_cmd_error", "tracepoint. scsi_dispatch_cmd_error."], ["scsi:scsi_dispatch_cmd_done", "tracepoint. scsi_dispatch_cmd_done."], ["scsi:scsi_dispatch_cmd_timeout", "tracepoint. scsi_dispatch_cmd_timeout."], ["scsi:scsi_eh_wakeup", "tracepoint. scsi_eh_wakeup."], ["sync_trace:sync_timeline", "tracepoint. sync_timeline."], ["dma_fence:dma_fence_emit", "tracepoint. dma_fence_emit."], ["dma_fence:dma_fence_init", "tracepoint. dma_fence_init."], ["dma_fence:dma_fence_destroy", "tracepoint. dma_fence_destroy."], ["dma_fence:dma_fence_enable_signal", "tracepoint. dma_fence_enable_signal."], ["dma_fence:dma_fence_signaled", "tracepoint. dma_fence_signaled."], ["dma_fence:dma_fence_wait_start", "tracepoint. dma_fence_wait_start."], ["dma_fence:dma_fence_wait_end", "tracepoint. dma_fence_wait_end."], ["regmap:regmap_reg_write", "tracepoint. regmap_reg_write."], ["regmap:regmap_reg_read", "tracepoint. regmap_reg_read."], ["regmap:regmap_reg_read_cache", "tracepoint. regmap_reg_read_cache."], ["regmap:regmap_hw_read_start", "tracepoint. regmap_hw_read_start."], ["regmap:regmap_hw_read_done", "tracepoint. regmap_hw_read_done."], ["regmap:regmap_hw_write_start", "tracepoint. regmap_hw_write_start."], ["regmap:regmap_hw_write_done", "tracepoint. regmap_hw_write_done."], ["regmap:regcache_sync", "tracepoint. regcache_sync."], ["regmap:regmap_cache_only", "tracepoint. regmap_cache_only."], ["regmap:regmap_cache_bypass", "tracepoint. regmap_cache_bypass."], ["regmap:regmap_async_write_start", "tracepoint. regmap_async_write_start."], ["regmap:regmap_async_io_complete", "tracepoint. regmap_async_io_complete."], ["regmap:regmap_async_complete_start", "tracepoint. regmap_async_complete_start."], ["regmap:regmap_async_complete_done", "tracepoint. regmap_async_complete_done."], ["regmap:regcache_drop_region", "tracepoint. regcache_drop_region."], ["intel_iommu:map_single", "tracepoint. map_single."], ["intel_iommu:map_sg", "tracepoint. map_sg."], ["intel_iommu:bounce_map_single", "tracepoint. bounce_map_single."], ["intel_iommu:unmap_single", "tracepoint. unmap_single."], ["intel_iommu:unmap_sg", "tracepoint. unmap_sg."], ["intel_iommu:bounce_unmap_single", "tracepoint. bounce_unmap_single."], ["iommu:add_device_to_group", "tracepoint. add_device_to_group."], ["iommu:remove_device_from_group", "tracepoint. remove_device_from_group."], ["iommu:attach_device_to_domain", "tracepoint. attach_device_to_domain."], ["iommu:detach_device_from_domain", "tracepoint. detach_device_from_domain."], ["iommu:map", "tracepoint. map."], ["iommu:unmap", "tracepoint. unmap."], ["iommu:io_page_fault", "tracepoint. io_page_fault."], ["regulator:regulator_enable", "tracepoint. regulator_enable."], ["regulator:regulator_enable_delay", "tracepoint. regulator_enable_delay."], ["regulator:regulator_enable_complete", "tracepoint. regulator_enable_complete."], ["regulator:regulator_disable", "tracepoint. regulator_disable."], ["regulator:regulator_disable_complete", "tracepoint. regulator_disable_complete."], ["regulator:regulator_set_voltage", "tracepoint. regulator_set_voltage."], ["regulator:regulator_set_voltage_complete", "tracepoint. regulator_set_voltage_complete."], ["clk:clk_enable", "tracepoint. clk_enable."], ["clk:clk_enable_complete", "tracepoint. clk_enable_complete."], ["clk:clk_disable", "tracepoint. clk_disable."], ["clk:clk_disable_complete", "tracepoint. clk_disable_complete."], ["clk:clk_prepare", "tracepoint. clk_prepare."], ["clk:clk_prepare_complete", "tracepoint. clk_prepare_complete."], ["clk:clk_unprepare", "tracepoint. clk_unprepare."], ["clk:clk_unprepare_complete", "tracepoint. clk_unprepare_complete."], ["clk:clk_set_rate", "tracepoint. clk_set_rate."], ["clk:clk_set_rate_complete", "tracepoint. clk_set_rate_complete."], ["clk:clk_set_parent", "tracepoint. clk_set_parent."], ["clk:clk_set_parent_complete", "tracepoint. clk_set_parent_complete."], ["clk:clk_set_phase", "tracepoint. clk_set_phase."], ["clk:clk_set_phase_complete", "tracepoint. clk_set_phase_complete."], ["clk:clk_set_duty_cycle", "tracepoint. clk_set_duty_cycle."], ["clk:clk_set_duty_cycle_complete", "tracepoint. clk_set_duty_cycle_complete."], ["gpio:gpio_direction", "tracepoint. gpio_direction."], ["gpio:gpio_value", "tracepoint. gpio_value."], ["msr:read_msr", "tracepoint. read_msr."], ["msr:write_msr", "tracepoint. write_msr."], ["msr:rdpmc", "tracepoint. rdpmc."], ["wbt:wbt_stat", "tracepoint. wbt_stat."], ["wbt:wbt_lat", "tracepoint. wbt_lat."], ["wbt:wbt_step", "tracepoint. wbt_step."], ["wbt:wbt_timer", "tracepoint. wbt_timer."], ["iocost:iocost_iocg_activate", "tracepoint. iocost_iocg_activate."], ["iocost:iocost_inuse_takeback", "tracepoint. iocost_inuse_takeback."], ["iocost:iocost_inuse_giveaway", "tracepoint. iocost_inuse_giveaway."], ["iocost:iocost_inuse_reset", "tracepoint. iocost_inuse_reset."], ["iocost:iocost_ioc_vrate_adj", "tracepoint. iocost_ioc_vrate_adj."], ["block:block_touch_buffer", "tracepoint. block_touch_buffer."], ["block:block_dirty_buffer", "tracepoint. block_dirty_buffer."], ["block:block_rq_requeue", "tracepoint. block_rq_requeue."], ["block:block_rq_complete", "tracepoint. block_rq_complete."], ["block:block_rq_insert", "tracepoint. block_rq_insert."], ["block:block_rq_issue", "tracepoint. block_rq_issue."], ["block:block_bio_bounce", "tracepoint. block_bio_bounce."], ["block:block_bio_complete", "tracepoint. block_bio_complete."], ["block:block_bio_backmerge", "tracepoint. block_bio_backmerge."], ["block:block_bio_frontmerge", "tracepoint. block_bio_frontmerge."], ["block:block_bio_queue", "tracepoint. block_bio_queue."], ["block:block_getrq", "tracepoint. block_getrq."], ["block:block_sleeprq", "tracepoint. block_sleeprq."], ["block:block_plug", "tracepoint. block_plug."], ["block:block_unplug", "tracepoint. block_unplug."], ["block:block_split", "tracepoint. block_split."], ["block:block_bio_remap", "tracepoint. block_bio_remap."], ["block:block_rq_remap", "tracepoint. block_rq_remap."], ["jbd2:jbd2_checkpoint", "tracepoint. jbd2_checkpoint."], ["jbd2:jbd2_start_commit", "tracepoint. jbd2_start_commit."], ["jbd2:jbd2_commit_locking", "tracepoint. jbd2_commit_locking."], ["jbd2:jbd2_commit_flushing", "tracepoint. jbd2_commit_flushing."], ["jbd2:jbd2_commit_logging", "tracepoint. jbd2_commit_logging."], ["jbd2:jbd2_drop_transaction", "tracepoint. jbd2_drop_transaction."], ["jbd2:jbd2_end_commit", "tracepoint. jbd2_end_commit."], ["jbd2:jbd2_submit_inode_data", "tracepoint. jbd2_submit_inode_data."], ["jbd2:jbd2_handle_start", "tracepoint. jbd2_handle_start."], ["jbd2:jbd2_handle_extend", "tracepoint. jbd2_handle_extend."], ["jbd2:jbd2_handle_stats", "tracepoint. jbd2_handle_stats."], ["jbd2:jbd2_run_stats", "tracepoint. jbd2_run_stats."], ["jbd2:jbd2_checkpoint_stats", "tracepoint. jbd2_checkpoint_stats."], ["jbd2:jbd2_update_log_tail", "tracepoint. jbd2_update_log_tail."], ["jbd2:jbd2_write_superblock", "tracepoint. jbd2_write_superblock."], ["jbd2:jbd2_lock_buffer_stall", "tracepoint. jbd2_lock_buffer_stall."], ["ext4:ext4_other_inode_update_time", "tracepoint. ext4_other_inode_update_time."], ["ext4:ext4_free_inode", "tracepoint. ext4_free_inode."], ["ext4:ext4_request_inode", "tracepoint. ext4_request_inode."], ["ext4:ext4_allocate_inode", "tracepoint. ext4_allocate_inode."], ["ext4:ext4_evict_inode", "tracepoint. ext4_evict_inode."], ["ext4:ext4_drop_inode", "tracepoint. ext4_drop_inode."], ["ext4:ext4_nfs_commit_metadata", "tracepoint. ext4_nfs_commit_metadata."], ["ext4:ext4_mark_inode_dirty", "tracepoint. ext4_mark_inode_dirty."], ["ext4:ext4_begin_ordered_truncate", "tracepoint. ext4_begin_ordered_truncate."], ["ext4:ext4_write_begin", "tracepoint. ext4_write_begin."], ["ext4:ext4_da_write_begin", "tracepoint. ext4_da_write_begin."], ["ext4:ext4_write_end", "tracepoint. ext4_write_end."], ["ext4:ext4_journalled_write_end", "tracepoint. ext4_journalled_write_end."], ["ext4:ext4_da_write_end", "tracepoint. ext4_da_write_end."], ["ext4:ext4_writepages", "tracepoint. ext4_writepages."], ["ext4:ext4_da_write_pages", "tracepoint. ext4_da_write_pages."], ["ext4:ext4_da_write_pages_extent", "tracepoint. ext4_da_write_pages_extent."], ["ext4:ext4_writepages_result", "tracepoint. ext4_writepages_result."], ["ext4:ext4_writepage", "tracepoint. ext4_writepage."], ["ext4:ext4_readpage", "tracepoint. ext4_readpage."], ["ext4:ext4_releasepage", "tracepoint. ext4_releasepage."], ["ext4:ext4_invalidatepage", "tracepoint. ext4_invalidatepage."], ["ext4:ext4_journalled_invalidatepage", "tracepoint. ext4_journalled_invalidatepage."], ["ext4:ext4_discard_blocks", "tracepoint. ext4_discard_blocks."], ["ext4:ext4_mb_new_inode_pa", "tracepoint. ext4_mb_new_inode_pa."], ["ext4:ext4_mb_new_group_pa", "tracepoint. ext4_mb_new_group_pa."], ["ext4:ext4_mb_release_inode_pa", "tracepoint. ext4_mb_release_inode_pa."], ["ext4:ext4_mb_release_group_pa", "tracepoint. ext4_mb_release_group_pa."], ["ext4:ext4_discard_preallocations", "tracepoint. ext4_discard_preallocations."], ["ext4:ext4_mb_discard_preallocations", "tracepoint. ext4_mb_discard_preallocations."], ["ext4:ext4_request_blocks", "tracepoint. ext4_request_blocks."], ["ext4:ext4_allocate_blocks", "tracepoint. ext4_allocate_blocks."], ["ext4:ext4_free_blocks", "tracepoint. ext4_free_blocks."], ["ext4:ext4_sync_file_enter", "tracepoint. ext4_sync_file_enter."], ["ext4:ext4_sync_file_exit", "tracepoint. ext4_sync_file_exit."], ["ext4:ext4_sync_fs", "tracepoint. ext4_sync_fs."], ["ext4:ext4_alloc_da_blocks", "tracepoint. ext4_alloc_da_blocks."], ["ext4:ext4_mballoc_alloc", "tracepoint. ext4_mballoc_alloc."], ["ext4:ext4_mballoc_prealloc", "tracepoint. ext4_mballoc_prealloc."], ["ext4:ext4_mballoc_discard", "tracepoint. ext4_mballoc_discard."], ["ext4:ext4_mballoc_free", "tracepoint. ext4_mballoc_free."], ["ext4:ext4_forget", "tracepoint. ext4_forget."], ["ext4:ext4_da_update_reserve_space", "tracepoint. ext4_da_update_reserve_space."], ["ext4:ext4_da_reserve_space", "tracepoint. ext4_da_reserve_space."], ["ext4:ext4_da_release_space", "tracepoint. ext4_da_release_space."], ["ext4:ext4_mb_bitmap_load", "tracepoint. ext4_mb_bitmap_load."], ["ext4:ext4_mb_buddy_bitmap_load", "tracepoint. ext4_mb_buddy_bitmap_load."], ["ext4:ext4_read_block_bitmap_load", "tracepoint. ext4_read_block_bitmap_load."], ["ext4:ext4_load_inode_bitmap", "tracepoint. ext4_load_inode_bitmap."], ["ext4:ext4_direct_IO_enter", "tracepoint. ext4_direct_IO_enter."], ["ext4:ext4_direct_IO_exit", "tracepoint. ext4_direct_IO_exit."], ["ext4:ext4_fallocate_enter", "tracepoint. ext4_fallocate_enter."], ["ext4:ext4_punch_hole", "tracepoint. ext4_punch_hole."], ["ext4:ext4_zero_range", "tracepoint. ext4_zero_range."], ["ext4:ext4_fallocate_exit", "tracepoint. ext4_fallocate_exit."], ["ext4:ext4_unlink_enter", "tracepoint. ext4_unlink_enter."], ["ext4:ext4_unlink_exit", "tracepoint. ext4_unlink_exit."], ["ext4:ext4_truncate_enter", "tracepoint. ext4_truncate_enter."], ["ext4:ext4_truncate_exit", "tracepoint. ext4_truncate_exit."], ["ext4:ext4_ext_convert_to_initialized_enter", "tracepoint. ext4_ext_convert_to_initialized_enter."], ["ext4:ext4_ext_convert_to_initialized_fastpath", "tracepoint. ext4_ext_convert_to_initialized_fastpath."], ["ext4:ext4_ext_map_blocks_enter", "tracepoint. ext4_ext_map_blocks_enter."], ["ext4:ext4_ind_map_blocks_enter", "tracepoint. ext4_ind_map_blocks_enter."], ["ext4:ext4_ext_map_blocks_exit", "tracepoint. ext4_ext_map_blocks_exit."], ["ext4:ext4_ind_map_blocks_exit", "tracepoint. ext4_ind_map_blocks_exit."], ["ext4:ext4_ext_load_extent", "tracepoint. ext4_ext_load_extent."], ["ext4:ext4_load_inode", "tracepoint. ext4_load_inode."], ["ext4:ext4_journal_start", "tracepoint. ext4_journal_start."], ["ext4:ext4_journal_start_reserved", "tracepoint. ext4_journal_start_reserved."], ["ext4:ext4_trim_extent", "tracepoint. ext4_trim_extent."], ["ext4:ext4_trim_all_free", "tracepoint. ext4_trim_all_free."], ["ext4:ext4_ext_handle_unwritten_extents", "tracepoint. ext4_ext_handle_unwritten_extents."], ["ext4:ext4_get_implied_cluster_alloc_exit", "tracepoint. ext4_get_implied_cluster_alloc_exit."], ["ext4:ext4_ext_put_in_cache", "tracepoint. ext4_ext_put_in_cache."], ["ext4:ext4_ext_in_cache", "tracepoint. ext4_ext_in_cache."], ["ext4:ext4_find_delalloc_range", "tracepoint. ext4_find_delalloc_range."], ["ext4:ext4_get_reserved_cluster_alloc", "tracepoint. ext4_get_reserved_cluster_alloc."], ["ext4:ext4_ext_show_extent", "tracepoint. ext4_ext_show_extent."], ["ext4:ext4_remove_blocks", "tracepoint. ext4_remove_blocks."], ["ext4:ext4_ext_rm_leaf", "tracepoint. ext4_ext_rm_leaf."], ["ext4:ext4_ext_rm_idx", "tracepoint. ext4_ext_rm_idx."], ["ext4:ext4_ext_remove_space", "tracepoint. ext4_ext_remove_space."], ["ext4:ext4_ext_remove_space_done", "tracepoint. ext4_ext_remove_space_done."], ["ext4:ext4_es_insert_extent", "tracepoint. ext4_es_insert_extent."], ["ext4:ext4_es_cache_extent", "tracepoint. ext4_es_cache_extent."], ["ext4:ext4_es_remove_extent", "tracepoint. ext4_es_remove_extent."], ["ext4:ext4_es_find_extent_range_enter", "tracepoint. ext4_es_find_extent_range_enter."], ["ext4:ext4_es_find_extent_range_exit", "tracepoint. ext4_es_find_extent_range_exit."], ["ext4:ext4_es_lookup_extent_enter", "tracepoint. ext4_es_lookup_extent_enter."], ["ext4:ext4_es_lookup_extent_exit", "tracepoint. ext4_es_lookup_extent_exit."], ["ext4:ext4_es_shrink_count", "tracepoint. ext4_es_shrink_count."], ["ext4:ext4_es_shrink_scan_enter", "tracepoint. ext4_es_shrink_scan_enter."], ["ext4:ext4_es_shrink_scan_exit", "tracepoint. ext4_es_shrink_scan_exit."], ["ext4:ext4_collapse_range", "tracepoint. ext4_collapse_range."], ["ext4:ext4_insert_range", "tracepoint. ext4_insert_range."], ["ext4:ext4_es_shrink", "tracepoint. ext4_es_shrink."], ["ext4:ext4_es_insert_delayed_block", "tracepoint. ext4_es_insert_delayed_block."], ["ext4:ext4_fsmap_low_key", "tracepoint. ext4_fsmap_low_key."], ["ext4:ext4_fsmap_high_key", "tracepoint. ext4_fsmap_high_key."], ["ext4:ext4_fsmap_mapping", "tracepoint. ext4_fsmap_mapping."], ["ext4:ext4_getfsmap_low_key", "tracepoint. ext4_getfsmap_low_key."], ["ext4:ext4_getfsmap_high_key", "tracepoint. ext4_getfsmap_high_key."], ["ext4:ext4_getfsmap_mapping", "tracepoint. ext4_getfsmap_mapping."], ["ext4:ext4_shutdown", "tracepoint. ext4_shutdown."], ["ext4:ext4_error", "tracepoint. ext4_error."], ["filelock:locks_get_lock_context", "tracepoint. locks_get_lock_context."], ["filelock:posix_lock_inode", "tracepoint. posix_lock_inode."], ["filelock:fcntl_setlk", "tracepoint. fcntl_setlk."], ["filelock:locks_remove_posix", "tracepoint. locks_remove_posix."], ["filelock:flock_lock_inode", "tracepoint. flock_lock_inode."], ["filelock:break_lease_noblock", "tracepoint. break_lease_noblock."], ["filelock:break_lease_block", "tracepoint. break_lease_block."], ["filelock:break_lease_unblock", "tracepoint. break_lease_unblock."], ["filelock:generic_delete_lease", "tracepoint. generic_delete_lease."], ["filelock:time_out_leases", "tracepoint. time_out_leases."], ["filelock:generic_add_lease", "tracepoint. generic_add_lease."], ["filelock:leases_conflict", "tracepoint. leases_conflict."], ["fs_dax:dax_pmd_fault", "tracepoint. dax_pmd_fault."], ["fs_dax:dax_pmd_fault_done", "tracepoint. dax_pmd_fault_done."], ["fs_dax:dax_pmd_load_hole", "tracepoint. dax_pmd_load_hole."], ["fs_dax:dax_pmd_load_hole_fallback", "tracepoint. dax_pmd_load_hole_fallback."], ["fs_dax:dax_pmd_insert_mapping", "tracepoint. dax_pmd_insert_mapping."], ["fs_dax:dax_pte_fault", "tracepoint. dax_pte_fault."], ["fs_dax:dax_pte_fault_done", "tracepoint. dax_pte_fault_done."], ["fs_dax:dax_load_hole", "tracepoint. dax_load_hole."], ["fs_dax:dax_insert_pfn_mkwrite_no_entry", "tracepoint. dax_insert_pfn_mkwrite_no_entry."], ["fs_dax:dax_insert_pfn_mkwrite", "tracepoint. dax_insert_pfn_mkwrite."], ["fs_dax:dax_insert_mapping", "tracepoint. dax_insert_mapping."], ["fs_dax:dax_writeback_range", "tracepoint. dax_writeback_range."], ["fs_dax:dax_writeback_range_done", "tracepoint. dax_writeback_range_done."], ["fs_dax:dax_writeback_one", "tracepoint. dax_writeback_one."], ["writeback:writeback_dirty_page", "tracepoint. writeback_dirty_page."], ["writeback:wait_on_page_writeback", "tracepoint. wait_on_page_writeback."], ["writeback:writeback_mark_inode_dirty", "tracepoint. writeback_mark_inode_dirty."], ["writeback:writeback_dirty_inode_start", "tracepoint. writeback_dirty_inode_start."], ["writeback:writeback_dirty_inode", "tracepoint. writeback_dirty_inode."], ["writeback:inode_foreign_history", "tracepoint. inode_foreign_history."], ["writeback:inode_switch_wbs", "tracepoint. inode_switch_wbs."], ["writeback:track_foreign_dirty", "tracepoint. track_foreign_dirty."], ["writeback:flush_foreign", "tracepoint. flush_foreign."], ["writeback:writeback_write_inode_start", "tracepoint. writeback_write_inode_start."], ["writeback:writeback_write_inode", "tracepoint. writeback_write_inode."], ["writeback:writeback_queue", "tracepoint. writeback_queue."], ["writeback:writeback_exec", "tracepoint. writeback_exec."], ["writeback:writeback_start", "tracepoint. writeback_start."], ["writeback:writeback_written", "tracepoint. writeback_written."], ["writeback:writeback_wait", "tracepoint. writeback_wait."], ["writeback:writeback_pages_written", "tracepoint. writeback_pages_written."], ["writeback:writeback_wake_background", "tracepoint. writeback_wake_background."], ["writeback:writeback_bdi_register", "tracepoint. writeback_bdi_register."], ["writeback:wbc_writepage", "tracepoint. wbc_writepage."], ["writeback:writeback_queue_io", "tracepoint. writeback_queue_io."], ["writeback:global_dirty_state", "tracepoint. global_dirty_state."], ["writeback:bdi_dirty_ratelimit", "tracepoint. bdi_dirty_ratelimit."], ["writeback:balance_dirty_pages", "tracepoint. balance_dirty_pages."], ["writeback:writeback_sb_inodes_requeue", "tracepoint. writeback_sb_inodes_requeue."], ["writeback:writeback_congestion_wait", "tracepoint. writeback_congestion_wait."], ["writeback:writeback_wait_iff_congested", "tracepoint. writeback_wait_iff_congested."], ["writeback:writeback_single_inode_start", "tracepoint. writeback_single_inode_start."], ["writeback:writeback_single_inode", "tracepoint. writeback_single_inode."], ["writeback:writeback_lazytime", "tracepoint. writeback_lazytime."], ["writeback:writeback_lazytime_iput", "tracepoint. writeback_lazytime_iput."], ["writeback:writeback_dirty_inode_enqueue", "tracepoint. writeback_dirty_inode_enqueue."], ["writeback:sb_mark_inode_writeback", "tracepoint. sb_mark_inode_writeback."], ["writeback:sb_clear_inode_writeback", "tracepoint. sb_clear_inode_writeback."], ["fs:do_sys_open", "tracepoint. do_sys_open."], ["fs:open_exec", "tracepoint. open_exec."], ["cma:cma_alloc", "tracepoint. cma_alloc."], ["cma:cma_release", "tracepoint. cma_release."], ["page_isolation:test_pages_isolated", "tracepoint. test_pages_isolated."], ["huge_memory:mm_khugepaged_scan_pmd", "tracepoint. mm_khugepaged_scan_pmd."], ["huge_memory:mm_collapse_huge_page", "tracepoint. mm_collapse_huge_page."], ["huge_memory:mm_collapse_huge_page_isolate", "tracepoint. mm_collapse_huge_page_isolate."], ["huge_memory:mm_collapse_huge_page_swapin", "tracepoint. mm_collapse_huge_page_swapin."], ["migrate:mm_migrate_pages", "tracepoint. mm_migrate_pages."], ["compaction:mm_compaction_isolate_migratepages", "tracepoint. mm_compaction_isolate_migratepages."], ["compaction:mm_compaction_isolate_freepages", "tracepoint. mm_compaction_isolate_freepages."], ["compaction:mm_compaction_migratepages", "tracepoint. mm_compaction_migratepages."], ["compaction:mm_compaction_begin", "tracepoint. mm_compaction_begin."], ["compaction:mm_compaction_end", "tracepoint. mm_compaction_end."], ["compaction:mm_compaction_try_to_compact_pages", "tracepoint. mm_compaction_try_to_compact_pages."], ["compaction:mm_compaction_finished", "tracepoint. mm_compaction_finished."], ["compaction:mm_compaction_suitable", "tracepoint. mm_compaction_suitable."], ["compaction:mm_compaction_deferred", "tracepoint. mm_compaction_deferred."], ["compaction:mm_compaction_defer_compaction", "tracepoint. mm_compaction_defer_compaction."], ["compaction:mm_compaction_defer_reset", "tracepoint. mm_compaction_defer_reset."], ["compaction:mm_compaction_kcompactd_sleep", "tracepoint. mm_compaction_kcompactd_sleep."], ["compaction:mm_compaction_wakeup_kcompactd", "tracepoint. mm_compaction_wakeup_kcompactd."], ["compaction:mm_compaction_kcompactd_wake", "tracepoint. mm_compaction_kcompactd_wake."], ["kmem:kmalloc", "tracepoint. kmalloc."], ["kmem:kmem_cache_alloc", "tracepoint. kmem_cache_alloc."], ["kmem:kmalloc_node", "tracepoint. kmalloc_node."], ["kmem:kmem_cache_alloc_node", "tracepoint. kmem_cache_alloc_node."], ["kmem:kfree", "tracepoint. kfree."], ["kmem:kmem_cache_free", "tracepoint. kmem_cache_free."], ["kmem:mm_page_free", "tracepoint. mm_page_free."], ["kmem:mm_page_free_batched", "tracepoint. mm_page_free_batched."], ["kmem:mm_page_alloc", "tracepoint. mm_page_alloc."], ["kmem:mm_page_alloc_zone_locked", "tracepoint. mm_page_alloc_zone_locked."], ["kmem:mm_page_pcpu_drain", "tracepoint. mm_page_pcpu_drain."], ["kmem:mm_page_alloc_extfrag", "tracepoint. mm_page_alloc_extfrag."], ["percpu:percpu_alloc_percpu", "tracepoint. percpu_alloc_percpu."], ["percpu:percpu_free_percpu", "tracepoint. percpu_free_percpu."], ["percpu:percpu_alloc_percpu_fail", "tracepoint. percpu_alloc_percpu_fail."], ["percpu:percpu_create_chunk", "tracepoint. percpu_create_chunk."], ["percpu:percpu_destroy_chunk", "tracepoint. percpu_destroy_chunk."], ["vmscan:mm_vmscan_kswapd_sleep", "tracepoint. mm_vmscan_kswapd_sleep."], ["vmscan:mm_vmscan_kswapd_wake", "tracepoint. mm_vmscan_kswapd_wake."], ["vmscan:mm_vmscan_wakeup_kswapd", "tracepoint. mm_vmscan_wakeup_kswapd."], ["vmscan:mm_vmscan_direct_reclaim_begin", "tracepoint. mm_vmscan_direct_reclaim_begin."], ["vmscan:mm_vmscan_memcg_reclaim_begin", "tracepoint. mm_vmscan_memcg_reclaim_begin."], ["vmscan:mm_vmscan_memcg_softlimit_reclaim_begin", "tracepoint. mm_vmscan_memcg_softlimit_reclaim_begin."], ["vmscan:mm_vmscan_direct_reclaim_end", "tracepoint. mm_vmscan_direct_reclaim_end."], ["vmscan:mm_vmscan_memcg_reclaim_end", "tracepoint. mm_vmscan_memcg_reclaim_end."], ["vmscan:mm_vmscan_memcg_softlimit_reclaim_end", "tracepoint. mm_vmscan_memcg_softlimit_reclaim_end."], ["vmscan:mm_shrink_slab_start", "tracepoint. mm_shrink_slab_start."], ["vmscan:mm_shrink_slab_end", "tracepoint. mm_shrink_slab_end."], ["vmscan:mm_vmscan_lru_isolate", "tracepoint. mm_vmscan_lru_isolate."], ["vmscan:mm_vmscan_writepage", "tracepoint. mm_vmscan_writepage."], ["vmscan:mm_vmscan_lru_shrink_inactive", "tracepoint. mm_vmscan_lru_shrink_inactive."], ["vmscan:mm_vmscan_lru_shrink_active", "tracepoint. mm_vmscan_lru_shrink_active."], ["vmscan:mm_vmscan_inactive_list_is_low", "tracepoint. mm_vmscan_inactive_list_is_low."], ["vmscan:mm_vmscan_node_reclaim_begin", "tracepoint. mm_vmscan_node_reclaim_begin."], ["vmscan:mm_vmscan_node_reclaim_end", "tracepoint. mm_vmscan_node_reclaim_end."], ["pagemap:mm_lru_insertion", "tracepoint. mm_lru_insertion."], ["pagemap:mm_lru_activate", "tracepoint. mm_lru_activate."], ["oom:oom_score_adj_update", "tracepoint. oom_score_adj_update."], ["oom:reclaim_retry_zone", "tracepoint. reclaim_retry_zone."], ["oom:mark_victim", "tracepoint. mark_victim."], ["oom:wake_reaper", "tracepoint. wake_reaper."], ["oom:start_task_reaping", "tracepoint. start_task_reaping."], ["oom:finish_task_reaping", "tracepoint. finish_task_reaping."], ["oom:skip_task_reaping", "tracepoint. skip_task_reaping."], ["oom:compact_retry", "tracepoint. compact_retry."], ["filemap:mm_filemap_delete_from_page_cache", "tracepoint. mm_filemap_delete_from_page_cache."], ["filemap:mm_filemap_add_to_page_cache", "tracepoint. mm_filemap_add_to_page_cache."], ["filemap:filemap_set_wb_err", "tracepoint. filemap_set_wb_err."], ["filemap:file_check_and_advance_wb_err", "tracepoint. file_check_and_advance_wb_err."], ["rseq:rseq_update", "tracepoint. rseq_update."], ["rseq:rseq_ip_fixup", "tracepoint. rseq_ip_fixup."], ["xdp:xdp_exception", "tracepoint. xdp_exception."], ["xdp:xdp_bulk_tx", "tracepoint. xdp_bulk_tx."], ["xdp:xdp_redirect", "tracepoint. xdp_redirect."], ["xdp:xdp_redirect_err", "tracepoint. xdp_redirect_err."], ["xdp:xdp_redirect_map", "tracepoint. xdp_redirect_map."], ["xdp:xdp_redirect_map_err", "tracepoint. xdp_redirect_map_err."], ["xdp:xdp_cpumap_kthread", "tracepoint. xdp_cpumap_kthread."], ["xdp:xdp_cpumap_enqueue", "tracepoint. xdp_cpumap_enqueue."], ["xdp:xdp_devmap_xmit", "tracepoint. xdp_devmap_xmit."], ["xdp:mem_disconnect", "tracepoint. mem_disconnect."], ["xdp:mem_connect", "tracepoint. mem_connect."], ["xdp:mem_return_failed", "tracepoint. mem_return_failed."], ["rpm:rpm_suspend", "tracepoint. rpm_suspend."], ["rpm:rpm_resume", "tracepoint. rpm_resume."], ["rpm:rpm_idle", "tracepoint. rpm_idle."], ["rpm:rpm_return_int", "tracepoint. rpm_return_int."], ["power:cpu_idle", "tracepoint. cpu_idle."], ["power:powernv_throttle", "tracepoint. powernv_throttle."], ["power:pstate_sample", "tracepoint. pstate_sample."], ["power:cpu_frequency", "tracepoint. cpu_frequency."], ["power:cpu_frequency_limits", "tracepoint. cpu_frequency_limits."], ["power:device_pm_callback_start", "tracepoint. device_pm_callback_start."], ["power:device_pm_callback_end", "tracepoint. device_pm_callback_end."], ["power:suspend_resume", "tracepoint. suspend_resume."], ["power:wakeup_source_activate", "tracepoint. wakeup_source_activate."], ["power:wakeup_source_deactivate", "tracepoint. wakeup_source_deactivate."], ["power:clock_enable", "tracepoint. clock_enable."], ["power:clock_disable", "tracepoint. clock_disable."], ["power:clock_set_rate", "tracepoint. clock_set_rate."], ["power:power_domain_target", "tracepoint. power_domain_target."], ["power:pm_qos_add_request", "tracepoint. pm_qos_add_request."], ["power:pm_qos_update_request", "tracepoint. pm_qos_update_request."], ["power:pm_qos_remove_request", "tracepoint. pm_qos_remove_request."], ["power:pm_qos_update_request_timeout", "tracepoint. pm_qos_update_request_timeout."], ["power:pm_qos_update_target", "tracepoint. pm_qos_update_target."], ["power:pm_qos_update_flags", "tracepoint. pm_qos_update_flags."], ["power:dev_pm_qos_add_request", "tracepoint. dev_pm_qos_add_request."], ["power:dev_pm_qos_update_request", "tracepoint. dev_pm_qos_update_request."], ["power:dev_pm_qos_remove_request", "tracepoint. dev_pm_qos_remove_request."], ["ftrace:function", "tracepoint. function."], ["ftrace:print", "tracepoint. print."], ["cgroup:cgroup_setup_root", "tracepoint. cgroup_setup_root."], ["cgroup:cgroup_destroy_root", "tracepoint. cgroup_destroy_root."], ["cgroup:cgroup_remount", "tracepoint. cgroup_remount."], ["cgroup:cgroup_mkdir", "tracepoint. cgroup_mkdir."], ["cgroup:cgroup_rmdir", "tracepoint. cgroup_rmdir."], ["cgroup:cgroup_release", "tracepoint. cgroup_release."], ["cgroup:cgroup_rename", "tracepoint. cgroup_rename."], ["cgroup:cgroup_freeze", "tracepoint. cgroup_freeze."], ["cgroup:cgroup_unfreeze", "tracepoint. cgroup_unfreeze."], ["cgroup:cgroup_attach_task", "tracepoint. cgroup_attach_task."], ["cgroup:cgroup_transfer_tasks", "tracepoint. cgroup_transfer_tasks."], ["cgroup:cgroup_notify_populated", "tracepoint. cgroup_notify_populated."], ["cgroup:cgroup_notify_frozen", "tracepoint. cgroup_notify_frozen."], ["module:module_load", "tracepoint. module_load."], ["module:module_free", "tracepoint. module_free."], ["module:module_get", "tracepoint. module_get."], ["module:module_put", "tracepoint. module_put."], ["module:module_request", "tracepoint. module_request."], ["alarmtimer:alarmtimer_suspend", "tracepoint. alarmtimer_suspend."], ["alarmtimer:alarmtimer_fired", "tracepoint. alarmtimer_fired."], ["alarmtimer:alarmtimer_start", "tracepoint. alarmtimer_start."], ["alarmtimer:alarmtimer_cancel", "tracepoint. alarmtimer_cancel."], ["timer:timer_init", "tracepoint. timer_init."], ["timer:timer_start", "tracepoint. timer_start."], ["timer:timer_expire_entry", "tracepoint. timer_expire_entry."], ["timer:timer_expire_exit", "tracepoint. timer_expire_exit."], ["timer:timer_cancel", "tracepoint. timer_cancel."], ["timer:hrtimer_init", "tracepoint. hrtimer_init."], ["timer:hrtimer_start", "tracepoint. hrtimer_start."], ["timer:hrtimer_expire_entry", "tracepoint. hrtimer_expire_entry."], ["timer:hrtimer_expire_exit", "tracepoint. hrtimer_expire_exit."], ["timer:hrtimer_cancel", "tracepoint. hrtimer_cancel."], ["timer:itimer_state", "tracepoint. itimer_state."], ["timer:itimer_expire", "tracepoint. itimer_expire."], ["timer:tick_stop", "tracepoint. tick_stop."], ["swiotlb:swiotlb_bounced", "tracepoint. swiotlb_bounced."], ["rcu:rcu_utilization", "tracepoint. rcu_utilization."], ["irq_matrix:irq_matrix_online", "tracepoint. irq_matrix_online."], ["irq_matrix:irq_matrix_offline", "tracepoint. irq_matrix_offline."], ["irq_matrix:irq_matrix_reserve", "tracepoint. irq_matrix_reserve."], ["irq_matrix:irq_matrix_remove_reserved", "tracepoint. irq_matrix_remove_reserved."], ["irq_matrix:irq_matrix_assign_system", "tracepoint. irq_matrix_assign_system."], ["irq_matrix:irq_matrix_alloc_reserved", "tracepoint. irq_matrix_alloc_reserved."], ["irq_matrix:irq_matrix_reserve_managed", "tracepoint. irq_matrix_reserve_managed."], ["irq_matrix:irq_matrix_remove_managed", "tracepoint. irq_matrix_remove_managed."], ["irq_matrix:irq_matrix_alloc_managed", "tracepoint. irq_matrix_alloc_managed."], ["irq_matrix:irq_matrix_assign", "tracepoint. irq_matrix_assign."], ["irq_matrix:irq_matrix_alloc", "tracepoint. irq_matrix_alloc."], ["irq_matrix:irq_matrix_free", "tracepoint. irq_matrix_free."], ["printk:console", "tracepoint. console."], ["sched:sched_kthread_stop", "tracepoint. sched_kthread_stop."], ["sched:sched_kthread_stop_ret", "tracepoint. sched_kthread_stop_ret."], ["sched:sched_waking", "tracepoint. sched_waking."], ["sched:sched_wakeup", "tracepoint. sched_wakeup."], ["sched:sched_wakeup_new", "tracepoint. sched_wakeup_new."], ["sched:sched_switch", "tracepoint. sched_switch."], ["sched:sched_migrate_task", "tracepoint. sched_migrate_task."], ["sched:sched_process_free", "tracepoint. sched_process_free."], ["sched:sched_process_exit", "tracepoint. sched_process_exit."], ["sched:sched_wait_task", "tracepoint. sched_wait_task."], ["sched:sched_process_wait", "tracepoint. sched_process_wait."], ["sched:sched_process_fork", "tracepoint. sched_process_fork."], ["sched:sched_process_exec", "tracepoint. sched_process_exec."], ["sched:sched_stat_wait", "tracepoint. sched_stat_wait."], ["sched:sched_stat_sleep", "tracepoint. sched_stat_sleep."], ["sched:sched_stat_iowait", "tracepoint. sched_stat_iowait."], ["sched:sched_stat_blocked", "tracepoint. sched_stat_blocked."], ["sched:sched_stat_runtime", "tracepoint. sched_stat_runtime."], ["sched:sched_pi_setprio", "tracepoint. sched_pi_setprio."], ["sched:sched_process_hang", "tracepoint. sched_process_hang."], ["sched:sched_move_numa", "tracepoint. sched_move_numa."], ["sched:sched_stick_numa", "tracepoint. sched_stick_numa."], ["sched:sched_swap_numa", "tracepoint. sched_swap_numa."], ["sched:sched_wake_idle_without_ipi", "tracepoint. sched_wake_idle_without_ipi."], ["workqueue:workqueue_queue_work", "tracepoint. workqueue_queue_work."], ["workqueue:workqueue_activate_work", "tracepoint. workqueue_activate_work."], ["workqueue:workqueue_execute_start", "tracepoint. workqueue_execute_start."], ["workqueue:workqueue_execute_end", "tracepoint. workqueue_execute_end."], ["signal:signal_generate", "tracepoint. signal_generate."], ["signal:signal_deliver", "tracepoint. signal_deliver."], ["irq:irq_handler_entry", "tracepoint. irq_handler_entry."], ["irq:irq_handler_exit", "tracepoint. irq_handler_exit."], ["irq:softirq_entry", "tracepoint. softirq_entry."], ["irq:softirq_exit", "tracepoint. softirq_exit."], ["irq:softirq_raise", "tracepoint. softirq_raise."], ["cpuhp:cpuhp_enter", "tracepoint. cpuhp_enter."], ["cpuhp:cpuhp_multi_enter", "tracepoint. cpuhp_multi_enter."], ["cpuhp:cpuhp_exit", "tracepoint. cpuhp_exit."], ["task:task_newtask", "tracepoint. task_newtask."], ["task:task_rename", "tracepoint. task_rename."], ["mpx:mpx_bounds_register_exception", "tracepoint. mpx_bounds_register_exception."], ["mpx:bounds_exception_mpx", "tracepoint. bounds_exception_mpx."], ["mpx:mpx_unmap_zap", "tracepoint. mpx_unmap_zap."], ["mpx:mpx_unmap_search", "tracepoint. mpx_unmap_search."], ["mpx:mpx_new_bounds_table", "tracepoint. mpx_new_bounds_table."], ["exceptions:page_fault_user", "tracepoint. page_fault_user."], ["exceptions:page_fault_kernel", "tracepoint. page_fault_kernel."], ["tlb:tlb_flush", "tracepoint. tlb_flush."], ["resctrl:pseudo_lock_mem_latency", "tracepoint. pseudo_lock_mem_latency."], ["resctrl:pseudo_lock_l2", "tracepoint. pseudo_lock_l2."], ["resctrl:pseudo_lock_l3", "tracepoint. pseudo_lock_l3."], ["mce:mce_record", "tracepoint. mce_record."], ["x86_fpu:x86_fpu_before_save", "tracepoint. x86_fpu_before_save."], ["x86_fpu:x86_fpu_after_save", "tracepoint. x86_fpu_after_save."], ["x86_fpu:x86_fpu_before_restore", "tracepoint. x86_fpu_before_restore."], ["x86_fpu:x86_fpu_after_restore", "tracepoint. x86_fpu_after_restore."], ["x86_fpu:x86_fpu_regs_activated", "tracepoint. x86_fpu_regs_activated."], ["x86_fpu:x86_fpu_regs_deactivated", "tracepoint. x86_fpu_regs_deactivated."], ["x86_fpu:x86_fpu_init_state", "tracepoint. x86_fpu_init_state."], ["x86_fpu:x86_fpu_dropped", "tracepoint. x86_fpu_dropped."], ["x86_fpu:x86_fpu_copy_src", "tracepoint. x86_fpu_copy_src."], ["x86_fpu:x86_fpu_copy_dst", "tracepoint. x86_fpu_copy_dst."], ["x86_fpu:x86_fpu_xstate_check_failed", "tracepoint. x86_fpu_xstate_check_failed."], ["nmi:nmi_handler", "tracepoint. nmi_handler."], ["irq_vectors:local_timer_entry", "tracepoint. local_timer_entry."], ["irq_vectors:local_timer_exit", "tracepoint. local_timer_exit."], ["irq_vectors:spurious_apic_entry", "tracepoint. spurious_apic_entry."], ["irq_vectors:spurious_apic_exit", "tracepoint. spurious_apic_exit."], ["irq_vectors:error_apic_entry", "tracepoint. error_apic_entry."], ["irq_vectors:error_apic_exit", "tracepoint. error_apic_exit."], ["irq_vectors:x86_platform_ipi_entry", "tracepoint. x86_platform_ipi_entry."], ["irq_vectors:x86_platform_ipi_exit", "tracepoint. x86_platform_ipi_exit."], ["irq_vectors:irq_work_entry", "tracepoint. irq_work_entry."], ["irq_vectors:irq_work_exit", "tracepoint. irq_work_exit."], ["irq_vectors:reschedule_entry", "tracepoint. reschedule_entry."], ["irq_vectors:reschedule_exit", "tracepoint. reschedule_exit."], ["irq_vectors:call_function_entry", "tracepoint. call_function_entry."], ["irq_vectors:call_function_exit", "tracepoint. call_function_exit."], ["irq_vectors:call_function_single_entry", "tracepoint. call_function_single_entry."], ["irq_vectors:call_function_single_exit", "tracepoint. call_function_single_exit."], ["irq_vectors:threshold_apic_entry", "tracepoint. threshold_apic_entry."], ["irq_vectors:threshold_apic_exit", "tracepoint. threshold_apic_exit."], ["irq_vectors:deferred_error_apic_entry", "tracepoint. deferred_error_apic_entry."], ["irq_vectors:deferred_error_apic_exit", "tracepoint. deferred_error_apic_exit."], ["irq_vectors:thermal_apic_entry", "tracepoint. thermal_apic_entry."], ["irq_vectors:thermal_apic_exit", "tracepoint. thermal_apic_exit."], ["irq_vectors:vector_config", "tracepoint. vector_config."], ["irq_vectors:vector_update", "tracepoint. vector_update."], ["irq_vectors:vector_clear", "tracepoint. vector_clear."], ["irq_vectors:vector_reserve_managed", "tracepoint. vector_reserve_managed."], ["irq_vectors:vector_reserve", "tracepoint. vector_reserve."], ["irq_vectors:vector_alloc", "tracepoint. vector_alloc."], ["irq_vectors:vector_alloc_managed", "tracepoint. vector_alloc_managed."], ["irq_vectors:vector_activate", "tracepoint. vector_activate."], ["irq_vectors:vector_deactivate", "tracepoint. vector_deactivate."], ["irq_vectors:vector_teardown", "tracepoint. vector_teardown."], ["irq_vectors:vector_setup", "tracepoint. vector_setup."], ["irq_vectors:vector_free_moved", "tracepoint. vector_free_moved."], ["syscalls:sys_enter_socket", "tracepoint. sys_enter_socket."], ["syscalls:sys_exit_socket", "tracepoint. sys_exit_socket."], ["syscalls:sys_enter_socketpair", "tracepoint. sys_enter_socketpair."], ["syscalls:sys_exit_socketpair", "tracepoint. sys_exit_socketpair."], ["syscalls:sys_enter_bind", "tracepoint. sys_enter_bind."], ["syscalls:sys_exit_bind", "tracepoint. sys_exit_bind."], ["syscalls:sys_enter_listen", "tracepoint. sys_enter_listen."], ["syscalls:sys_exit_listen", "tracepoint. sys_exit_listen."], ["syscalls:sys_enter_accept4", "tracepoint. sys_enter_accept4."], ["syscalls:sys_exit_accept4", "tracepoint. sys_exit_accept4."], ["syscalls:sys_enter_accept", "tracepoint. sys_enter_accept."], ["syscalls:sys_exit_accept", "tracepoint. sys_exit_accept."], ["syscalls:sys_enter_connect", "tracepoint. sys_enter_connect."], ["syscalls:sys_exit_connect", "tracepoint. sys_exit_connect."], ["syscalls:sys_enter_getsockname", "tracepoint. sys_enter_getsockname."], ["syscalls:sys_exit_getsockname", "tracepoint. sys_exit_getsockname."], ["syscalls:sys_enter_getpeername", "tracepoint. sys_enter_getpeername."], ["syscalls:sys_exit_getpeername", "tracepoint. sys_exit_getpeername."], ["syscalls:sys_enter_sendto", "tracepoint. sys_enter_sendto."], ["syscalls:sys_exit_sendto", "tracepoint. sys_exit_sendto."], ["syscalls:sys_enter_recvfrom", "tracepoint. sys_enter_recvfrom."], ["syscalls:sys_exit_recvfrom", "tracepoint. sys_exit_recvfrom."], ["syscalls:sys_enter_setsockopt", "tracepoint. sys_enter_setsockopt."], ["syscalls:sys_exit_setsockopt", "tracepoint. sys_exit_setsockopt."], ["syscalls:sys_enter_getsockopt", "tracepoint. sys_enter_getsockopt."], ["syscalls:sys_exit_getsockopt", "tracepoint. sys_exit_getsockopt."], ["syscalls:sys_enter_shutdown", "tracepoint. sys_enter_shutdown."], ["syscalls:sys_exit_shutdown", "tracepoint. sys_exit_shutdown."], ["syscalls:sys_enter_sendmsg", "tracepoint. sys_enter_sendmsg."], ["syscalls:sys_exit_sendmsg", "tracepoint. sys_exit_sendmsg."], ["syscalls:sys_enter_sendmmsg", "tracepoint. sys_enter_sendmmsg."], ["syscalls:sys_exit_sendmmsg", "tracepoint. sys_exit_sendmmsg."], ["syscalls:sys_enter_recvmsg", "tracepoint. sys_enter_recvmsg."], ["syscalls:sys_exit_recvmsg", "tracepoint. sys_exit_recvmsg."], ["syscalls:sys_enter_recvmmsg", "tracepoint. sys_enter_recvmmsg."], ["syscalls:sys_exit_recvmmsg", "tracepoint. sys_exit_recvmmsg."], ["syscalls:sys_enter_getrandom", "tracepoint. sys_enter_getrandom."], ["syscalls:sys_exit_getrandom", "tracepoint. sys_exit_getrandom."], ["syscalls:sys_enter_ioprio_set", "tracepoint. sys_enter_ioprio_set."], ["syscalls:sys_exit_ioprio_set", "tracepoint. sys_exit_ioprio_set."], ["syscalls:sys_enter_ioprio_get", "tracepoint. sys_enter_ioprio_get."], ["syscalls:sys_exit_ioprio_get", "tracepoint. sys_exit_ioprio_get."], ["syscalls:sys_enter_add_key", "tracepoint. sys_enter_add_key."], ["syscalls:sys_exit_add_key", "tracepoint. sys_exit_add_key."], ["syscalls:sys_enter_request_key", "tracepoint. sys_enter_request_key."], ["syscalls:sys_exit_request_key", "tracepoint. sys_exit_request_key."], ["syscalls:sys_enter_keyctl", "tracepoint. sys_enter_keyctl."], ["syscalls:sys_exit_keyctl", "tracepoint. sys_exit_keyctl."], ["syscalls:sys_enter_mq_open", "tracepoint. sys_enter_mq_open."], ["syscalls:sys_exit_mq_open", "tracepoint. sys_exit_mq_open."], ["syscalls:sys_enter_mq_unlink", "tracepoint. sys_enter_mq_unlink."], ["syscalls:sys_exit_mq_unlink", "tracepoint. sys_exit_mq_unlink."], ["syscalls:sys_enter_mq_timedsend", "tracepoint. sys_enter_mq_timedsend."], ["syscalls:sys_exit_mq_timedsend", "tracepoint. sys_exit_mq_timedsend."], ["syscalls:sys_enter_mq_timedreceive", "tracepoint. sys_enter_mq_timedreceive."], ["syscalls:sys_exit_mq_timedreceive", "tracepoint. sys_exit_mq_timedreceive."], ["syscalls:sys_enter_mq_notify", "tracepoint. sys_enter_mq_notify."], ["syscalls:sys_exit_mq_notify", "tracepoint. sys_exit_mq_notify."], ["syscalls:sys_enter_mq_getsetattr", "tracepoint. sys_enter_mq_getsetattr."], ["syscalls:sys_exit_mq_getsetattr", "tracepoint. sys_exit_mq_getsetattr."], ["syscalls:sys_enter_shmget", "tracepoint. sys_enter_shmget."], ["syscalls:sys_exit_shmget", "tracepoint. sys_exit_shmget."], ["syscalls:sys_enter_shmctl", "tracepoint. sys_enter_shmctl."], ["syscalls:sys_exit_shmctl", "tracepoint. sys_exit_shmctl."], ["syscalls:sys_enter_shmat", "tracepoint. sys_enter_shmat."], ["syscalls:sys_exit_shmat", "tracepoint. sys_exit_shmat."], ["syscalls:sys_enter_shmdt", "tracepoint. sys_enter_shmdt."], ["syscalls:sys_exit_shmdt", "tracepoint. sys_exit_shmdt."], ["syscalls:sys_enter_semget", "tracepoint. sys_enter_semget."], ["syscalls:sys_exit_semget", "tracepoint. sys_exit_semget."], ["syscalls:sys_enter_semctl", "tracepoint. sys_enter_semctl."], ["syscalls:sys_exit_semctl", "tracepoint. sys_exit_semctl."], ["syscalls:sys_enter_semtimedop", "tracepoint. sys_enter_semtimedop."], ["syscalls:sys_exit_semtimedop", "tracepoint. sys_exit_semtimedop."], ["syscalls:sys_enter_semop", "tracepoint. sys_enter_semop."], ["syscalls:sys_exit_semop", "tracepoint. sys_exit_semop."], ["syscalls:sys_enter_msgget", "tracepoint. sys_enter_msgget."], ["syscalls:sys_exit_msgget", "tracepoint. sys_exit_msgget."], ["syscalls:sys_enter_msgctl", "tracepoint. sys_enter_msgctl."], ["syscalls:sys_exit_msgctl", "tracepoint. sys_exit_msgctl."], ["syscalls:sys_enter_msgsnd", "tracepoint. sys_enter_msgsnd."], ["syscalls:sys_exit_msgsnd", "tracepoint. sys_exit_msgsnd."], ["syscalls:sys_enter_msgrcv", "tracepoint. sys_enter_msgrcv."], ["syscalls:sys_exit_msgrcv", "tracepoint. sys_exit_msgrcv."], ["syscalls:sys_enter_lookup_dcookie", "tracepoint. sys_enter_lookup_dcookie."], ["syscalls:sys_exit_lookup_dcookie", "tracepoint. sys_exit_lookup_dcookie."], ["syscalls:sys_enter_quotactl", "tracepoint. sys_enter_quotactl."], ["syscalls:sys_exit_quotactl", "tracepoint. sys_exit_quotactl."], ["syscalls:sys_enter_name_to_handle_at", "tracepoint. sys_enter_name_to_handle_at."], ["syscalls:sys_exit_name_to_handle_at", "tracepoint. sys_exit_name_to_handle_at."], ["syscalls:sys_enter_open_by_handle_at", "tracepoint. sys_enter_open_by_handle_at."], ["syscalls:sys_exit_open_by_handle_at", "tracepoint. sys_exit_open_by_handle_at."], ["syscalls:sys_enter_flock", "tracepoint. sys_enter_flock."], ["syscalls:sys_exit_flock", "tracepoint. sys_exit_flock."], ["syscalls:sys_enter_io_uring_enter", "tracepoint. sys_enter_io_uring_enter."], ["syscalls:sys_exit_io_uring_enter", "tracepoint. sys_exit_io_uring_enter."], ["syscalls:sys_enter_io_uring_setup", "tracepoint. sys_enter_io_uring_setup."], ["syscalls:sys_exit_io_uring_setup", "tracepoint. sys_exit_io_uring_setup."], ["syscalls:sys_enter_io_uring_register", "tracepoint. sys_enter_io_uring_register."], ["syscalls:sys_exit_io_uring_register", "tracepoint. sys_exit_io_uring_register."], ["syscalls:sys_enter_io_setup", "tracepoint. sys_enter_io_setup."], ["syscalls:sys_exit_io_setup", "tracepoint. sys_exit_io_setup."], ["syscalls:sys_enter_io_destroy", "tracepoint. sys_enter_io_destroy."], ["syscalls:sys_exit_io_destroy", "tracepoint. sys_exit_io_destroy."], ["syscalls:sys_enter_io_submit", "tracepoint. sys_enter_io_submit."], ["syscalls:sys_exit_io_submit", "tracepoint. sys_exit_io_submit."], ["syscalls:sys_enter_io_cancel", "tracepoint. sys_enter_io_cancel."], ["syscalls:sys_exit_io_cancel", "tracepoint. sys_exit_io_cancel."], ["syscalls:sys_enter_io_getevents", "tracepoint. sys_enter_io_getevents."], ["syscalls:sys_exit_io_getevents", "tracepoint. sys_exit_io_getevents."], ["syscalls:sys_enter_io_pgetevents", "tracepoint. sys_enter_io_pgetevents."], ["syscalls:sys_exit_io_pgetevents", "tracepoint. sys_exit_io_pgetevents."], ["syscalls:sys_enter_userfaultfd", "tracepoint. sys_enter_userfaultfd."], ["syscalls:sys_exit_userfaultfd", "tracepoint. sys_exit_userfaultfd."], ["syscalls:sys_enter_eventfd2", "tracepoint. sys_enter_eventfd2."], ["syscalls:sys_exit_eventfd2", "tracepoint. sys_exit_eventfd2."], ["syscalls:sys_enter_eventfd", "tracepoint. sys_enter_eventfd."], ["syscalls:sys_exit_eventfd", "tracepoint. sys_exit_eventfd."], ["syscalls:sys_enter_timerfd_create", "tracepoint. sys_enter_timerfd_create."], ["syscalls:sys_exit_timerfd_create", "tracepoint. sys_exit_timerfd_create."], ["syscalls:sys_enter_timerfd_settime", "tracepoint. sys_enter_timerfd_settime."], ["syscalls:sys_exit_timerfd_settime", "tracepoint. sys_exit_timerfd_settime."], ["syscalls:sys_enter_timerfd_gettime", "tracepoint. sys_enter_timerfd_gettime."], ["syscalls:sys_exit_timerfd_gettime", "tracepoint. sys_exit_timerfd_gettime."], ["syscalls:sys_enter_signalfd4", "tracepoint. sys_enter_signalfd4."], ["syscalls:sys_exit_signalfd4", "tracepoint. sys_exit_signalfd4."], ["syscalls:sys_enter_signalfd", "tracepoint. sys_enter_signalfd."], ["syscalls:sys_exit_signalfd", "tracepoint. sys_exit_signalfd."], ["syscalls:sys_enter_epoll_create1", "tracepoint. sys_enter_epoll_create1."], ["syscalls:sys_exit_epoll_create1", "tracepoint. sys_exit_epoll_create1."], ["syscalls:sys_enter_epoll_create", "tracepoint. sys_enter_epoll_create."], ["syscalls:sys_exit_epoll_create", "tracepoint. sys_exit_epoll_create."], ["syscalls:sys_enter_epoll_ctl", "tracepoint. sys_enter_epoll_ctl."], ["syscalls:sys_exit_epoll_ctl", "tracepoint. sys_exit_epoll_ctl."], ["syscalls:sys_enter_epoll_wait", "tracepoint. sys_enter_epoll_wait."], ["syscalls:sys_exit_epoll_wait", "tracepoint. sys_exit_epoll_wait."], ["syscalls:sys_enter_epoll_pwait", "tracepoint. sys_enter_epoll_pwait."], ["syscalls:sys_exit_epoll_pwait", "tracepoint. sys_exit_epoll_pwait."], ["syscalls:sys_enter_fanotify_init", "tracepoint. sys_enter_fanotify_init."], ["syscalls:sys_exit_fanotify_init", "tracepoint. sys_exit_fanotify_init."], ["syscalls:sys_enter_fanotify_mark", "tracepoint. sys_enter_fanotify_mark."], ["syscalls:sys_exit_fanotify_mark", "tracepoint. sys_exit_fanotify_mark."], ["syscalls:sys_enter_inotify_init1", "tracepoint. sys_enter_inotify_init1."], ["syscalls:sys_exit_inotify_init1", "tracepoint. sys_exit_inotify_init1."], ["syscalls:sys_enter_inotify_init", "tracepoint. sys_enter_inotify_init."], ["syscalls:sys_exit_inotify_init", "tracepoint. sys_exit_inotify_init."], ["syscalls:sys_enter_inotify_add_watch", "tracepoint. sys_enter_inotify_add_watch."], ["syscalls:sys_exit_inotify_add_watch", "tracepoint. sys_exit_inotify_add_watch."], ["syscalls:sys_enter_inotify_rm_watch", "tracepoint. sys_enter_inotify_rm_watch."], ["syscalls:sys_exit_inotify_rm_watch", "tracepoint. sys_exit_inotify_rm_watch."], ["syscalls:sys_enter_fsopen", "tracepoint. sys_enter_fsopen."], ["syscalls:sys_exit_fsopen", "tracepoint. sys_exit_fsopen."], ["syscalls:sys_enter_fspick", "tracepoint. sys_enter_fspick."], ["syscalls:sys_exit_fspick", "tracepoint. sys_exit_fspick."], ["syscalls:sys_enter_fsconfig", "tracepoint. sys_enter_fsconfig."], ["syscalls:sys_exit_fsconfig", "tracepoint. sys_exit_fsconfig."], ["syscalls:sys_enter_statfs", "tracepoint. sys_enter_statfs."], ["syscalls:sys_exit_statfs", "tracepoint. sys_exit_statfs."], ["syscalls:sys_enter_fstatfs", "tracepoint. sys_enter_fstatfs."], ["syscalls:sys_exit_fstatfs", "tracepoint. sys_exit_fstatfs."], ["syscalls:sys_enter_ustat", "tracepoint. sys_enter_ustat."], ["syscalls:sys_exit_ustat", "tracepoint. sys_exit_ustat."], ["syscalls:sys_enter_getcwd", "tracepoint. sys_enter_getcwd."], ["syscalls:sys_exit_getcwd", "tracepoint. sys_exit_getcwd."], ["syscalls:sys_enter_utimensat", "tracepoint. sys_enter_utimensat."], ["syscalls:sys_exit_utimensat", "tracepoint. sys_exit_utimensat."], ["syscalls:sys_enter_futimesat", "tracepoint. sys_enter_futimesat."], ["syscalls:sys_exit_futimesat", "tracepoint. sys_exit_futimesat."], ["syscalls:sys_enter_utimes", "tracepoint. sys_enter_utimes."], ["syscalls:sys_exit_utimes", "tracepoint. sys_exit_utimes."], ["syscalls:sys_enter_utime", "tracepoint. sys_enter_utime."], ["syscalls:sys_exit_utime", "tracepoint. sys_exit_utime."], ["syscalls:sys_enter_sync", "tracepoint. sys_enter_sync."], ["syscalls:sys_exit_sync", "tracepoint. sys_exit_sync."], ["syscalls:sys_enter_syncfs", "tracepoint. sys_enter_syncfs."], ["syscalls:sys_exit_syncfs", "tracepoint. sys_exit_syncfs."], ["syscalls:sys_enter_fsync", "tracepoint. sys_enter_fsync."], ["syscalls:sys_exit_fsync", "tracepoint. sys_exit_fsync."], ["syscalls:sys_enter_fdatasync", "tracepoint. sys_enter_fdatasync."], ["syscalls:sys_exit_fdatasync", "tracepoint. sys_exit_fdatasync."], ["syscalls:sys_enter_sync_file_range", "tracepoint. sys_enter_sync_file_range."], ["syscalls:sys_exit_sync_file_range", "tracepoint. sys_exit_sync_file_range."], ["syscalls:sys_enter_vmsplice", "tracepoint. sys_enter_vmsplice."], ["syscalls:sys_exit_vmsplice", "tracepoint. sys_exit_vmsplice."], ["syscalls:sys_enter_splice", "tracepoint. sys_enter_splice."], ["syscalls:sys_exit_splice", "tracepoint. sys_exit_splice."], ["syscalls:sys_enter_tee", "tracepoint. sys_enter_tee."], ["syscalls:sys_exit_tee", "tracepoint. sys_exit_tee."], ["syscalls:sys_enter_setxattr", "tracepoint. sys_enter_setxattr."], ["syscalls:sys_exit_setxattr", "tracepoint. sys_exit_setxattr."], ["syscalls:sys_enter_lsetxattr", "tracepoint. sys_enter_lsetxattr."], ["syscalls:sys_exit_lsetxattr", "tracepoint. sys_exit_lsetxattr."], ["syscalls:sys_enter_fsetxattr", "tracepoint. sys_enter_fsetxattr."], ["syscalls:sys_exit_fsetxattr", "tracepoint. sys_exit_fsetxattr."], ["syscalls:sys_enter_getxattr", "tracepoint. sys_enter_getxattr."], ["syscalls:sys_exit_getxattr", "tracepoint. sys_exit_getxattr."], ["syscalls:sys_enter_lgetxattr", "tracepoint. sys_enter_lgetxattr."], ["syscalls:sys_exit_lgetxattr", "tracepoint. sys_exit_lgetxattr."], ["syscalls:sys_enter_fgetxattr", "tracepoint. sys_enter_fgetxattr."], ["syscalls:sys_exit_fgetxattr", "tracepoint. sys_exit_fgetxattr."], ["syscalls:sys_enter_listxattr", "tracepoint. sys_enter_listxattr."], ["syscalls:sys_exit_listxattr", "tracepoint. sys_exit_listxattr."], ["syscalls:sys_enter_llistxattr", "tracepoint. sys_enter_llistxattr."], ["syscalls:sys_exit_llistxattr", "tracepoint. sys_exit_llistxattr."], ["syscalls:sys_enter_flistxattr", "tracepoint. sys_enter_flistxattr."], ["syscalls:sys_exit_flistxattr", "tracepoint. sys_exit_flistxattr."], ["syscalls:sys_enter_removexattr", "tracepoint. sys_enter_removexattr."], ["syscalls:sys_exit_removexattr", "tracepoint. sys_exit_removexattr."], ["syscalls:sys_enter_lremovexattr", "tracepoint. sys_enter_lremovexattr."], ["syscalls:sys_exit_lremovexattr", "tracepoint. sys_exit_lremovexattr."], ["syscalls:sys_enter_fremovexattr", "tracepoint. sys_enter_fremovexattr."], ["syscalls:sys_exit_fremovexattr", "tracepoint. sys_exit_fremovexattr."], ["syscalls:sys_enter_umount", "tracepoint. sys_enter_umount."], ["syscalls:sys_exit_umount", "tracepoint. sys_exit_umount."], ["syscalls:sys_enter_open_tree", "tracepoint. sys_enter_open_tree."], ["syscalls:sys_exit_open_tree", "tracepoint. sys_exit_open_tree."], ["syscalls:sys_enter_mount", "tracepoint. sys_enter_mount."], ["syscalls:sys_exit_mount", "tracepoint. sys_exit_mount."], ["syscalls:sys_enter_fsmount", "tracepoint. sys_enter_fsmount."], ["syscalls:sys_exit_fsmount", "tracepoint. sys_exit_fsmount."], ["syscalls:sys_enter_move_mount", "tracepoint. sys_enter_move_mount."], ["syscalls:sys_exit_move_mount", "tracepoint. sys_exit_move_mount."], ["syscalls:sys_enter_pivot_root", "tracepoint. sys_enter_pivot_root."], ["syscalls:sys_exit_pivot_root", "tracepoint. sys_exit_pivot_root."], ["syscalls:sys_enter_sysfs", "tracepoint. sys_enter_sysfs."], ["syscalls:sys_exit_sysfs", "tracepoint. sys_exit_sysfs."], ["syscalls:sys_enter_dup3", "tracepoint. sys_enter_dup3."], ["syscalls:sys_exit_dup3", "tracepoint. sys_exit_dup3."], ["syscalls:sys_enter_dup2", "tracepoint. sys_enter_dup2."], ["syscalls:sys_exit_dup2", "tracepoint. sys_exit_dup2."], ["syscalls:sys_enter_dup", "tracepoint. sys_enter_dup."], ["syscalls:sys_exit_dup", "tracepoint. sys_exit_dup."], ["syscalls:sys_enter_select", "tracepoint. sys_enter_select."], ["syscalls:sys_exit_select", "tracepoint. sys_exit_select."], ["syscalls:sys_enter_pselect6", "tracepoint. sys_enter_pselect6."], ["syscalls:sys_exit_pselect6", "tracepoint. sys_exit_pselect6."], ["syscalls:sys_enter_poll", "tracepoint. sys_enter_poll."], ["syscalls:sys_exit_poll", "tracepoint. sys_exit_poll."], ["syscalls:sys_enter_ppoll", "tracepoint. sys_enter_ppoll."], ["syscalls:sys_exit_ppoll", "tracepoint. sys_exit_ppoll."], ["syscalls:sys_enter_getdents", "tracepoint. sys_enter_getdents."], ["syscalls:sys_exit_getdents", "tracepoint. sys_exit_getdents."], ["syscalls:sys_enter_getdents64", "tracepoint. sys_enter_getdents64."], ["syscalls:sys_exit_getdents64", "tracepoint. sys_exit_getdents64."], ["syscalls:sys_enter_ioctl", "tracepoint. sys_enter_ioctl."], ["syscalls:sys_exit_ioctl", "tracepoint. sys_exit_ioctl."], ["syscalls:sys_enter_fcntl", "tracepoint. sys_enter_fcntl."], ["syscalls:sys_exit_fcntl", "tracepoint. sys_exit_fcntl."], ["syscalls:sys_enter_mknodat", "tracepoint. sys_enter_mknodat."], ["syscalls:sys_exit_mknodat", "tracepoint. sys_exit_mknodat."], ["syscalls:sys_enter_mknod", "tracepoint. sys_enter_mknod."], ["syscalls:sys_exit_mknod", "tracepoint. sys_exit_mknod."], ["syscalls:sys_enter_mkdirat", "tracepoint. sys_enter_mkdirat."], ["syscalls:sys_exit_mkdirat", "tracepoint. sys_exit_mkdirat."], ["syscalls:sys_enter_mkdir", "tracepoint. sys_enter_mkdir."], ["syscalls:sys_exit_mkdir", "tracepoint. sys_exit_mkdir."], ["syscalls:sys_enter_rmdir", "tracepoint. sys_enter_rmdir."], ["syscalls:sys_exit_rmdir", "tracepoint. sys_exit_rmdir."], ["syscalls:sys_enter_unlinkat", "tracepoint. sys_enter_unlinkat."], ["syscalls:sys_exit_unlinkat", "tracepoint. sys_exit_unlinkat."], ["syscalls:sys_enter_unlink", "tracepoint. sys_enter_unlink."], ["syscalls:sys_exit_unlink", "tracepoint. sys_exit_unlink."], ["syscalls:sys_enter_symlinkat", "tracepoint. sys_enter_symlinkat."], ["syscalls:sys_exit_symlinkat", "tracepoint. sys_exit_symlinkat."], ["syscalls:sys_enter_symlink", "tracepoint. sys_enter_symlink."], ["syscalls:sys_exit_symlink", "tracepoint. sys_exit_symlink."], ["syscalls:sys_enter_linkat", "tracepoint. sys_enter_linkat."], ["syscalls:sys_exit_linkat", "tracepoint. sys_exit_linkat."], ["syscalls:sys_enter_link", "tracepoint. sys_enter_link."], ["syscalls:sys_exit_link", "tracepoint. sys_exit_link."], ["syscalls:sys_enter_renameat2", "tracepoint. sys_enter_renameat2."], ["syscalls:sys_exit_renameat2", "tracepoint. sys_exit_renameat2."], ["syscalls:sys_enter_renameat", "tracepoint. sys_enter_renameat."], ["syscalls:sys_exit_renameat", "tracepoint. sys_exit_renameat."], ["syscalls:sys_enter_rename", "tracepoint. sys_enter_rename."], ["syscalls:sys_exit_rename", "tracepoint. sys_exit_rename."], ["syscalls:sys_enter_pipe2", "tracepoint. sys_enter_pipe2."], ["syscalls:sys_exit_pipe2", "tracepoint. sys_exit_pipe2."], ["syscalls:sys_enter_pipe", "tracepoint. sys_enter_pipe."], ["syscalls:sys_exit_pipe", "tracepoint. sys_exit_pipe."], ["syscalls:sys_enter_execve", "tracepoint. sys_enter_execve."], ["syscalls:sys_exit_execve", "tracepoint. sys_exit_execve."], ["syscalls:sys_enter_execveat", "tracepoint. sys_enter_execveat."], ["syscalls:sys_exit_execveat", "tracepoint. sys_exit_execveat."], ["syscalls:sys_enter_newstat", "tracepoint. sys_enter_newstat."], ["syscalls:sys_exit_newstat", "tracepoint. sys_exit_newstat."], ["syscalls:sys_enter_newlstat", "tracepoint. sys_enter_newlstat."], ["syscalls:sys_exit_newlstat", "tracepoint. sys_exit_newlstat."], ["syscalls:sys_enter_newfstatat", "tracepoint. sys_enter_newfstatat."], ["syscalls:sys_exit_newfstatat", "tracepoint. sys_exit_newfstatat."], ["syscalls:sys_enter_newfstat", "tracepoint. sys_enter_newfstat."], ["syscalls:sys_exit_newfstat", "tracepoint. sys_exit_newfstat."], ["syscalls:sys_enter_readlinkat", "tracepoint. sys_enter_readlinkat."], ["syscalls:sys_exit_readlinkat", "tracepoint. sys_exit_readlinkat."], ["syscalls:sys_enter_readlink", "tracepoint. sys_enter_readlink."], ["syscalls:sys_exit_readlink", "tracepoint. sys_exit_readlink."], ["syscalls:sys_enter_statx", "tracepoint. sys_enter_statx."], ["syscalls:sys_exit_statx", "tracepoint. sys_exit_statx."], ["syscalls:sys_enter_lseek", "tracepoint. sys_enter_lseek."], ["syscalls:sys_exit_lseek", "tracepoint. sys_exit_lseek."], ["syscalls:sys_enter_read", "tracepoint. sys_enter_read."], ["syscalls:sys_exit_read", "tracepoint. sys_exit_read."], ["syscalls:sys_enter_write", "tracepoint. sys_enter_write."], ["syscalls:sys_exit_write", "tracepoint. sys_exit_write."], ["syscalls:sys_enter_pread64", "tracepoint. sys_enter_pread64."], ["syscalls:sys_exit_pread64", "tracepoint. sys_exit_pread64."], ["syscalls:sys_enter_pwrite64", "tracepoint. sys_enter_pwrite64."], ["syscalls:sys_exit_pwrite64", "tracepoint. sys_exit_pwrite64."], ["syscalls:sys_enter_readv", "tracepoint. sys_enter_readv."], ["syscalls:sys_exit_readv", "tracepoint. sys_exit_readv."], ["syscalls:sys_enter_writev", "tracepoint. sys_enter_writev."], ["syscalls:sys_exit_writev", "tracepoint. sys_exit_writev."], ["syscalls:sys_enter_preadv", "tracepoint. sys_enter_preadv."], ["syscalls:sys_exit_preadv", "tracepoint. sys_exit_preadv."], ["syscalls:sys_enter_preadv2", "tracepoint. sys_enter_preadv2."], ["syscalls:sys_exit_preadv2", "tracepoint. sys_exit_preadv2."], ["syscalls:sys_enter_pwritev", "tracepoint. sys_enter_pwritev."], ["syscalls:sys_exit_pwritev", "tracepoint. sys_exit_pwritev."], ["syscalls:sys_enter_pwritev2", "tracepoint. sys_enter_pwritev2."], ["syscalls:sys_exit_pwritev2", "tracepoint. sys_exit_pwritev2."], ["syscalls:sys_enter_sendfile64", "tracepoint. sys_enter_sendfile64."], ["syscalls:sys_exit_sendfile64", "tracepoint. sys_exit_sendfile64."], ["syscalls:sys_enter_copy_file_range", "tracepoint. sys_enter_copy_file_range."], ["syscalls:sys_exit_copy_file_range", "tracepoint. sys_exit_copy_file_range."], ["syscalls:sys_enter_truncate", "tracepoint. sys_enter_truncate."], ["syscalls:sys_exit_truncate", "tracepoint. sys_exit_truncate."], ["syscalls:sys_enter_ftruncate", "tracepoint. sys_enter_ftruncate."], ["syscalls:sys_exit_ftruncate", "tracepoint. sys_exit_ftruncate."], ["syscalls:sys_enter_fallocate", "tracepoint. sys_enter_fallocate."], ["syscalls:sys_exit_fallocate", "tracepoint. sys_exit_fallocate."], ["syscalls:sys_enter_faccessat", "tracepoint. sys_enter_faccessat."], ["syscalls:sys_exit_faccessat", "tracepoint. sys_exit_faccessat."], ["syscalls:sys_enter_access", "tracepoint. sys_enter_access."], ["syscalls:sys_exit_access", "tracepoint. sys_exit_access."], ["syscalls:sys_enter_chdir", "tracepoint. sys_enter_chdir."], ["syscalls:sys_exit_chdir", "tracepoint. sys_exit_chdir."], ["syscalls:sys_enter_fchdir", "tracepoint. sys_enter_fchdir."], ["syscalls:sys_exit_fchdir", "tracepoint. sys_exit_fchdir."], ["syscalls:sys_enter_chroot", "tracepoint. sys_enter_chroot."], ["syscalls:sys_exit_chroot", "tracepoint. sys_exit_chroot."], ["syscalls:sys_enter_fchmod", "tracepoint. sys_enter_fchmod."], ["syscalls:sys_exit_fchmod", "tracepoint. sys_exit_fchmod."], ["syscalls:sys_enter_fchmodat", "tracepoint. sys_enter_fchmodat."], ["syscalls:sys_exit_fchmodat", "tracepoint. sys_exit_fchmodat."], ["syscalls:sys_enter_chmod", "tracepoint. sys_enter_chmod."], ["syscalls:sys_exit_chmod", "tracepoint. sys_exit_chmod."], ["syscalls:sys_enter_fchownat", "tracepoint. sys_enter_fchownat."], ["syscalls:sys_exit_fchownat", "tracepoint. sys_exit_fchownat."], ["syscalls:sys_enter_chown", "tracepoint. sys_enter_chown."], ["syscalls:sys_exit_chown", "tracepoint. sys_exit_chown."], ["syscalls:sys_enter_lchown", "tracepoint. sys_enter_lchown."], ["syscalls:sys_exit_lchown", "tracepoint. sys_exit_lchown."], ["syscalls:sys_enter_fchown", "tracepoint. sys_enter_fchown."], ["syscalls:sys_exit_fchown", "tracepoint. sys_exit_fchown."], ["syscalls:sys_enter_open", "tracepoint. sys_enter_open."], ["syscalls:sys_exit_open", "tracepoint. sys_exit_open."], ["syscalls:sys_enter_openat", "tracepoint. sys_enter_openat."], ["syscalls:sys_exit_openat", "tracepoint. sys_exit_openat."], ["syscalls:sys_enter_creat", "tracepoint. sys_enter_creat."], ["syscalls:sys_exit_creat", "tracepoint. sys_exit_creat."], ["syscalls:sys_enter_close", "tracepoint. sys_enter_close."], ["syscalls:sys_exit_close", "tracepoint. sys_exit_close."], ["syscalls:sys_enter_vhangup", "tracepoint. sys_enter_vhangup."], ["syscalls:sys_exit_vhangup", "tracepoint. sys_exit_vhangup."], ["syscalls:sys_enter_memfd_create", "tracepoint. sys_enter_memfd_create."], ["syscalls:sys_exit_memfd_create", "tracepoint. sys_exit_memfd_create."], ["syscalls:sys_enter_move_pages", "tracepoint. sys_enter_move_pages."], ["syscalls:sys_exit_move_pages", "tracepoint. sys_exit_move_pages."], ["syscalls:sys_enter_mbind", "tracepoint. sys_enter_mbind."], ["syscalls:sys_exit_mbind", "tracepoint. sys_exit_mbind."], ["syscalls:sys_enter_set_mempolicy", "tracepoint. sys_enter_set_mempolicy."], ["syscalls:sys_exit_set_mempolicy", "tracepoint. sys_exit_set_mempolicy."], ["syscalls:sys_enter_migrate_pages", "tracepoint. sys_enter_migrate_pages."], ["syscalls:sys_exit_migrate_pages", "tracepoint. sys_exit_migrate_pages."], ["syscalls:sys_enter_get_mempolicy", "tracepoint. sys_enter_get_mempolicy."], ["syscalls:sys_exit_get_mempolicy", "tracepoint. sys_exit_get_mempolicy."], ["syscalls:sys_enter_swapoff", "tracepoint. sys_enter_swapoff."], ["syscalls:sys_exit_swapoff", "tracepoint. sys_exit_swapoff."], ["syscalls:sys_enter_swapon", "tracepoint. sys_enter_swapon."], ["syscalls:sys_exit_swapon", "tracepoint. sys_exit_swapon."], ["syscalls:sys_enter_madvise", "tracepoint. sys_enter_madvise."], ["syscalls:sys_exit_madvise", "tracepoint. sys_exit_madvise."], ["syscalls:sys_enter_process_vm_readv", "tracepoint. sys_enter_process_vm_readv."], ["syscalls:sys_exit_process_vm_readv", "tracepoint. sys_exit_process_vm_readv."], ["syscalls:sys_enter_process_vm_writev", "tracepoint. sys_enter_process_vm_writev."], ["syscalls:sys_exit_process_vm_writev", "tracepoint. sys_exit_process_vm_writev."], ["syscalls:sys_enter_msync", "tracepoint. sys_enter_msync."], ["syscalls:sys_exit_msync", "tracepoint. sys_exit_msync."], ["syscalls:sys_enter_mremap", "tracepoint. sys_enter_mremap."], ["syscalls:sys_exit_mremap", "tracepoint. sys_exit_mremap."], ["syscalls:sys_enter_mprotect", "tracepoint. sys_enter_mprotect."], ["syscalls:sys_exit_mprotect", "tracepoint. sys_exit_mprotect."], ["syscalls:sys_enter_pkey_mprotect", "tracepoint. sys_enter_pkey_mprotect."], ["syscalls:sys_exit_pkey_mprotect", "tracepoint. sys_exit_pkey_mprotect."], ["syscalls:sys_enter_pkey_alloc", "tracepoint. sys_enter_pkey_alloc."], ["syscalls:sys_exit_pkey_alloc", "tracepoint. sys_exit_pkey_alloc."], ["syscalls:sys_enter_pkey_free", "tracepoint. sys_enter_pkey_free."], ["syscalls:sys_exit_pkey_free", "tracepoint. sys_exit_pkey_free."], ["syscalls:sys_enter_brk", "tracepoint. sys_enter_brk."], ["syscalls:sys_exit_brk", "tracepoint. sys_exit_brk."], ["syscalls:sys_enter_munmap", "tracepoint. sys_enter_munmap."], ["syscalls:sys_exit_munmap", "tracepoint. sys_exit_munmap."], ["syscalls:sys_enter_remap_file_pages", "tracepoint. sys_enter_remap_file_pages."], ["syscalls:sys_exit_remap_file_pages", "tracepoint. sys_exit_remap_file_pages."], ["syscalls:sys_enter_mlock", "tracepoint. sys_enter_mlock."], ["syscalls:sys_exit_mlock", "tracepoint. sys_exit_mlock."], ["syscalls:sys_enter_mlock2", "tracepoint. sys_enter_mlock2."], ["syscalls:sys_exit_mlock2", "tracepoint. sys_exit_mlock2."], ["syscalls:sys_enter_munlock", "tracepoint. sys_enter_munlock."], ["syscalls:sys_exit_munlock", "tracepoint. sys_exit_munlock."], ["syscalls:sys_enter_mlockall", "tracepoint. sys_enter_mlockall."], ["syscalls:sys_exit_mlockall", "tracepoint. sys_exit_mlockall."], ["syscalls:sys_enter_munlockall", "tracepoint. sys_enter_munlockall."], ["syscalls:sys_exit_munlockall", "tracepoint. sys_exit_munlockall."], ["syscalls:sys_enter_mincore", "tracepoint. sys_enter_mincore."], ["syscalls:sys_exit_mincore", "tracepoint. sys_exit_mincore."], ["syscalls:sys_enter_readahead", "tracepoint. sys_enter_readahead."], ["syscalls:sys_exit_readahead", "tracepoint. sys_exit_readahead."], ["syscalls:sys_enter_fadvise64", "tracepoint. sys_enter_fadvise64."], ["syscalls:sys_exit_fadvise64", "tracepoint. sys_exit_fadvise64."], ["syscalls:sys_enter_rseq", "tracepoint. sys_enter_rseq."], ["syscalls:sys_exit_rseq", "tracepoint. sys_exit_rseq."], ["syscalls:sys_enter_perf_event_open", "tracepoint. sys_enter_perf_event_open."], ["syscalls:sys_exit_perf_event_open", "tracepoint. sys_exit_perf_event_open."], ["syscalls:sys_enter_bpf", "tracepoint. sys_enter_bpf."], ["syscalls:sys_exit_bpf", "tracepoint. sys_exit_bpf."], ["syscalls:sys_enter_seccomp", "tracepoint. sys_enter_seccomp."], ["syscalls:sys_exit_seccomp", "tracepoint. sys_exit_seccomp."], ["syscalls:sys_enter_kexec_file_load", "tracepoint. sys_enter_kexec_file_load."], ["syscalls:sys_exit_kexec_file_load", "tracepoint. sys_exit_kexec_file_load."], ["syscalls:sys_enter_kexec_load", "tracepoint. sys_enter_kexec_load."], ["syscalls:sys_exit_kexec_load", "tracepoint. sys_exit_kexec_load."], ["syscalls:sys_enter_acct", "tracepoint. sys_enter_acct."], ["syscalls:sys_exit_acct", "tracepoint. sys_exit_acct."], ["syscalls:sys_enter_delete_module", "tracepoint. sys_enter_delete_module."], ["syscalls:sys_exit_delete_module", "tracepoint. sys_exit_delete_module."], ["syscalls:sys_enter_init_module", "tracepoint. sys_enter_init_module."], ["syscalls:sys_exit_init_module", "tracepoint. sys_exit_init_module."], ["syscalls:sys_enter_finit_module", "tracepoint. sys_enter_finit_module."], ["syscalls:sys_exit_finit_module", "tracepoint. sys_exit_finit_module."], ["syscalls:sys_enter_set_robust_list", "tracepoint. sys_enter_set_robust_list."], ["syscalls:sys_exit_set_robust_list", "tracepoint. sys_exit_set_robust_list."], ["syscalls:sys_enter_get_robust_list", "tracepoint. sys_enter_get_robust_list."], ["syscalls:sys_exit_get_robust_list", "tracepoint. sys_exit_get_robust_list."], ["syscalls:sys_enter_futex", "tracepoint. sys_enter_futex."], ["syscalls:sys_exit_futex", "tracepoint. sys_exit_futex."], ["syscalls:sys_enter_getitimer", "tracepoint. sys_enter_getitimer."], ["syscalls:sys_exit_getitimer", "tracepoint. sys_exit_getitimer."], ["syscalls:sys_enter_alarm", "tracepoint. sys_enter_alarm."], ["syscalls:sys_exit_alarm", "tracepoint. sys_exit_alarm."], ["syscalls:sys_enter_setitimer", "tracepoint. sys_enter_setitimer."], ["syscalls:sys_exit_setitimer", "tracepoint. sys_exit_setitimer."], ["syscalls:sys_enter_timer_create", "tracepoint. sys_enter_timer_create."], ["syscalls:sys_exit_timer_create", "tracepoint. sys_exit_timer_create."], ["syscalls:sys_enter_timer_gettime", "tracepoint. sys_enter_timer_gettime."], ["syscalls:sys_exit_timer_gettime", "tracepoint. sys_exit_timer_gettime."], ["syscalls:sys_enter_timer_getoverrun", "tracepoint. sys_enter_timer_getoverrun."], ["syscalls:sys_exit_timer_getoverrun", "tracepoint. sys_exit_timer_getoverrun."], ["syscalls:sys_enter_timer_settime", "tracepoint. sys_enter_timer_settime."], ["syscalls:sys_exit_timer_settime", "tracepoint. sys_exit_timer_settime."], ["syscalls:sys_enter_timer_delete", "tracepoint. sys_enter_timer_delete."], ["syscalls:sys_exit_timer_delete", "tracepoint. sys_exit_timer_delete."], ["syscalls:sys_enter_clock_settime", "tracepoint. sys_enter_clock_settime."], ["syscalls:sys_exit_clock_settime", "tracepoint. sys_exit_clock_settime."], ["syscalls:sys_enter_clock_gettime", "tracepoint. sys_enter_clock_gettime."], ["syscalls:sys_exit_clock_gettime", "tracepoint. sys_exit_clock_gettime."], ["syscalls:sys_enter_clock_adjtime", "tracepoint. sys_enter_clock_adjtime."], ["syscalls:sys_exit_clock_adjtime", "tracepoint. sys_exit_clock_adjtime."], ["syscalls:sys_enter_clock_getres", "tracepoint. sys_enter_clock_getres."], ["syscalls:sys_exit_clock_getres", "tracepoint. sys_exit_clock_getres."], ["syscalls:sys_enter_clock_nanosleep", "tracepoint. sys_enter_clock_nanosleep."], ["syscalls:sys_exit_clock_nanosleep", "tracepoint. sys_exit_clock_nanosleep."], ["syscalls:sys_enter_nanosleep", "tracepoint. sys_enter_nanosleep."], ["syscalls:sys_exit_nanosleep", "tracepoint. sys_exit_nanosleep."], ["syscalls:sys_enter_time", "tracepoint. sys_enter_time."], ["syscalls:sys_exit_time", "tracepoint. sys_exit_time."], ["syscalls:sys_enter_gettimeofday", "tracepoint. sys_enter_gettimeofday."], ["syscalls:sys_exit_gettimeofday", "tracepoint. sys_exit_gettimeofday."], ["syscalls:sys_enter_settimeofday", "tracepoint. sys_enter_settimeofday."], ["syscalls:sys_exit_settimeofday", "tracepoint. sys_exit_settimeofday."], ["syscalls:sys_enter_adjtimex", "tracepoint. sys_enter_adjtimex."], ["syscalls:sys_exit_adjtimex", "tracepoint. sys_exit_adjtimex."], ["syscalls:sys_enter_kcmp", "tracepoint. sys_enter_kcmp."], ["syscalls:sys_exit_kcmp", "tracepoint. sys_exit_kcmp."], ["syscalls:sys_enter_syslog", "tracepoint. sys_enter_syslog."], ["syscalls:sys_exit_syslog", "tracepoint. sys_exit_syslog."], ["syscalls:sys_enter_membarrier", "tracepoint. sys_enter_membarrier."], ["syscalls:sys_exit_membarrier", "tracepoint. sys_exit_membarrier."], ["syscalls:sys_enter_sched_setscheduler", "tracepoint. sys_enter_sched_setscheduler."], ["syscalls:sys_exit_sched_setscheduler", "tracepoint. sys_exit_sched_setscheduler."], ["syscalls:sys_enter_sched_setparam", "tracepoint. sys_enter_sched_setparam."], ["syscalls:sys_exit_sched_setparam", "tracepoint. sys_exit_sched_setparam."], ["syscalls:sys_enter_sched_setattr", "tracepoint. sys_enter_sched_setattr."], ["syscalls:sys_exit_sched_setattr", "tracepoint. sys_exit_sched_setattr."], ["syscalls:sys_enter_sched_getscheduler", "tracepoint. sys_enter_sched_getscheduler."], ["syscalls:sys_exit_sched_getscheduler", "tracepoint. sys_exit_sched_getscheduler."], ["syscalls:sys_enter_sched_getparam", "tracepoint. sys_enter_sched_getparam."], ["syscalls:sys_exit_sched_getparam", "tracepoint. sys_exit_sched_getparam."], ["syscalls:sys_enter_sched_getattr", "tracepoint. sys_enter_sched_getattr."], ["syscalls:sys_exit_sched_getattr", "tracepoint. sys_exit_sched_getattr."], ["syscalls:sys_enter_sched_setaffinity", "tracepoint. sys_enter_sched_setaffinity."], ["syscalls:sys_exit_sched_setaffinity", "tracepoint. sys_exit_sched_setaffinity."], ["syscalls:sys_enter_sched_getaffinity", "tracepoint. sys_enter_sched_getaffinity."], ["syscalls:sys_exit_sched_getaffinity", "tracepoint. sys_exit_sched_getaffinity."], ["syscalls:sys_enter_sched_yield", "tracepoint. sys_enter_sched_yield."], ["syscalls:sys_exit_sched_yield", "tracepoint. sys_exit_sched_yield."], ["syscalls:sys_enter_sched_get_priority_max", "tracepoint. sys_enter_sched_get_priority_max."], ["syscalls:sys_exit_sched_get_priority_max", "tracepoint. sys_exit_sched_get_priority_max."], ["syscalls:sys_enter_sched_get_priority_min", "tracepoint. sys_enter_sched_get_priority_min."], ["syscalls:sys_exit_sched_get_priority_min", "tracepoint. sys_exit_sched_get_priority_min."], ["syscalls:sys_enter_sched_rr_get_interval", "tracepoint. sys_enter_sched_rr_get_interval."], ["syscalls:sys_exit_sched_rr_get_interval", "tracepoint. sys_exit_sched_rr_get_interval."], ["syscalls:sys_enter_getgroups", "tracepoint. sys_enter_getgroups."], ["syscalls:sys_exit_getgroups", "tracepoint. sys_exit_getgroups."], ["syscalls:sys_enter_setgroups", "tracepoint. sys_enter_setgroups."], ["syscalls:sys_exit_setgroups", "tracepoint. sys_exit_setgroups."], ["syscalls:sys_enter_reboot", "tracepoint. sys_enter_reboot."], ["syscalls:sys_exit_reboot", "tracepoint. sys_exit_reboot."], ["syscalls:sys_enter_setns", "tracepoint. sys_enter_setns."], ["syscalls:sys_exit_setns", "tracepoint. sys_exit_setns."], ["syscalls:sys_enter_pidfd_open", "tracepoint. sys_enter_pidfd_open."], ["syscalls:sys_exit_pidfd_open", "tracepoint. sys_exit_pidfd_open."], ["syscalls:sys_enter_setpriority", "tracepoint. sys_enter_setpriority."], ["syscalls:sys_exit_setpriority", "tracepoint. sys_exit_setpriority."], ["syscalls:sys_enter_getpriority", "tracepoint. sys_enter_getpriority."], ["syscalls:sys_exit_getpriority", "tracepoint. sys_exit_getpriority."], ["syscalls:sys_enter_setregid", "tracepoint. sys_enter_setregid."], ["syscalls:sys_exit_setregid", "tracepoint. sys_exit_setregid."], ["syscalls:sys_enter_setgid", "tracepoint. sys_enter_setgid."], ["syscalls:sys_exit_setgid", "tracepoint. sys_exit_setgid."], ["syscalls:sys_enter_setreuid", "tracepoint. sys_enter_setreuid."], ["syscalls:sys_exit_setreuid", "tracepoint. sys_exit_setreuid."], ["syscalls:sys_enter_setuid", "tracepoint. sys_enter_setuid."], ["syscalls:sys_exit_setuid", "tracepoint. sys_exit_setuid."], ["syscalls:sys_enter_setresuid", "tracepoint. sys_enter_setresuid."], ["syscalls:sys_exit_setresuid", "tracepoint. sys_exit_setresuid."], ["syscalls:sys_enter_getresuid", "tracepoint. sys_enter_getresuid."], ["syscalls:sys_exit_getresuid", "tracepoint. sys_exit_getresuid."], ["syscalls:sys_enter_setresgid", "tracepoint. sys_enter_setresgid."], ["syscalls:sys_exit_setresgid", "tracepoint. sys_exit_setresgid."], ["syscalls:sys_enter_getresgid", "tracepoint. sys_enter_getresgid."], ["syscalls:sys_exit_getresgid", "tracepoint. sys_exit_getresgid."], ["syscalls:sys_enter_setfsuid", "tracepoint. sys_enter_setfsuid."], ["syscalls:sys_exit_setfsuid", "tracepoint. sys_exit_setfsuid."], ["syscalls:sys_enter_setfsgid", "tracepoint. sys_enter_setfsgid."], ["syscalls:sys_exit_setfsgid", "tracepoint. sys_exit_setfsgid."], ["syscalls:sys_enter_getpid", "tracepoint. sys_enter_getpid."], ["syscalls:sys_exit_getpid", "tracepoint. sys_exit_getpid."], ["syscalls:sys_enter_gettid", "tracepoint. sys_enter_gettid."], ["syscalls:sys_exit_gettid", "tracepoint. sys_exit_gettid."], ["syscalls:sys_enter_getppid", "tracepoint. sys_enter_getppid."], ["syscalls:sys_exit_getppid", "tracepoint. sys_exit_getppid."], ["syscalls:sys_enter_getuid", "tracepoint. sys_enter_getuid."], ["syscalls:sys_exit_getuid", "tracepoint. sys_exit_getuid."], ["syscalls:sys_enter_geteuid", "tracepoint. sys_enter_geteuid."], ["syscalls:sys_exit_geteuid", "tracepoint. sys_exit_geteuid."], ["syscalls:sys_enter_getgid", "tracepoint. sys_enter_getgid."], ["syscalls:sys_exit_getgid", "tracepoint. sys_exit_getgid."], ["syscalls:sys_enter_getegid", "tracepoint. sys_enter_getegid."], ["syscalls:sys_exit_getegid", "tracepoint. sys_exit_getegid."], ["syscalls:sys_enter_times", "tracepoint. sys_enter_times."], ["syscalls:sys_exit_times", "tracepoint. sys_exit_times."], ["syscalls:sys_enter_setpgid", "tracepoint. sys_enter_setpgid."], ["syscalls:sys_exit_setpgid", "tracepoint. sys_exit_setpgid."], ["syscalls:sys_enter_getpgid", "tracepoint. sys_enter_getpgid."], ["syscalls:sys_exit_getpgid", "tracepoint. sys_exit_getpgid."], ["syscalls:sys_enter_getpgrp", "tracepoint. sys_enter_getpgrp."], ["syscalls:sys_exit_getpgrp", "tracepoint. sys_exit_getpgrp."], ["syscalls:sys_enter_getsid", "tracepoint. sys_enter_getsid."], ["syscalls:sys_exit_getsid", "tracepoint. sys_exit_getsid."], ["syscalls:sys_enter_setsid", "tracepoint. sys_enter_setsid."], ["syscalls:sys_exit_setsid", "tracepoint. sys_exit_setsid."], ["syscalls:sys_enter_newuname", "tracepoint. sys_enter_newuname."], ["syscalls:sys_exit_newuname", "tracepoint. sys_exit_newuname."], ["syscalls:sys_enter_sethostname", "tracepoint. sys_enter_sethostname."], ["syscalls:sys_exit_sethostname", "tracepoint. sys_exit_sethostname."], ["syscalls:sys_enter_setdomainname", "tracepoint. sys_enter_setdomainname."], ["syscalls:sys_exit_setdomainname", "tracepoint. sys_exit_setdomainname."], ["syscalls:sys_enter_getrlimit", "tracepoint. sys_enter_getrlimit."], ["syscalls:sys_exit_getrlimit", "tracepoint. sys_exit_getrlimit."], ["syscalls:sys_enter_prlimit64", "tracepoint. sys_enter_prlimit64."], ["syscalls:sys_exit_prlimit64", "tracepoint. sys_exit_prlimit64."], ["syscalls:sys_enter_setrlimit", "tracepoint. sys_enter_setrlimit."], ["syscalls:sys_exit_setrlimit", "tracepoint. sys_exit_setrlimit."], ["syscalls:sys_enter_getrusage", "tracepoint. sys_enter_getrusage."], ["syscalls:sys_exit_getrusage", "tracepoint. sys_exit_getrusage."], ["syscalls:sys_enter_umask", "tracepoint. sys_enter_umask."], ["syscalls:sys_exit_umask", "tracepoint. sys_exit_umask."], ["syscalls:sys_enter_prctl", "tracepoint. sys_enter_prctl."], ["syscalls:sys_exit_prctl", "tracepoint. sys_exit_prctl."], ["syscalls:sys_enter_getcpu", "tracepoint. sys_enter_getcpu."], ["syscalls:sys_exit_getcpu", "tracepoint. sys_exit_getcpu."], ["syscalls:sys_enter_sysinfo", "tracepoint. sys_enter_sysinfo."], ["syscalls:sys_exit_sysinfo", "tracepoint. sys_exit_sysinfo."], ["syscalls:sys_enter_restart_syscall", "tracepoint. sys_enter_restart_syscall."], ["syscalls:sys_exit_restart_syscall", "tracepoint. sys_exit_restart_syscall."], ["syscalls:sys_enter_rt_sigprocmask", "tracepoint. sys_enter_rt_sigprocmask."], ["syscalls:sys_exit_rt_sigprocmask", "tracepoint. sys_exit_rt_sigprocmask."], ["syscalls:sys_enter_rt_sigpending", "tracepoint. sys_enter_rt_sigpending."], ["syscalls:sys_exit_rt_sigpending", "tracepoint. sys_exit_rt_sigpending."], ["syscalls:sys_enter_rt_sigtimedwait", "tracepoint. sys_enter_rt_sigtimedwait."], ["syscalls:sys_exit_rt_sigtimedwait", "tracepoint. sys_exit_rt_sigtimedwait."], ["syscalls:sys_enter_kill", "tracepoint. sys_enter_kill."], ["syscalls:sys_exit_kill", "tracepoint. sys_exit_kill."], ["syscalls:sys_enter_pidfd_send_signal", "tracepoint. sys_enter_pidfd_send_signal."], ["syscalls:sys_exit_pidfd_send_signal", "tracepoint. sys_exit_pidfd_send_signal."], ["syscalls:sys_enter_tgkill", "tracepoint. sys_enter_tgkill."], ["syscalls:sys_exit_tgkill", "tracepoint. sys_exit_tgkill."], ["syscalls:sys_enter_tkill", "tracepoint. sys_enter_tkill."], ["syscalls:sys_exit_tkill", "tracepoint. sys_exit_tkill."], ["syscalls:sys_enter_rt_sigqueueinfo", "tracepoint. sys_enter_rt_sigqueueinfo."], ["syscalls:sys_exit_rt_sigqueueinfo", "tracepoint. sys_exit_rt_sigqueueinfo."], ["syscalls:sys_enter_rt_tgsigqueueinfo", "tracepoint. sys_enter_rt_tgsigqueueinfo."], ["syscalls:sys_exit_rt_tgsigqueueinfo", "tracepoint. sys_exit_rt_tgsigqueueinfo."], ["syscalls:sys_enter_sigaltstack", "tracepoint. sys_enter_sigaltstack."], ["syscalls:sys_exit_sigaltstack", "tracepoint. sys_exit_sigaltstack."], ["syscalls:sys_enter_rt_sigaction", "tracepoint. sys_enter_rt_sigaction."], ["syscalls:sys_exit_rt_sigaction", "tracepoint. sys_exit_rt_sigaction."], ["syscalls:sys_enter_pause", "tracepoint. sys_enter_pause."], ["syscalls:sys_exit_pause", "tracepoint. sys_exit_pause."], ["syscalls:sys_enter_rt_sigsuspend", "tracepoint. sys_enter_rt_sigsuspend."], ["syscalls:sys_exit_rt_sigsuspend", "tracepoint. sys_exit_rt_sigsuspend."], ["syscalls:sys_enter_ptrace", "tracepoint. sys_enter_ptrace."], ["syscalls:sys_exit_ptrace", "tracepoint. sys_exit_ptrace."], ["syscalls:sys_enter_capget", "tracepoint. sys_enter_capget."], ["syscalls:sys_exit_capget", "tracepoint. sys_exit_capget."], ["syscalls:sys_enter_capset", "tracepoint. sys_enter_capset."], ["syscalls:sys_exit_capset", "tracepoint. sys_exit_capset."], ["syscalls:sys_enter_sysctl", "tracepoint. sys_enter_sysctl."], ["syscalls:sys_exit_sysctl", "tracepoint. sys_exit_sysctl."], ["syscalls:sys_enter_exit", "tracepoint. sys_enter_exit."], ["syscalls:sys_exit_exit", "tracepoint. sys_exit_exit."], ["syscalls:sys_enter_exit_group", "tracepoint. sys_enter_exit_group."], ["syscalls:sys_exit_exit_group", "tracepoint. sys_exit_exit_group."], ["syscalls:sys_enter_waitid", "tracepoint. sys_enter_waitid."], ["syscalls:sys_exit_waitid", "tracepoint. sys_exit_waitid."], ["syscalls:sys_enter_wait4", "tracepoint. sys_enter_wait4."], ["syscalls:sys_exit_wait4", "tracepoint. sys_exit_wait4."], ["syscalls:sys_enter_personality", "tracepoint. sys_enter_personality."], ["syscalls:sys_exit_personality", "tracepoint. sys_exit_personality."], ["syscalls:sys_enter_set_tid_address", "tracepoint. sys_enter_set_tid_address."], ["syscalls:sys_exit_set_tid_address", "tracepoint. sys_exit_set_tid_address."], ["syscalls:sys_enter_fork", "tracepoint. sys_enter_fork."], ["syscalls:sys_exit_fork", "tracepoint. sys_exit_fork."], ["syscalls:sys_enter_vfork", "tracepoint. sys_enter_vfork."], ["syscalls:sys_exit_vfork", "tracepoint. sys_exit_vfork."], ["syscalls:sys_enter_clone", "tracepoint. sys_enter_clone."], ["syscalls:sys_exit_clone", "tracepoint. sys_exit_clone."], ["syscalls:sys_enter_clone3", "tracepoint. sys_enter_clone3."], ["syscalls:sys_exit_clone3", "tracepoint. sys_exit_clone3."], ["syscalls:sys_enter_unshare", "tracepoint. sys_enter_unshare."], ["syscalls:sys_exit_unshare", "tracepoint. sys_exit_unshare."], ["syscalls:sys_enter_mmap", "tracepoint. sys_enter_mmap."], ["syscalls:sys_exit_mmap", "tracepoint. sys_exit_mmap."], ["syscalls:sys_enter_modify_ldt", "tracepoint. sys_enter_modify_ldt."], ["syscalls:sys_exit_modify_ldt", "tracepoint. sys_exit_modify_ldt."], ["syscalls:sys_enter_ioperm", "tracepoint. sys_enter_ioperm."], ["syscalls:sys_exit_ioperm", "tracepoint. sys_exit_ioperm."], ["syscalls:sys_enter_iopl", "tracepoint. sys_enter_iopl."], ["syscalls:sys_exit_iopl", "tracepoint. sys_exit_iopl."], ["syscalls:sys_enter_rt_sigreturn", "tracepoint. sys_enter_rt_sigreturn."], ["syscalls:sys_exit_rt_sigreturn", "tracepoint. sys_exit_rt_sigreturn."], ["syscalls:sys_enter_arch_prctl", "tracepoint. sys_enter_arch_prctl."], ["syscalls:sys_exit_arch_prctl", "tracepoint. sys_exit_arch_prctl."], ["hyperv:hyperv_mmu_flush_tlb_others", "tracepoint. hyperv_mmu_flush_tlb_others."], ["hyperv:hyperv_nested_flush_guest_mapping", "tracepoint. hyperv_nested_flush_guest_mapping."], ["hyperv:hyperv_nested_flush_guest_mapping_range", "tracepoint. hyperv_nested_flush_guest_mapping_range."], ["hyperv:hyperv_send_ipi_mask", "tracepoint. hyperv_send_ipi_mask."], ["xen:xen_mc_batch", "tracepoint. xen_mc_batch."], ["xen:xen_mc_issue", "tracepoint. xen_mc_issue."], ["xen:xen_mc_entry", "tracepoint. xen_mc_entry."], ["xen:xen_mc_entry_alloc", "tracepoint. xen_mc_entry_alloc."], ["xen:xen_mc_callback", "tracepoint. xen_mc_callback."], ["xen:xen_mc_flush_reason", "tracepoint. xen_mc_flush_reason."], ["xen:xen_mc_flush", "tracepoint. xen_mc_flush."], ["xen:xen_mc_extend_args", "tracepoint. xen_mc_extend_args."], ["xen:xen_mmu_set_pte", "tracepoint. xen_mmu_set_pte."], ["xen:xen_mmu_set_pte_at", "tracepoint. xen_mmu_set_pte_at."], ["xen:xen_mmu_set_pmd", "tracepoint. xen_mmu_set_pmd."], ["xen:xen_mmu_set_pud", "tracepoint. xen_mmu_set_pud."], ["xen:xen_mmu_set_p4d", "tracepoint. xen_mmu_set_p4d."], ["xen:xen_mmu_ptep_modify_prot_start", "tracepoint. xen_mmu_ptep_modify_prot_start."], ["xen:xen_mmu_ptep_modify_prot_commit", "tracepoint. xen_mmu_ptep_modify_prot_commit."], ["xen:xen_mmu_alloc_ptpage", "tracepoint. xen_mmu_alloc_ptpage."], ["xen:xen_mmu_release_ptpage", "tracepoint. xen_mmu_release_ptpage."], ["xen:xen_mmu_pgd_pin", "tracepoint. xen_mmu_pgd_pin."], ["xen:xen_mmu_pgd_unpin", "tracepoint. xen_mmu_pgd_unpin."], ["xen:xen_mmu_flush_tlb_one_user", "tracepoint. xen_mmu_flush_tlb_one_user."], ["xen:xen_mmu_flush_tlb_others", "tracepoint. xen_mmu_flush_tlb_others."], ["xen:xen_mmu_write_cr3", "tracepoint. xen_mmu_write_cr3."], ["xen:xen_cpu_write_ldt_entry", "tracepoint. xen_cpu_write_ldt_entry."], ["xen:xen_cpu_write_idt_entry", "tracepoint. xen_cpu_write_idt_entry."], ["xen:xen_cpu_load_idt", "tracepoint. xen_cpu_load_idt."], ["xen:xen_cpu_write_gdt_entry", "tracepoint. xen_cpu_write_gdt_entry."], ["xen:xen_cpu_set_ldt", "tracepoint. xen_cpu_set_ldt."], ["vsyscall:emulate_vsyscall", "tracepoint. emulate_vsyscall."], ["raw_syscalls:sys_enter", "tracepoint. sys_enter."], ["raw_syscalls:sys_exit", "tracepoint. sys_exit."], ["initcall:initcall_level", "tracepoint. initcall_level."], ["initcall:initcall_start", "tracepoint. initcall_start."], ["initcall:initcall_finish", "tracepoint. initcall_finish."]], "features": {"name": "perf_events generic PMU", "no_events": 182, "max_encoding": 1, "counters": 0, "type": "OS generic PMU"}}, "rapl": {"events": [["RAPL_ENERGY_PKG", "Number of Joules consumed by all cores and Last level cache on the package. Unit is 2^-32 Joules."], ["RAPL_ENERGY_DRAM", "Number of Joules consumed by the DRAM. Unit is 2^-32 Joules."]], "features": {"name": "Intel RAPL", "no_events": 2, "max_encoding": 1, "counters": 3, "type": "uncore PMU"}}, "perf_raw": {"events": [["r0000", "perf_events raw event syntax: r[0-9a-fA-F]+."]], "features": {"name": "perf_events raw PMU", "no_events": 1, "max_encoding": 1, "counters": 0, "type": "OS generic PMU"}}, "bdw_ep": {"events": [["UNHALTED_CORE_CYCLES", "Count core clock cycles whenever the clock signal on the specific core is running (not halted)."], ["UNHALTED_REFERENCE_CYCLES", "Unhalted reference cycles."], ["INSTRUCTION_RETIRED", "Number of instructions at retirement."], ["INSTRUCTIONS_RETIRED", "This is an alias for INSTRUCTION_RETIRED."], ["BRANCH_INSTRUCTIONS_RETIRED", "Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction."], ["MISPREDICTED_BRANCH_RETIRED", "Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware."], ["BACLEARS:ANY", "Branch re-steered. Number of front-end re-steers due to BPU misprediction."], ["BR_INST_EXEC:NONTAKEN_CONDITIONAL", "Branch instructions executed. All macro conditional nontaken branch instructions."], ["BR_INST_EXEC:NONTAKEN_COND", "Branch instructions executed. All macro conditional nontaken branch instructions."], ["BR_INST_EXEC:TAKEN_CONDITIONAL", "Branch instructions executed. Taken speculative and retired macro-conditional branches."], ["BR_INST_EXEC:TAKEN_COND", "Branch instructions executed. Taken speculative and retired macro-conditional branches."], ["BR_INST_EXEC:TAKEN_DIRECT_JUMP", "Branch instructions executed. Taken speculative and retired macro-conditional branch instructions excluding calls and indirects."], ["BR_INST_EXEC:TAKEN_INDIRECT_JUMP_NON_CALL_RET", "Branch instructions executed. Taken speculative and retired indirect branches excluding calls and returns."], ["BR_INST_EXEC:TAKEN_INDIRECT_NEAR_RETURN", "Branch instructions executed. Taken speculative and retired indirect branches with return mnemonic."], ["BR_INST_EXEC:TAKEN_DIRECT_NEAR_CALL", "Branch instructions executed. Taken speculative and retired direct near calls."], ["BR_INST_EXEC:ALL_CONDITIONAL", "Branch instructions executed. Speculative and retired macro-conditional branches."], ["BR_INST_EXEC:ALL_COND", "Branch instructions executed. Speculative and retired macro-conditional branches."], ["BR_INST_EXEC:ANY_COND", "Branch instructions executed. Speculative and retired macro-conditional branches."], ["BR_INST_EXEC:ALL_DIRECT_JMP", "Branch instructions executed. Speculative and retired macro-unconditional branches excluding calls and indirects."], ["BR_INST_EXEC:ALL_INDIRECT_JUMP_NON_CALL_RET", "Branch instructions executed. Speculative and retired indirect branches excluding calls and returns."], ["BR_INST_EXEC:ALL_INDIRECT_NEAR_RETURN", "Branch instructions executed. Speculative and retired indirect return branches."], ["BR_INST_EXEC:ALL_DIRECT_NEAR_CALL", "Branch instructions executed. Speculative and retired direct near calls."], ["BR_INST_EXEC:TAKEN_INDIRECT_NEAR_CALL", "Branch instructions executed. All indirect calls, including both register and memory indirect."], ["BR_INST_EXEC:ALL_BRANCHES", "Branch instructions executed. All branch instructions executed."], ["BR_INST_RETIRED:CONDITIONAL", "Branch instructions retired (Precise Event). Counts all taken and not taken macro conditional branch instructions."], ["BR_INST_RETIRED:COND", "Branch instructions retired (Precise Event). Counts all taken and not taken macro conditional branch instructions."], ["BR_INST_RETIRED:NEAR_CALL", "Branch instructions retired (Precise Event). Counts all macro direct and indirect near calls."], ["BR_INST_RETIRED:ALL_BRANCHES", "Branch instructions retired (Precise Event). Counts all taken and not taken macro branches including far branches (architectural event)."], ["BR_INST_RETIRED:NEAR_RETURN", "Branch instructions retired (Precise Event). Counts the number of near ret instructions retired."], ["BR_INST_RETIRED:NOT_TAKEN", "Branch instructions retired (Precise Event). Counts all not taken macro branch instructions retired."], ["BR_INST_RETIRED:NEAR_TAKEN", "Branch instructions retired (Precise Event). Counts the number of near branch taken instructions retired."], ["BR_INST_RETIRED:FAR_BRANCH", "Branch instructions retired (Precise Event). Counts the number of far branch instructions retired."], ["BR_MISP_EXEC:NONTAKEN_CONDITIONAL", "Mispredicted branches executed. Not taken speculative and retired mispredicted macro conditional branches."], ["BR_MISP_EXEC:NONTAKEN_COND", "Mispredicted branches executed. Not taken speculative and retired mispredicted macro conditional branches."], ["BR_MISP_EXEC:TAKEN_CONDITIONAL", "Mispredicted branches executed. Taken speculative and retired mispredicted macro conditional branches."], ["BR_MISP_EXEC:TAKEN_COND", "Mispredicted branches executed. Taken speculative and retired mispredicted macro conditional branches."], ["BR_MISP_EXEC:TAKEN_INDIRECT_JUMP_NON_CALL_RET", "Mispredicted branches executed. Taken speculative and retired mispredicted indirect branches excluding calls and returns."], ["BR_MISP_EXEC:ALL_CONDITIONAL", "Mispredicted branches executed. Speculative and retired mispredicted macro conditional branches."], ["BR_MISP_EXEC:ANY_COND", "Mispredicted branches executed. Speculative and retired mispredicted macro conditional branches."], ["BR_MISP_EXEC:ALL_INDIRECT_JUMP_NON_CALL_RET", "Mispredicted branches executed. All mispredicted indirect branches that are not calls nor returns."], ["BR_MISP_EXEC:ALL_BRANCHES", "Mispredicted branches executed. Speculative and retired mispredicted macro conditional branches."], ["BR_MISP_EXEC:TAKEN_INDIRECT_NEAR_CALL", "Mispredicted branches executed. Taken speculative and retired mispredicted indirect calls."], ["BR_MISP_EXEC:TAKEN_RETURN_NEAR", "Mispredicted branches executed. Taken speculative and retired mispredicted direct returns."], ["BR_MISP_RETIRED:CONDITIONAL", "Mispredicted retired branches (Precise Event). All mispredicted macro conditional branch instructions."], ["BR_MISP_RETIRED:COND", "Mispredicted retired branches (Precise Event). All mispredicted macro conditional branch instructions."], ["BR_MISP_RETIRED:ALL_BRANCHES", "Mispredicted retired branches (Precise Event). All mispredicted macro branches (architectural event)."], ["BR_MISP_RETIRED:NEAR_TAKEN", "Mispredicted retired branches (Precise Event). Number of near branch instructions retired that were mispredicted and taken."], ["BR_MISP_RETIRED:RET", "Mispredicted retired branches (Precise Event). Number of mispredicted ret instructions retired."], ["CPL_CYCLES:RING0", "Unhalted core cycles at a specific ring level. Unhalted core cycles when the thread is in ring 0."], ["CPL_CYCLES:RING123", "Unhalted core cycles at a specific ring level. Unhalted core cycles when thread is in rings 1, 2, or 3."], ["CPL_CYCLES:RING0_TRANS", "Unhalted core cycles at a specific ring level. Number of intervals between processor halts while thread is in ring 0."], ["CPU_CLK_THREAD_UNHALTED:REF_XCLK", "Count core clock cycles whenever the clock signal on the specific core is running (not halted). Count Xclk pulses (100Mhz) when the core is unhalted."], ["CPU_CLK_THREAD_UNHALTED:REF_XCLK_ANY", "Count core clock cycles whenever the clock signal on the specific core is running (not halted). Count Xclk pulses (100Mhz) when the at least one thread on the physical core is unhalted."], ["CPU_CLK_THREAD_UNHALTED:REF_P", "Count core clock cycles whenever the clock signal on the specific core is running (not halted). Cycles when the core is unhalted (count at 100 Mhz)."], ["CPU_CLK_THREAD_UNHALTED:THREAD_P", "Count core clock cycles whenever the clock signal on the specific core is running (not halted). Cycles when thread is not halted."], ["CPU_CLK_THREAD_UNHALTED:ONE_THREAD_ACTIVE", "Count core clock cycles whenever the clock signal on the specific core is running (not halted). Counts Xclk (100Mhz) pulses when this thread is unhalted and the other thread is halted."], ["CPU_CLK_UNHALTED", "Count core clock cycles whenever the clock signal on the specific core is running (not halted)."], ["CYCLE_ACTIVITY:CYCLES_L2_PENDING", "Stalled cycles. Cycles with pending L2 miss loads (must use with HT off only)."], ["CYCLE_ACTIVITY:CYCLES_LDM_PENDING", "Stalled cycles. Cycles with pending memory loads."], ["CYCLE_ACTIVITY:CYCLES_MEM_ANY", "Stalled cycles. Cycles with pending memory loads."], ["CYCLE_ACTIVITY:CYCLES_L1D_PENDING", "Stalled cycles. Cycles with pending L1D load cache misses."], ["CYCLE_ACTIVITY:STALLS_LDM_PENDING", "Stalled cycles. Executions stalls when there is at least one pending demand load request."], ["CYCLE_ACTIVITY:STALLS_L1D_PENDING", "Stalled cycles. Executions stalls while there is at least one L1D demand load outstanding."], ["CYCLE_ACTIVITY:STALLS_L2_PENDING", "Stalled cycles. Execution stalls while there is at least one L2 demand load pending outstanding."], ["CYCLE_ACTIVITY:STALLS_TOTAL", "Stalled cycles. Cycles during which no instructions were executed in the execution stage of the pipeline."], ["CYCLE_ACTIVITY:CYCLES_NO_EXECUTE", "Stalled cycles. Cycles during which no instructions were executed in the execution stage of the pipeline."], ["DTLB_LOAD_MISSES:MISS_CAUSES_A_WALK", "Data TLB load misses. Misses in all DTLB levels that cause page walks."], ["DTLB_LOAD_MISSES:WALK_COMPLETED_4K", "Data TLB load misses. Misses in all TLB levels causes a page walk that completes (4K)."], ["DTLB_LOAD_MISSES:WALK_COMPLETED_2M_4M", "Data TLB load misses. Misses in all TLB levels causes a page walk of 2MB/4MB page sizes that completes."], ["DTLB_LOAD_MISSES:WALK_COMPLETED_1G", "Data TLB load misses. Misses in all TLB levels causes a page walk of 1GB page sizes that completes."], ["DTLB_LOAD_MISSES:WALK_COMPLETED", "Data TLB load misses. Misses in all TLB levels causes a page walk of any page size that completes."], ["DTLB_LOAD_MISSES:WALK_DURATION", "Data TLB load misses. Cycles when PMH is busy with page walks."], ["DTLB_LOAD_MISSES:STLB_HIT_4K", "Data TLB load misses. Misses that miss the DTLB and hit the STLB (4KB)."], ["DTLB_LOAD_MISSES:STLB_HIT_2M", "Data TLB load misses. Misses that miss the DTLB and hit the STLB (2MB)."], ["DTLB_LOAD_MISSES:STLB_HIT", "Data TLB load misses. Number of cache load STLB hits. No page walk."], ["DTLB_STORE_MISSES:MISS_CAUSES_A_WALK", "Data TLB store misses. Misses in all DTLB levels that cause page walks."], ["DTLB_STORE_MISSES:WALK_COMPLETED_4K", "Data TLB store misses. Misses in all TLB levels causes a page walk that completes (4K)."], ["DTLB_STORE_MISSES:WALK_COMPLETED_2M_4M", "Data TLB store misses. Misses in all TLB levels causes a page walk of 2MB/4MB page sizes that completes."], ["DTLB_STORE_MISSES:WALK_COMPLETED_1G", "Data TLB store misses. Misses in all TLB levels causes a page walk of 1GB page sizes that completes."], ["DTLB_STORE_MISSES:WALK_COMPLETED", "Data TLB store misses. Misses in all TLB levels causes a page walk of any page size that completes."], ["DTLB_STORE_MISSES:WALK_DURATION", "Data TLB store misses. Cycles when PMH is busy with page walks."], ["DTLB_STORE_MISSES:STLB_HIT_4K", "Data TLB store misses. Misses that miss the DTLB and hit the STLB (4KB)."], ["DTLB_STORE_MISSES:STLB_HIT_2M", "Data TLB store misses. Misses that miss the DTLB and hit the STLB (2MB)."], ["DTLB_STORE_MISSES:STLB_HIT", "Data TLB store misses. Number of cache load STLB hits. No page walk."], ["FP_ASSIST:X87_OUTPUT", "X87 floating-point assists. Number of X87 FP assists due to output values."], ["FP_ASSIST:X87_INPUT", "X87 floating-point assists. Number of X87 FP assists due to input values."], ["FP_ASSIST:SIMD_OUTPUT", "X87 floating-point assists. Number of SIMD FP assists due to output values."], ["FP_ASSIST:SIMD_INPUT", "X87 floating-point assists. Number of SIMD FP assists due to input values."], ["FP_ASSIST:ANY", "X87 floating-point assists. Cycles with any input/output SEE or FP assists."], ["FP_ASSIST:ALL", "X87 floating-point assists. Cycles with any input and output SSE or FP assist."], ["HLE_RETIRED:START", "HLE execution (Precise Event). Number of times an HLE execution started."], ["HLE_RETIRED:COMMIT", "HLE execution (Precise Event). Number of times an HLE execution successfully committed."], ["HLE_RETIRED:ABORTED", "HLE execution (Precise Event). Number of times an HLE execution aborted due to any reasons (multiple categories may count as one) (Precise Event)."], ["HLE_RETIRED:ABORTED_MISC1", "HLE execution (Precise Event). Number of times an HLE execution aborted due to various memory events."], ["HLE_RETIRED:ABORTED_MISC2", "HLE execution (Precise Event). Number of times an HLE execution aborted due to uncommon conditions."], ["HLE_RETIRED:ABORTED_MISC3", "HLE execution (Precise Event). Number of times an HLE execution aborted due to HLE-unfriendly instructions."], ["HLE_RETIRED:ABORTED_MISC4", "HLE execution (Precise Event). Number of times an HLE execution aborted due to incompatible memory type."], ["HLE_RETIRED:ABORTED_MISC5", "HLE execution (Precise Event). Number of times an HLE execution aborted due to none of the other 4 reasons (e.g., interrupt)."], ["ICACHE:MISSES", "Instruction Cache. Number of Instruction Cache, Streaming Buffer and Victim Cache Misses. Includes Uncacheable accesses."], ["ICACHE:IFDATA_STALL", "Instruction Cache. Number of cycles where a code fetch is stalled due to L1 miss."], ["ICACHE:HIT", "Instruction Cache. Number of Instruction Cache, Streaming Buffer and Victim Cache Reads. Includes cacheable and uncacheable accesses and uncacheable fetches."], ["IDQ:EMPTY", "IDQ operations. Cycles the Instruction Decode Queue (IDQ) is empty."], ["IDQ:MITE_UOPS", "IDQ operations. Number of uops delivered to Instruction Decode Queue (IDQ) from MITE path."], ["IDQ:DSB_UOPS", "IDQ operations. Number of uops delivered to Instruction Decode Queue (IDQ) from Decode Stream Buffer (DSB) path."], ["IDQ:MS_DSB_UOPS", "IDQ operations. Uops initiated by Decode Stream Buffer (DSB) that are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy."], ["IDQ:MS_MITE_UOPS", "IDQ operations. Uops initiated by MITE and delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy."], ["IDQ:MS_UOPS", "IDQ operations. Number of Uops were delivered into Instruction Decode Queue (IDQ) from MS, initiated by Decode Stream Buffer (DSB) or MITE."], ["IDQ:MS_UOPS_CYCLES", "IDQ operations. Number of cycles that Uops were delivered into Instruction Decode Queue (IDQ) when MS_Busy, initiated by Decode Stream Buffer (DSB) or MITE."], ["IDQ:MS_SWITCHES", "IDQ operations. Number of cycles that Uops were delivered into Instruction Decode Queue (IDQ) when MS_Busy, initiated by Decode Stream Buffer (DSB) or MITE."], ["IDQ:MITE_UOPS_CYCLES", "IDQ operations. Cycles when uops are being delivered to Instruction Decode Queue (IDQ) from MITE path."], ["IDQ:DSB_UOPS_CYCLES", "IDQ operations. Cycles when uops are being delivered to Instruction Decode Queue (IDQ) from Decode Stream Buffer (DSB) path."], ["IDQ:MS_DSB_UOPS_CYCLES", "IDQ operations. Cycles when uops initiated by Decode Stream Buffer (DSB) are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy."], ["IDQ:MS_DSB_OCCUR", "IDQ operations. Deliveries to Instruction Decode Queue (IDQ) initiated by Decode Stream Buffer (DSB) while Microcode Sequencer (MS) is busy."], ["IDQ:ALL_DSB_CYCLES_4_UOPS", "IDQ operations. Cycles Decode Stream Buffer (DSB) is delivering 4 Uops."], ["IDQ:ALL_DSB_CYCLES_ANY_UOPS", "IDQ operations. Cycles Decode Stream Buffer (DSB) is delivering any Uop."], ["IDQ:ALL_MITE_CYCLES_4_UOPS", "IDQ operations. Cycles MITE is delivering 4 Uops."], ["IDQ:ALL_MITE_CYCLES_ANY_UOPS", "IDQ operations. Cycles MITE is delivering any Uop."], ["IDQ:ALL_MITE_UOPS", "IDQ operations. Number of uops delivered to Instruction Decode Queue (IDQ) from any path."], ["IDQ_UOPS_NOT_DELIVERED:CORE", "Uops not delivered. Count number of non-delivered uops to Resource Allocation Table (RAT)."], ["IDQ_UOPS_NOT_DELIVERED:CYCLES_0_UOPS_DELIV_CORE", "Uops not delivered. Cycles per thread when 4 or more uops are not delivered to the Resource Allocation Table (RAT) when backend is not stalled."], ["IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_1_UOP_DELIV_CORE", "Uops not delivered. Cycles per thread when 3 or more uops are not delivered to the Resource Allocation Table (RAT) when backend is not stalled."], ["IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_2_UOP_DELIV_CORE", "Uops not delivered. Cycles with less than 2 uops delivered by the front end."], ["IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_3_UOP_DELIV_CORE", "Uops not delivered. Cycles with less than 3 uops delivered by the front end."], ["IDQ_UOPS_NOT_DELIVERED:CYCLES_FE_WAS_OK", "Uops not delivered. Cycles Front-End (FE) delivered 4 uops or Resource Allocation Table (RAT) was stalling FE."], ["INST_RETIRED:ANY_P", "Number of instructions retired (Precise Event). Number of instructions retired. General Counter - architectural event."], ["INST_RETIRED:ALL", "Number of instructions retired (Precise Event). Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution (Precise Event)."], ["INST_RETIRED:TOTAL_CYCLES", "Number of instructions retired (Precise Event). Number of cycles using always true condition."], ["INST_RETIRED:PREC_DIST", "Number of instructions retired (Precise Event). Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution (Precise event)."], ["INST_RETIRED:X87", "Number of instructions retired (Precise Event). Number of FPU operations retired (instructions with no exceptions)."], ["INT_MISC:RECOVERY_CYCLES", "Miscellaneous interruptions. Cycles waiting for the checkpoints in Resource Allocation Table (RAT) to be recovered after Nuke due to all other cases except JEClear (e.g. whenever a ucode assist is needed like SSE exception, memory disambiguation, etc...)."], ["INT_MISC:RECOVERY_CYCLES_ANY", "Miscellaneous interruptions. Core cycles the allocator was stalled due to recovery from earlier clear event for any thread running on the physical core (e.g. misprediction or memory nuke)."], ["INT_MISC:RECOVERY_STALLS_COUNT", "Miscellaneous interruptions. Number of occurrences waiting for Machine Clears."], ["INT_MISC:RAT_STALL_CYCLES", "Miscellaneous interruptions. Cycles when the Resource Allocation Table (RAT) external stall event is sent to the Instruction Decode Queue (IDQ) for the thread. Also includes cycles when the allocator is serving another thread."], ["ITLB:ITLB_FLUSH", "Instruction TLB. Flushing of the Instruction TLB (ITLB) pages independent of page size."], ["ITLB_MISSES:MISS_CAUSES_A_WALK", "Instruction TLB misses. Misses in all DTLB levels that cause page walks."], ["ITLB_MISSES:WALK_COMPLETED_4K", "Instruction TLB misses. Misses in all TLB levels causes a page walk that completes (4KB)."], ["ITLB_MISSES:WALK_COMPLETED_2M_4M", "Instruction TLB misses. Misses in all TLB levels causes a page walk that completes (2MB/4MB)."], ["ITLB_MISSES:WALK_COMPLETED_1G", "Instruction TLB misses. Misses in all TLB levels causes a page walk that completes (1GB)."], ["ITLB_MISSES:WALK_COMPLETED", "Instruction TLB misses. Misses in all TLB levels causes a page walk of any page size that completes."], ["ITLB_MISSES:WALK_DURATION", "Instruction TLB misses. Cycles when PMH is busy with page walks."], ["ITLB_MISSES:STLB_HIT_4K", "Instruction TLB misses. Misses that miss the DTLB and hit the STLB (4KB)."], ["ITLB_MISSES:STLB_HIT_2M", "Instruction TLB misses. Misses that miss the DTLB and hit the STLB (2MB)."], ["ITLB_MISSES:STLB_HIT", "Instruction TLB misses. Number of cache load STLB hits. No page walk."], ["L1D:REPLACEMENT", "L1D cache. L1D Data line replacements."], ["L1D_PEND_MISS:PENDING", "L1D pending misses. Cycles with L1D load misses outstanding."], ["L1D_PEND_MISS:PENDING_CYCLES", "L1D pending misses. Cycles with L1D load misses outstanding."], ["L1D_PEND_MISS:PENDING_CYCLES_ANY", "L1D pending misses. Cycles with L1D load misses outstanding from any thread."], ["L1D_PEND_MISS:OCCURRENCES", "L1D pending misses. Number L1D miss outstanding."], ["L1D_PEND_MISS:EDGE", "L1D pending misses. Number L1D miss outstanding."], ["L1D_PEND_MISS:FB_FULL", "L1D pending misses. Number of cycles a demand request was blocked due to Fill Buffer (FB) unavailability."], ["L2_DEMAND_RQSTS:WB_HIT", "Demand Data Read requests to L2. WB requests that hit L2 cache."], ["L2_LINES_IN:I", "L2 lines allocated. L2 cache lines in I state filling L2."], ["L2_LINES_IN:S", "L2 lines allocated. L2 cache lines in S state filling L2."], ["L2_LINES_IN:E", "L2 lines allocated. L2 cache lines in E state filling L2."], ["L2_LINES_IN:ALL", "L2 lines allocated. L2 cache lines filling L2."], ["L2_LINES_IN:ANY", "L2 lines allocated. L2 cache lines filling L2."], ["L2_LINES_OUT:DEMAND_CLEAN", "L2 lines evicted. Number of clean L2 cachelines evicted by demand."], ["L2_RQSTS:DEMAND_DATA_RD_MISS", "L2 requests. Demand Data Read requests that miss L2 cache."], ["L2_RQSTS:DEMAND_DATA_RD_HIT", "L2 requests. Demand Data Read requests that hit L2 cache."], ["L2_RQSTS:DEMAND_RFO_MISS", "L2 requests. RFO requests that miss L2 cache."], ["L2_RQSTS:RFO_MISS", "L2 requests. RFO requests that miss L2 cache."], ["L2_RQSTS:DEMAND_RFO_HIT", "L2 requests. RFO requests that hit L2 cache."], ["L2_RQSTS:RFO_HIT", "L2 requests. RFO requests that hit L2 cache."], ["L2_RQSTS:CODE_RD_MISS", "L2 requests. L2 cache misses when fetching instructions."], ["L2_RQSTS:ALL_DEMAND_MISS", "L2 requests. All demand requests that miss the L2 cache."], ["L2_RQSTS:CODE_RD_HIT", "L2 requests. L2 cache hits when fetching instructions, code reads."], ["L2_RQSTS:L2_PF_MISS", "L2 requests. Requests from the L2 hardware prefetchers that miss L2 cache."], ["L2_RQSTS:PF_MISS", "L2 requests. Requests from the L2 hardware prefetchers that miss L2 cache."], ["L2_RQSTS:MISS", "L2 requests. All requests that miss the L2 cache."], ["L2_RQSTS:L2_PF_HIT", "L2 requests. Requests from the L2 hardware prefetchers that hit L2 cache."], ["L2_RQSTS:PF_HIT", "L2 requests. Requests from the L2 hardware prefetchers that hit L2 cache."], ["L2_RQSTS:ALL_DEMAND_DATA_RD", "L2 requests. Any data read request to L2 cache."], ["L2_RQSTS:ALL_RFO", "L2 requests. Any data RFO request to L2 cache."], ["L2_RQSTS:ALL_CODE_RD", "L2 requests. Any code read request to L2 cache."], ["L2_RQSTS:ALL_DEMAND_REFERENCES", "L2 requests. All demand requests to L2 cache ."], ["L2_RQSTS:ALL_PF", "L2 requests. Any L2 HW prefetch request to L2 cache."], ["L2_RQSTS:REFERENCES", "L2 requests. All requests to L2 cache."], ["L2_TRANS:DEMAND_DATA_RD", "L2 transactions. Demand Data Read requests that access L2 cache."], ["L2_TRANS:RFO", "L2 transactions. RFO requests that access L2 cache."], ["L2_TRANS:CODE_RD", "L2 transactions. L2 cache accesses when fetching instructions."], ["L2_TRANS:ALL_PF", "L2 transactions. L2 or L3 HW prefetches that access L2 cache, including rejects."], ["L2_TRANS:L1D_WB", "L2 transactions. L1D writebacks that access L2 cache."], ["L2_TRANS:L2_FILL", "L2 transactions. L2 fill requests that access L2 cache."], ["L2_TRANS:L2_WB", "L2 transactions. L2 writebacks that access L2 cache."], ["L2_TRANS:ALL_REQUESTS", "L2 transactions. Transactions accessing L2 pipe."], ["LD_BLOCKS:STORE_FORWARD", "Blocking loads. Counts the number of loads blocked by overlapping with store buffer entries that cannot be forwarded."], ["LD_BLOCKS:NO_SR", "Blocking loads. number of times that split load operations are temporarily blocked because all resources for handling the split accesses are in use."], ["LD_BLOCKS_PARTIAL:ADDRESS_ALIAS", "Partial load blocks. False dependencies in MOB due to partial compare on address."], ["LOAD_HIT_PRE:HW_PF", "Load dispatches. Non software-prefetch load dispatches that hit FB allocated for hardware prefetch."], ["LOAD_HIT_PRE:SW_PF", "Load dispatches. Non software-prefetch load dispatches that hit FB allocated for software prefetch."], ["LOCK_CYCLES:SPLIT_LOCK_UC_LOCK_DURATION", "Locked cycles in L1D and L2. Cycles in which the L1D and L2 are locked, due to a UC lock or split lock."], ["LOCK_CYCLES:CACHE_LOCK_DURATION", "Locked cycles in L1D and L2. cycles that the L1D is locked."], ["LONGEST_LAT_CACHE:MISS", "L3 cache. Core-originated cacheable demand requests missed LLC - architectural event."], ["LONGEST_LAT_CACHE:REFERENCE", "L3 cache. Core-originated cacheable demand requests that refer to LLC - architectural event."], ["MACHINE_CLEARS:CYCLES", "Machine clear asserted. Cycles there was a Nuke. Account for both thread-specific and All Thread Nukes."], ["MACHINE_CLEARS:MEMORY_ORDERING", "Machine clear asserted. Number of Memory Ordering Machine Clears detected."], ["MACHINE_CLEARS:SMC", "Machine clear asserted. Number of Self-modifying code (SMC) Machine Clears detected."], ["MACHINE_CLEARS:MASKMOV", "Machine clear asserted. This event counts the number of executed Intel AVX masked load operations that refer to an illegal address range with the mask bits set to 0."], ["MACHINE_CLEARS:COUNT", "Machine clear asserted. Number of machine clears (nukes) of any type."], ["MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_MISS", "L3 hit load uops retired (Precise Event). Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache."], ["MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_HIT", "L3 hit load uops retired (Precise Event). Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache."], ["MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_HITM", "L3 hit load uops retired (Precise Event). Load had HitM Response from a core on same socket (shared L3). (Non PEBS."], ["MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_NONE", "L3 hit load uops retired (Precise Event). Retired load uops which data sources were hits in L3 without snoops required."], ["MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_MISS", "L3 hit load uops retired (Precise Event). Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache."], ["MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_HIT", "L3 hit load uops retired (Precise Event). Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache."], ["MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_HITM", "L3 hit load uops retired (Precise Event). Load had HitM Response from a core on same socket (shared L3). (Non PEBS."], ["MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_NONE", "L3 hit load uops retired (Precise Event). Retired load uops which data sources were hits in L3 without snoops required."], ["MEM_LOAD_UOPS_L3_MISS_RETIRED:LOCAL_DRAM", "Load uops retired that missed the L3 (Precise Event). Retired load uops missing L3 cache but hitting local memory (Precise Event)."], ["MEM_LOAD_UOPS_L3_MISS_RETIRED:REMOTE_DRAM", "Load uops retired that missed the L3 (Precise Event). Number of retired load uops that missed L3 but were service by remote RAM, snoop not needed, snoop miss, snoop hit data not forwarded (Precise Event)."], ["MEM_LOAD_UOPS_L3_MISS_RETIRED:REMOTE_HITM", "Load uops retired that missed the L3 (Precise Event). Number of retired load uops whose data sources was remote HITM (Precise Event)."], ["MEM_LOAD_UOPS_L3_MISS_RETIRED:REMOTE_FWD", "Load uops retired that missed the L3 (Precise Event). Load uops that miss in the L3 whose data source was forwarded from a remote cache (Precise Event)."], ["MEM_LOAD_UOPS_LLC_MISS_RETIRED:LOCAL_DRAM", "Load uops retired that missed the L3 (Precise Event). Retired load uops missing L3 cache but hitting local memory (Precise Event)."], ["MEM_LOAD_UOPS_LLC_MISS_RETIRED:REMOTE_DRAM", "Load uops retired that missed the L3 (Precise Event). Number of retired load uops that missed L3 but were service by remote RAM, snoop not needed, snoop miss, snoop hit data not forwarded (Precise Event)."], ["MEM_LOAD_UOPS_LLC_MISS_RETIRED:REMOTE_HITM", "Load uops retired that missed the L3 (Precise Event). Number of retired load uops whose data sources was remote HITM (Precise Event)."], ["MEM_LOAD_UOPS_LLC_MISS_RETIRED:REMOTE_FWD", "Load uops retired that missed the L3 (Precise Event). Load uops that miss in the L3 whose data source was forwarded from a remote cache (Precise Event)."], ["MEM_LOAD_UOPS_RETIRED:L1_HIT", "Retired load uops (Precise Event). Retired load uops with L1 cache hits as data source."], ["MEM_LOAD_UOPS_RETIRED:L2_HIT", "Retired load uops (Precise Event). Retired load uops with L2 cache hits as data source."], ["MEM_LOAD_UOPS_RETIRED:L3_HIT", "Retired load uops (Precise Event). Retired load uops with L3 cache hits as data source."], ["MEM_LOAD_UOPS_RETIRED:L1_MISS", "Retired load uops (Precise Event). Retired load uops which missed the L1D."], ["MEM_LOAD_UOPS_RETIRED:L2_MISS", "Retired load uops (Precise Event). Retired load uops which missed the L2. Unknown data source excluded."], ["MEM_LOAD_UOPS_RETIRED:L3_MISS", "Retired load uops (Precise Event). Retired load uops which missed the L3."], ["MEM_LOAD_UOPS_RETIRED:HIT_LFB", "Retired load uops (Precise Event). Retired load uops which missed L1 but hit line fill buffer (LFB)."], ["MEM_TRANS_RETIRED:LOAD_LATENCY", "Memory transactions retired (Precise Event). Memory load instructions retired above programmed clocks, minimum threshold value is 3 (Precise Event and ldlat required)."], ["MEM_TRANS_RETIRED:LATENCY_ABOVE_THRESHOLD", "Memory transactions retired (Precise Event). Memory load instructions retired above programmed clocks, minimum threshold value is 3 (Precise Event and ldlat required)."], ["MEM_UOPS_RETIRED:STLB_MISS_LOADS", "Memory uops retired (Precise Event). Load uops with true STLB miss retired to architected path."], ["MEM_UOPS_RETIRED:STLB_MISS_STORES", "Memory uops retired (Precise Event). Store uops with true STLB miss retired to architected path."], ["MEM_UOPS_RETIRED:LOCK_LOADS", "Memory uops retired (Precise Event). Load uops with locked access retired."], ["MEM_UOPS_RETIRED:SPLIT_LOADS", "Memory uops retired (Precise Event). Line-splitted load uops retired."], ["MEM_UOPS_RETIRED:SPLIT_STORES", "Memory uops retired (Precise Event). Line-splitted store uops retired."], ["MEM_UOPS_RETIRED:ALL_LOADS", "Memory uops retired (Precise Event). All load uops retired."], ["MEM_UOPS_RETIRED:ALL_STORES", "Memory uops retired (Precise Event). All store uops retired."], ["MISALIGN_MEM_REF:LOADS", "Misaligned memory references. Speculative cache-line split load uops dispatched to the L1D."], ["MISALIGN_MEM_REF:STORES", "Misaligned memory references. Speculative cache-line split store-address uops dispatched to L1D."], ["MOVE_ELIMINATION:INT_ELIMINATED", "Move Elimination. Number of integer Move Elimination candidate uops that were eliminated."], ["MOVE_ELIMINATION:SIMD_ELIMINATED", "Move Elimination. Number of SIMD Move Elimination candidate uops that were eliminated."], ["MOVE_ELIMINATION:INT_NOT_ELIMINATED", "Move Elimination. Number of integer Move Elimination candidate uops that were not eliminated."], ["MOVE_ELIMINATION:SIMD_NOT_ELIMINATED", "Move Elimination. Number of SIMD Move Elimination candidate uops that were not eliminated."], ["OFFCORE_REQUESTS:DEMAND_DATA_RD", "Demand Data Read requests sent to uncore. Demand data read requests sent to uncore (use with HT off only)."], ["OFFCORE_REQUESTS:DEMAND_CODE_RD", "Demand Data Read requests sent to uncore. Demand code read requests sent to uncore (use with HT off only)."], ["OFFCORE_REQUESTS:DEMAND_RFO", "Demand Data Read requests sent to uncore. Demand RFOs requests sent to uncore (use with HT off only)."], ["OFFCORE_REQUESTS:ALL_DATA_RD", "Demand Data Read requests sent to uncore. Data read requests sent to uncore (use with HT off only)."], ["OTHER_ASSISTS:AVX_TO_SSE", "Software assist. Number of transitions from AVX-256 to legacy SSE when penalty applicable."], ["OTHER_ASSISTS:SSE_TO_AVX", "Software assist. Number of transitions from legacy SSE to AVX-256 when penalty applicable."], ["OTHER_ASSISTS:ANY_WB_ASSIST", "Software assist. Number of times any microcode assist is invoked by HW upon uop writeback."], ["RESOURCE_STALLS:ANY", "Cycles Allocation is stalled due to Resource Related reason. Cycles Allocation is stalled due to Resource Related reason."], ["RESOURCE_STALLS:ALL", "Cycles Allocation is stalled due to Resource Related reason. Cycles Allocation is stalled due to Resource Related reason."], ["RESOURCE_STALLS:RS", "Cycles Allocation is stalled due to Resource Related reason. Stall cycles caused by absence of eligible entries in Reservation Station (RS)."], ["RESOURCE_STALLS:SB", "Cycles Allocation is stalled due to Resource Related reason. Cycles Allocator is stalled due to Store Buffer full (not including draining from synch)."], ["RESOURCE_STALLS:ROB", "Cycles Allocation is stalled due to Resource Related reason. ROB full stall cycles."], ["ROB_MISC_EVENTS:LBR_INSERTS", "ROB miscellaneous events. Count each time an new Last Branch Record (LBR) is inserted."], ["RS_EVENTS:EMPTY_CYCLES", "Reservation Station. Cycles the Reservation Station (RS) is empty for this thread."], ["RS_EVENTS:EMPTY_END", "Reservation Station. Number of times the reservation station (RS) was empty."], ["RTM_RETIRED:START", "Restricted Transaction Memory execution (Precise Event). Number of times an RTM execution started."], ["RTM_RETIRED:COMMIT", "Restricted Transaction Memory execution (Precise Event). Number of times an RTM execution successfully committed."], ["RTM_RETIRED:ABORTED", "Restricted Transaction Memory execution (Precise Event). Number of times an RTM execution aborted due to any reasons (multiple categories may count as one) (Precise Event)."], ["RTM_RETIRED:ABORTED_MISC1", "Restricted Transaction Memory execution (Precise Event). Number of times an RTM execution aborted due to various memory events."], ["RTM_RETIRED:ABORTED_MISC2", "Restricted Transaction Memory execution (Precise Event). Number of times an RTM execution aborted due to uncommon conditions."], ["RTM_RETIRED:ABORTED_MISC3", "Restricted Transaction Memory execution (Precise Event). Number of times an RTM execution aborted due to RTM-unfriendly instructions."], ["RTM_RETIRED:ABORTED_MISC4", "Restricted Transaction Memory execution (Precise Event). Number of times an RTM execution aborted due to incompatible memory type."], ["RTM_RETIRED:ABORTED_MISC5", "Restricted Transaction Memory execution (Precise Event). Number of times an RTM execution aborted due to none of the other 4 reasons (e.g., interrupt)."], ["TLB_FLUSH:DTLB_THREAD", "TLB flushes. Count number of DTLB flushes of thread-specific entries."], ["TLB_FLUSH:STLB_ANY", "TLB flushes. Count number of any STLB flushes."], ["UOPS_EXECUTED:CORE", "Uops executed. Number of uops executed from any thread."], ["UOPS_EXECUTED:THREAD", "Uops executed. Number of uops executed per thread each cycle."], ["UOPS_EXECUTED:STALL_CYCLES", "Uops executed. Number of cycles with no uops executed."], ["UOPS_EXECUTED:CYCLES_GE_1_UOP_EXEC", "Uops executed. Cycles where at least 1 uop was executed per thread."], ["UOPS_EXECUTED:CYCLES_GE_2_UOPS_EXEC", "Uops executed. Cycles where at least 2 uops were executed per thread."], ["UOPS_EXECUTED:CYCLES_GE_3_UOPS_EXEC", "Uops executed. Cycles where at least 3 uops were executed per thread."], ["UOPS_EXECUTED:CYCLES_GE_4_UOPS_EXEC", "Uops executed. Cycles where at least 4 uops were executed per thread."], ["UOPS_EXECUTED:CORE_CYCLES_GE_1", "Uops executed. Cycles where at least 1 uop was executed from any thread."], ["UOPS_EXECUTED:CORE_CYCLES_GE_2", "Uops executed. Cycles where at least 2 uops were executed from any thread."], ["UOPS_EXECUTED:CORE_CYCLES_GE_3", "Uops executed. Cycles where at least 3 uops were executed from any thread."], ["UOPS_EXECUTED:CORE_CYCLES_GE_4", "Uops executed. Cycles where at least 4 uops were executed from any thread."], ["UOPS_EXECUTED:CORE_CYCLES_NONE", "Uops executed. Cycles where no uop is executed on any thread."], ["LSD:UOPS", "Loop stream detector. Number of uops delivered by the Loop Stream Detector (LSD)."], ["LSD:ACTIVE", "Loop stream detector. Cycles with uops delivered by the LSD but which did not come from decoder."], ["LSD:CYCLES_4_UOPS", "Loop stream detector. Cycles with 4 uops delivered by the LSD but which did not come from decoder."], ["UOPS_EXECUTED_PORT:PORT_0", "Uops dispatch to specific ports. Cycles which a Uop is executed on port 0."], ["UOPS_EXECUTED_PORT:PORT_1", "Uops dispatch to specific ports. Cycles which a Uop is executed on port 1."], ["UOPS_EXECUTED_PORT:PORT_2", "Uops dispatch to specific ports. Cycles which a Uop is executed on port 2."], ["UOPS_EXECUTED_PORT:PORT_3", "Uops dispatch to specific ports. Cycles which a Uop is executed on port 3."], ["UOPS_EXECUTED_PORT:PORT_4", "Uops dispatch to specific ports. Cycles which a Uop is executed on port 4."], ["UOPS_EXECUTED_PORT:PORT_5", "Uops dispatch to specific ports. Cycles which a Uop is executed on port 5."], ["UOPS_EXECUTED_PORT:PORT_6", "Uops dispatch to specific ports. Cycles which a Uop is executed on port 6."], ["UOPS_EXECUTED_PORT:PORT_7", "Uops dispatch to specific ports. Cycles which a Uop is executed on port 7."], ["UOPS_EXECUTED_PORT:PORT_0_CORE", "Uops dispatch to specific ports. tbd."], ["UOPS_EXECUTED_PORT:PORT_1_CORE", "Uops dispatch to specific ports. tbd."], ["UOPS_EXECUTED_PORT:PORT_2_CORE", "Uops dispatch to specific ports. tbd."], ["UOPS_EXECUTED_PORT:PORT_3_CORE", "Uops dispatch to specific ports. tbd."], ["UOPS_EXECUTED_PORT:PORT_4_CORE", "Uops dispatch to specific ports. tbd."], ["UOPS_EXECUTED_PORT:PORT_5_CORE", "Uops dispatch to specific ports. tbd."], ["UOPS_EXECUTED_PORT:PORT_6_CORE", "Uops dispatch to specific ports. tbd."], ["UOPS_EXECUTED_PORT:PORT_7_CORE", "Uops dispatch to specific ports. tbd."], ["UOPS_ISSUED:ANY", "Uops issued. Number of Uops issued by the Resource Allocation Table (RAT) to the Reservation Station (RS)."], ["UOPS_ISSUED:ALL", "Uops issued. Number of Uops issued by the Resource Allocation Table (RAT) to the Reservation Station (RS)."], ["UOPS_ISSUED:FLAGS_MERGE", "Uops issued. Number of flags-merge uops being allocated. Such uops adds delay."], ["UOPS_ISSUED:SLOW_LEA", "Uops issued. Number of slow LEA or similar uops allocated. Such uop has 3 sources regardless if result of LEA instruction or not."], ["UOPS_ISSUED:SINGLE_MUL", "Uops issued. Number of Multiply packed/scalar single precision uops allocated."], ["UOPS_ISSUED:STALL_CYCLES", "Uops issued. Counts the number of cycles no uops issued by this thread."], ["UOPS_ISSUED:CORE_STALL_CYCLES", "Uops issued. Counts the number of cycles no uops issued on this core."], ["ARITH:FPU_DIV_ACTIVE", "Arithmetic uop. Cycles when divider is busy execuing divide operations."], ["UOPS_RETIRED:ALL", "Uops retired (Precise Event). All uops that actually retired."], ["UOPS_RETIRED:ANY", "Uops retired (Precise Event). All uops that actually retired."], ["UOPS_RETIRED:RETIRE_SLOTS", "Uops retired (Precise Event). number of retirement slots used non PEBS."], ["UOPS_RETIRED:STALL_CYCLES", "Uops retired (Precise Event). Cycles no executable uops retired (Precise Event)."], ["UOPS_RETIRED:TOTAL_CYCLES", "Uops retired (Precise Event). Number of cycles using always true condition applied to PEBS uops retired event."], ["UOPS_RETIRED:CORE_STALL_CYCLES", "Uops retired (Precise Event). Cycles no executable uops retired on core (Precise Event)."], ["UOPS_RETIRED:STALL_OCCURRENCES", "Uops retired (Precise Event). Number of transitions from stalled to unstalled execution (Precise Event)."], ["TX_MEM:ABORT_CONFLICT", "Transactional memory aborts. Number of times a transactional abort was signaled due to data conflict on a transactionally accessed address."], ["TX_MEM:ABORT_CAPACITY", "Transactional memory aborts. Number of times a transactional abort was signaled due to data capacity limitation."], ["TX_MEM:ABORT_HLE_STORE_TO_ELIDED_LOCK", "Transactional memory aborts. Number of times a HLE transactional execution aborted due to a non xrelease prefixed instruction writing to an elided lock in the elision buffer."], ["TX_MEM:ABORT_HLE_ELISION_BUFFER_NOT_EMPTY", "Transactional memory aborts. Number of times a HLE transactional execution aborted due to NoAllocatedElisionBuffer being non-zero."], ["TX_MEM:ABORT_HLE_ELISION_BUFFER_MISMATCH", "Transactional memory aborts. Number of times a HLE transaction execution aborted due to xrelease lock not satisfying the address and value requirements in the elision buffer."], ["TX_MEM:ABORT_HLE_ELISION_BUFFER_UNSUPPORTED_ALIGNMENT", "Transactional memory aborts. Number of times a HLE transaction execution aborted due to an unsupported read alignment from the elision buffer."], ["TX_MEM:ABORT_HLE_ELISION_BUFFER_FULL", "Transactional memory aborts. Number of times a HLE clock could not be elided due to ElisionBufferAvailable being zero."], ["TX_EXEC:MISC1", "Transactional execution. Number of times a class of instructions that may cause a transactional abort was executed. Since this is the count of execution, it may not always cause a transactional abort."], ["TX_EXEC:MISC2", "Transactional execution. Number of times a class of instructions that may cause a transactional abort was executed inside a transactional region."], ["TX_EXEC:MISC3", "Transactional execution. Number of times an instruction execution caused the supported nest count to be exceeded."], ["TX_EXEC:MISC4", "Transactional execution. Number of times an instruction a xbegin instruction was executed inside HLE transactional region."], ["TX_EXEC:MISC5", "Transactional execution. Number of times an instruction with HLE xacquire prefix was executed inside a RTM transactional region."], ["OFFCORE_REQUESTS_OUTSTANDING:ALL_DATA_RD_CYCLES", "Outstanding offcore requests. Cycles with cacheable data read transactions in the superQ (use with HT off only)."], ["OFFCORE_REQUESTS_OUTSTANDING:DEMAND_CODE_RD_CYCLES", "Outstanding offcore requests. Cycles with demand code reads transactions in the superQ (use with HT off only)."], ["OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD_CYCLES", "Outstanding offcore requests. Cycles with demand data read transactions in the superQ (use with HT off only)."], ["OFFCORE_REQUESTS_OUTSTANDING:ALL_DATA_RD", "Outstanding offcore requests. Cacheable data read transactions in the superQ every cycle (use with HT off only)."], ["OFFCORE_REQUESTS_OUTSTANDING:DEMAND_CODE_RD", "Outstanding offcore requests. Code read transactions in the superQ every cycle (use with HT off only)."], ["OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD", "Outstanding offcore requests. Demand data read transactions in the superQ every cycle (use with HT off only)."], ["OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD_GE_6", "Outstanding offcore requests. Cycles with at lesat 6 offcore outstanding demand data read requests in the uncore queue."], ["OFFCORE_REQUESTS_OUTSTANDING:DEMAND_RFO", "Outstanding offcore requests. Outstanding RFO (store) transactions in the superQ every cycle (use with HT off only)."], ["OFFCORE_REQUESTS_OUTSTANDING:DEMAND_RFO_CYCLES", "Outstanding offcore requests. Cycles with outstanding RFO (store) transactions in the superQ (use with HT off only)."], ["ILD_STALL:LCP", "Instruction Length Decoder stalls. Stall caused by changing prefix length of the instruction."], ["PAGE_WALKER_LOADS:DTLB_L1", "Page walker loads. Number of DTLB page walker loads that hit in the L1D and line fill buffer."], ["PAGE_WALKER_LOADS:ITLB_L1", "Page walker loads. Number of ITLB page walker loads that hit in the L1I and line fill buffer."], ["PAGE_WALKER_LOADS:DTLB_L2", "Page walker loads. Number of DTLB page walker loads that hit in the L2."], ["PAGE_WALKER_LOADS:ITLB_L2", "Page walker loads. Number of ITLB page walker loads that hit in the L2."], ["PAGE_WALKER_LOADS:DTLB_L3", "Page walker loads. Number of DTLB page walker loads that hit in the L3."], ["PAGE_WALKER_LOADS:ITLB_L3", "Page walker loads. Number of ITLB page walker loads that hit in the L3."], ["PAGE_WALKER_LOADS:DTLB_MEMORY", "Page walker loads. Number of DTLB page walker loads that hit memory."], ["DSB2MITE_SWITCHES:PENALTY_CYCLES", "Number of DSB to MITE switches. Number of DSB to MITE switch true penalty cycles."], ["EPT:WALK_CYCLES", "Extended page table. Cycles for an extended page table walk."], ["FP_ARITH:SCALAR_DOUBLE", "Floating-point instructions retired. Number of scalar double precision floating-point arithmetic instructions (multiply by 1 to get flops)."], ["FP_ARITH:SCALAR_SINGLE", "Floating-point instructions retired. Number of scalar single precision floating-point arithmetic instructions (multiply by 1 to get flops)."], ["FP_ARITH:SCALAR", "Floating-point instructions retired. Number of SSE/AVX computational scalar floating-point instructions retired. Applies to SSE* and AVX* scalar, double and single precision floating-point: ADD SUB MUL DIV MIN MAX RSQRT RCP SQRT FM(N)ADD/SUB. FM(N)ADD/SUB instructions count twice as they perform multiple calculations per element."], ["FP_ARITH:128B_PACKED_DOUBLE", "Floating-point instructions retired. Number of scalar 128-bit packed double precision floating-point arithmetic instructions (multiply by 2 to get flops)."], ["FP_ARITH:128B_PACKED_SINGLE", "Floating-point instructions retired. Number of scalar 128-bit packed single precision floating-point arithmetic instructions (multiply by 4 to get flops)."], ["FP_ARITH:256B_PACKED_DOUBLE", "Floating-point instructions retired. Number of scalar 256-bit packed double precision floating-point arithmetic instructions (multiply by 4 to get flops)."], ["FP_ARITH:256B_PACKED_SINGLE", "Floating-point instructions retired. Number of scalar 256-bit packed single precision floating-point arithmetic instructions (multiply by 8 to get flops)."], ["FP_ARITH:PACKED", "Floating-point instructions retired. Number of SSE/AVX computational packed floating-point instructions retired. Applies to SSE* and AVX*, packed, double and single precision floating-point: ADD SUB MUL DIV MIN MAX RSQRT RCP SQRT DPP FM(N)ADD/SUB.  DPP and FM(N)ADD/SUB instructions count twice as they perform multiple calculations per element."], ["FP_ARITH:SINGLE", "Floating-point instructions retired. Number of SSE/AVX computational single precision floating-point instructions retired. Applies to SSE* and AVX*scalar, double and single precision floating-point: ADD SUB MUL DIV MIN MAX RCP RSQRT SQRT DPP FM(N)ADD/SUB.  DPP and FM(N)ADD/SUB instructions count twice as they perform multiple calculations per element."], ["FP_ARITH:DOUBLE", "Floating-point instructions retired. Number of SSE/AVX computational double precision floating-point instructions retired. Applies to SSE* and AVX*scalar, double and single precision floating-point: ADD SUB MUL DIV MIN MAX SQRT DPP FM(N)ADD/SUB.  DPP and FM(N)ADD/SUB instructions count twice as they perform multiple calculations per element."], ["FP_ARITH_INST_RETIRED:SCALAR_DOUBLE", "Floating-point instructions retired. Number of scalar double precision floating-point arithmetic instructions (multiply by 1 to get flops)."], ["FP_ARITH_INST_RETIRED:SCALAR_SINGLE", "Floating-point instructions retired. Number of scalar single precision floating-point arithmetic instructions (multiply by 1 to get flops)."], ["FP_ARITH_INST_RETIRED:SCALAR", "Floating-point instructions retired. Number of SSE/AVX computational scalar floating-point instructions retired. Applies to SSE* and AVX* scalar, double and single precision floating-point: ADD SUB MUL DIV MIN MAX RSQRT RCP SQRT FM(N)ADD/SUB. FM(N)ADD/SUB instructions count twice as they perform multiple calculations per element."], ["FP_ARITH_INST_RETIRED:128B_PACKED_DOUBLE", "Floating-point instructions retired. Number of scalar 128-bit packed double precision floating-point arithmetic instructions (multiply by 2 to get flops)."], ["FP_ARITH_INST_RETIRED:128B_PACKED_SINGLE", "Floating-point instructions retired. Number of scalar 128-bit packed single precision floating-point arithmetic instructions (multiply by 4 to get flops)."], ["FP_ARITH_INST_RETIRED:256B_PACKED_DOUBLE", "Floating-point instructions retired. Number of scalar 256-bit packed double precision floating-point arithmetic instructions (multiply by 4 to get flops)."], ["FP_ARITH_INST_RETIRED:256B_PACKED_SINGLE", "Floating-point instructions retired. Number of scalar 256-bit packed single precision floating-point arithmetic instructions (multiply by 8 to get flops)."], ["FP_ARITH_INST_RETIRED:PACKED", "Floating-point instructions retired. Number of SSE/AVX computational packed floating-point instructions retired. Applies to SSE* and AVX*, packed, double and single precision floating-point: ADD SUB MUL DIV MIN MAX RSQRT RCP SQRT DPP FM(N)ADD/SUB.  DPP and FM(N)ADD/SUB instructions count twice as they perform multiple calculations per element."], ["FP_ARITH_INST_RETIRED:SINGLE", "Floating-point instructions retired. Number of SSE/AVX computational single precision floating-point instructions retired. Applies to SSE* and AVX*scalar, double and single precision floating-point: ADD SUB MUL DIV MIN MAX RCP RSQRT SQRT DPP FM(N)ADD/SUB.  DPP and FM(N)ADD/SUB instructions count twice as they perform multiple calculations per element."], ["FP_ARITH_INST_RETIRED:DOUBLE", "Floating-point instructions retired. Number of SSE/AVX computational double precision floating-point instructions retired. Applies to SSE* and AVX*scalar, double and single precision floating-point: ADD SUB MUL DIV MIN MAX SQRT DPP FM(N)ADD/SUB.  DPP and FM(N)ADD/SUB instructions count twice as they perform multiple calculations per element."], ["OFFCORE_REQUESTS_BUFFER:SQ_FULL", "Offcore reqest buffer. Number of cycles the offcore requests buffer is full."], ["UOPS_DISPATCHES_CANCELLED:SIMD_PRF", "Micro-ops cancelled. Number of uops cancelled after they were dispatched from the scheduler to the execution units when the total number of physical register read ports exceeds the read bandwidth of the register file. This umask applies to instructions: DPPS, DPPS, VPCMPESTRI, PCMPESTRI, VPCMPESTRM, PCMPESTRM, VFMADD*, VFMADDSUB*, VFMSUB*, VMSUBADD*, VFNMADD*, VFNMSUB*."], ["SQ_MISC:SPLIT_LOCK", "SuperQueue miscellaneous. Number of split locks in the super queue (SQ)."], ["OFFCORE_RESPONSE_0:DMND_DATA_RD", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of demand and DCU prefetch data reads of full and partial cachelines as well as demand data page table entry cacheline reads. Does not count L2 data read prefetches or instruction fetches."], ["OFFCORE_RESPONSE_0:DMND_RFO", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of demand and DCU prefetch reads for ownership (RFO) requests generated by a write to data cacheline. Does not count L2 RFO prefetches."], ["OFFCORE_RESPONSE_0:DMND_CODE_RD", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches."], ["OFFCORE_RESPONSE_0:DMND_IFETCH", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches."], ["OFFCORE_RESPONSE_0:WB", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of writebacks (modified to exclusive) transactions."], ["OFFCORE_RESPONSE_0:PF_DATA_RD", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of data cacheline reads generated by L2 prefetchers."], ["OFFCORE_RESPONSE_0:PF_RFO", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of RFO requests generated by L2 prefetchers."], ["OFFCORE_RESPONSE_0:PF_IFETCH", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of code reads generated by L2 prefetchers."], ["OFFCORE_RESPONSE_0:PF_LLC_DATA_RD", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of L3 prefetcher requests to L2 for loads."], ["OFFCORE_RESPONSE_0:PF_LLC_RFO", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of RFO requests generated by L2 prefetcher."], ["OFFCORE_RESPONSE_0:PF_LLC_IFETCH", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of L2 prefetcher requests to L3 for instruction fetches."], ["OFFCORE_RESPONSE_0:BUS_LOCKS", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number bus lock and split lock requests."], ["OFFCORE_RESPONSE_0:STRM_ST", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of streaming store requests."], ["OFFCORE_RESPONSE_0:OTHER", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: counts one of the following transaction types, including L3 invalidate, I/O, full or partial writes, WC or non-temporal stores, CLFLUSH, Fences, lock, unlock, split lock."], ["OFFCORE_RESPONSE_0:ANY_IFETCH", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: combination of PF_IFETCH | DMND_IFETCH | PF_LLC_IFETCH."], ["OFFCORE_RESPONSE_0:ANY_REQUEST", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: combination of all request umasks."], ["OFFCORE_RESPONSE_0:ANY_DATA", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: combination of DMND_DATA | PF_DATA_RD | PF_LLC_DATA_RD."], ["OFFCORE_RESPONSE_0:ANY_RFO", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: combination of DMND_RFO | PF_RFO | PF_LLC_RFO."], ["OFFCORE_RESPONSE_0:ANY_RESPONSE", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Response: count any response type."], ["OFFCORE_RESPONSE_0:NO_SUPP", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts number of times supplier information is not available."], ["OFFCORE_RESPONSE_0:L3_HITM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in M-state (initial lookup)."], ["OFFCORE_RESPONSE_0:LLC_HITM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in M-state (initial lookup)."], ["OFFCORE_RESPONSE_0:L3_HITE", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in E-state."], ["OFFCORE_RESPONSE_0:LLC_HITE", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in E-state."], ["OFFCORE_RESPONSE_0:L3_HITS", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in S-state."], ["OFFCORE_RESPONSE_0:LLC_HITS", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in S-state."], ["OFFCORE_RESPONSE_0:L3_HITF", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in F-state."], ["OFFCORE_RESPONSE_0:LLC_HITF", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in F-state."], ["OFFCORE_RESPONSE_0:L3_HITMESF", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in any state (M, E, S, F)."], ["OFFCORE_RESPONSE_0:LLC_HITMESF", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in any state (M, E, S, F)."], ["OFFCORE_RESPONSE_0:L3_HIT", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Alias for L3_HITMESF."], ["OFFCORE_RESPONSE_0:LLC_HIT", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Alias for LLC_HITMESF."], ["OFFCORE_RESPONSE_0:L3_MISS_LOCAL", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to local DRAM."], ["OFFCORE_RESPONSE_0:LLC_MISS_LOCAL", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to local DRAM."], ["OFFCORE_RESPONSE_0:LLC_MISS_LOCAL_DRAM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to local DRAM."], ["OFFCORE_RESPONSE_0:L3_MISS", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to local or remote DRAM."], ["OFFCORE_RESPONSE_0:L3_MISS_REMOTE_HOP0", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote DRAM with 0 hop."], ["OFFCORE_RESPONSE_0:L3_MISS_REMOTE_HOP0_DRAM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote DRAM with 0 hop."], ["OFFCORE_RESPONSE_0:L3_MISS_REMOTE_HOP1", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote DRAM with 1 hop."], ["OFFCORE_RESPONSE_0:L3_MISS_REMOTE_HOP1_DRAM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote DRAM with 1 hop."], ["OFFCORE_RESPONSE_0:L3_MISS_REMOTE_HOP2P", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote DRAM with 2P hops."], ["OFFCORE_RESPONSE_0:L3_MISS_REMOTE_HOP2P_DRAM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote DRAM with 2P hops."], ["OFFCORE_RESPONSE_0:L3_MISS_REMOTE", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote node."], ["OFFCORE_RESPONSE_0:L3_MISS_REMOTE_DRAM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote node."], ["OFFCORE_RESPONSE_0:SPL_HIT", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 supplier hit."], ["OFFCORE_RESPONSE_0:SNP_NONE", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: counts number of times no snoop-related information is available."], ["OFFCORE_RESPONSE_0:SNP_NOT_NEEDED", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: counts the number of times no snoop was needed to satisfy the request."], ["OFFCORE_RESPONSE_0:SNP_MISS", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: counts number of times a snoop was needed and it missed all snooped caches."], ["OFFCORE_RESPONSE_0:SNP_NO_FWD", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: counts number of times a snoop was needed and it hit in at leas one snooped cache."], ["OFFCORE_RESPONSE_0:SNP_FWD", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: counts number of times a snoop was needed and data was forwarded from a remote socket."], ["OFFCORE_RESPONSE_0:HITM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: counts number of times a snoop was needed and it hitM-ed in local or remote cache."], ["OFFCORE_RESPONSE_0:SNP_HITM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: counts number of times a snoop was needed and it hitM-ed in local or remote cache."], ["OFFCORE_RESPONSE_0:NON_DRAM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop:  counts number of times target was a non-DRAM system address. This includes MMIO transactions."], ["OFFCORE_RESPONSE_0:SNP_ANY", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: any snoop reason."], ["OFFCORE_RESPONSE_1:DMND_DATA_RD", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of demand and DCU prefetch data reads of full and partial cachelines as well as demand data page table entry cacheline reads. Does not count L2 data read prefetches or instruction fetches."], ["OFFCORE_RESPONSE_1:DMND_RFO", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of demand and DCU prefetch reads for ownership (RFO) requests generated by a write to data cacheline. Does not count L2 RFO prefetches."], ["OFFCORE_RESPONSE_1:DMND_CODE_RD", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches."], ["OFFCORE_RESPONSE_1:DMND_IFETCH", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches."], ["OFFCORE_RESPONSE_1:WB", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of writebacks (modified to exclusive) transactions."], ["OFFCORE_RESPONSE_1:PF_DATA_RD", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of data cacheline reads generated by L2 prefetchers."], ["OFFCORE_RESPONSE_1:PF_RFO", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of RFO requests generated by L2 prefetchers."], ["OFFCORE_RESPONSE_1:PF_IFETCH", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of code reads generated by L2 prefetchers."], ["OFFCORE_RESPONSE_1:PF_LLC_DATA_RD", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of L3 prefetcher requests to L2 for loads."], ["OFFCORE_RESPONSE_1:PF_LLC_RFO", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of RFO requests generated by L2 prefetcher."], ["OFFCORE_RESPONSE_1:PF_LLC_IFETCH", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of L2 prefetcher requests to L3 for instruction fetches."], ["OFFCORE_RESPONSE_1:BUS_LOCKS", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number bus lock and split lock requests."], ["OFFCORE_RESPONSE_1:STRM_ST", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: number of streaming store requests."], ["OFFCORE_RESPONSE_1:OTHER", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: counts one of the following transaction types, including L3 invalidate, I/O, full or partial writes, WC or non-temporal stores, CLFLUSH, Fences, lock, unlock, split lock."], ["OFFCORE_RESPONSE_1:ANY_IFETCH", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: combination of PF_IFETCH | DMND_IFETCH | PF_LLC_IFETCH."], ["OFFCORE_RESPONSE_1:ANY_REQUEST", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: combination of all request umasks."], ["OFFCORE_RESPONSE_1:ANY_DATA", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: combination of DMND_DATA | PF_DATA_RD | PF_LLC_DATA_RD."], ["OFFCORE_RESPONSE_1:ANY_RFO", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Request: combination of DMND_RFO | PF_RFO | PF_LLC_RFO."], ["OFFCORE_RESPONSE_1:ANY_RESPONSE", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Response: count any response type."], ["OFFCORE_RESPONSE_1:NO_SUPP", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts number of times supplier information is not available."], ["OFFCORE_RESPONSE_1:L3_HITM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in M-state (initial lookup)."], ["OFFCORE_RESPONSE_1:LLC_HITM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in M-state (initial lookup)."], ["OFFCORE_RESPONSE_1:L3_HITE", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in E-state."], ["OFFCORE_RESPONSE_1:LLC_HITE", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in E-state."], ["OFFCORE_RESPONSE_1:L3_HITS", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in S-state."], ["OFFCORE_RESPONSE_1:LLC_HITS", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in S-state."], ["OFFCORE_RESPONSE_1:L3_HITF", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in F-state."], ["OFFCORE_RESPONSE_1:LLC_HITF", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in F-state."], ["OFFCORE_RESPONSE_1:L3_HITMESF", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in any state (M, E, S, F)."], ["OFFCORE_RESPONSE_1:LLC_HITMESF", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 hits in any state (M, E, S, F)."], ["OFFCORE_RESPONSE_1:L3_HIT", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Alias for L3_HITMESF."], ["OFFCORE_RESPONSE_1:LLC_HIT", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Alias for LLC_HITMESF."], ["OFFCORE_RESPONSE_1:L3_MISS_LOCAL", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to local DRAM."], ["OFFCORE_RESPONSE_1:LLC_MISS_LOCAL", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to local DRAM."], ["OFFCORE_RESPONSE_1:LLC_MISS_LOCAL_DRAM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to local DRAM."], ["OFFCORE_RESPONSE_1:L3_MISS", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to local or remote DRAM."], ["OFFCORE_RESPONSE_1:L3_MISS_REMOTE_HOP0", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote DRAM with 0 hop."], ["OFFCORE_RESPONSE_1:L3_MISS_REMOTE_HOP0_DRAM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote DRAM with 0 hop."], ["OFFCORE_RESPONSE_1:L3_MISS_REMOTE_HOP1", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote DRAM with 1 hop."], ["OFFCORE_RESPONSE_1:L3_MISS_REMOTE_HOP1_DRAM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote DRAM with 1 hop."], ["OFFCORE_RESPONSE_1:L3_MISS_REMOTE_HOP2P", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote DRAM with 2P hops."], ["OFFCORE_RESPONSE_1:L3_MISS_REMOTE_HOP2P_DRAM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote DRAM with 2P hops."], ["OFFCORE_RESPONSE_1:L3_MISS_REMOTE", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote node."], ["OFFCORE_RESPONSE_1:L3_MISS_REMOTE_DRAM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 misses to remote node."], ["OFFCORE_RESPONSE_1:SPL_HIT", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Supplier: counts L3 supplier hit."], ["OFFCORE_RESPONSE_1:SNP_NONE", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: counts number of times no snoop-related information is available."], ["OFFCORE_RESPONSE_1:SNP_NOT_NEEDED", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: counts the number of times no snoop was needed to satisfy the request."], ["OFFCORE_RESPONSE_1:SNP_MISS", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: counts number of times a snoop was needed and it missed all snooped caches."], ["OFFCORE_RESPONSE_1:SNP_NO_FWD", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: counts number of times a snoop was needed and it hit in at leas one snooped cache."], ["OFFCORE_RESPONSE_1:SNP_FWD", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: counts number of times a snoop was needed and data was forwarded from a remote socket."], ["OFFCORE_RESPONSE_1:HITM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: counts number of times a snoop was needed and it hitM-ed in local or remote cache."], ["OFFCORE_RESPONSE_1:SNP_HITM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: counts number of times a snoop was needed and it hitM-ed in local or remote cache."], ["OFFCORE_RESPONSE_1:NON_DRAM", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop:  counts number of times target was a non-DRAM system address. This includes MMIO transactions."], ["OFFCORE_RESPONSE_1:SNP_ANY", "Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop). Snoop: any snoop reason."]], "features": {"name": "Intel Broadwell EP", "no_events": 75, "max_encoding": 2, "counters": 11, "type": "core PMU"}}, "bdx_unc_cbo0": {"events": [["UNC_C_BOUNCE_CONTROL", "TBD."], ["UNC_C_CLOCKTICKS", "Clock ticks."], ["UNC_C_COUNTER0_OCCUPANCY", "Since occupancy counts can only be captured in the Cbos 0 counter, this event allows a user to capture occupancy related information by filtering the Cb0 occupancy count captured in Counter 0. The filtering available is found in the control register - threshold, invert and edge detect.  E.g. setting threshold to 1 can effectively monitor how many cycles the monitored queue has an entry.."], ["UNC_C_FAST_ASSERTED", "Counts the number of cycles either the local distress or incoming distress signals are asserted.  Incoming distress includes both up and dn.."], ["UNC_C_LLC_LOOKUP:ANY", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Request."], ["UNC_C_LLC_LOOKUP:DATA_READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Data Read Request."], ["UNC_C_LLC_LOOKUP:NID", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Lookups that Match NID."], ["UNC_C_LLC_LOOKUP:READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Read Request."], ["UNC_C_LLC_LOOKUP:REMOTE_SNOOP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- External Snoop Request."], ["UNC_C_LLC_LOOKUP:WRITE", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Write Requests."], ["UNC_C_LLC_LOOKUP:STATE_I", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Invalid cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_S", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Shared cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_E", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Exclusive cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_M", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Modified cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_F", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Forward cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_D", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Debug cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_MP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cacheline is modified but never written, was forwarded in modified state."], ["UNC_C_LLC_LOOKUP:STATE_MESIFD", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Any cache line state."], ["UNC_C_LLC_VICTIMS:F_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in Forward state."], ["UNC_C_LLC_VICTIMS:I_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S State."], ["UNC_C_LLC_VICTIMS:S_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S state."], ["UNC_C_LLC_VICTIMS:E_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in E state."], ["UNC_C_LLC_VICTIMS:M_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in M state."], ["UNC_C_LLC_VICTIMS:MISS", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized."], ["UNC_C_LLC_VICTIMS:NID", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized -- Victimized Lines that Match NID."], ["UNC_C_MISC:CVZERO_PREFETCH_MISS", "Miscellaneous events in the Cbo.. Cbo Misc -- DRd hitting non-M with raw CV=0."], ["UNC_C_MISC:CVZERO_PREFETCH_VICTIM", "Miscellaneous events in the Cbo.. Cbo Misc -- Clean Victim with raw CV=0."], ["UNC_C_MISC:RFO_HIT_S", "Miscellaneous events in the Cbo.. Cbo Misc -- RFO HitS."], ["UNC_C_MISC:RSPI_WAS_FSE", "Miscellaneous events in the Cbo.. Cbo Misc -- Silent Snoop Eviction."], ["UNC_C_MISC:STARTED", "Miscellaneous events in the Cbo.. Cbo Misc -- ."], ["UNC_C_MISC:WC_ALIASING", "Miscellaneous events in the Cbo.. Cbo Misc -- Write Combining Aliasing."], ["UNC_C_RING_AD_USED:ALL", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- All."], ["UNC_C_RING_AD_USED:CCW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down."], ["UNC_C_RING_AD_USED:CW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up."], ["UNC_C_RING_AD_USED:DOWN_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Even."], ["UNC_C_RING_AD_USED:DOWN_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Odd."], ["UNC_C_RING_AD_USED:UP_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Even."], ["UNC_C_RING_AD_USED:UP_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Odd."], ["UNC_C_RING_AK_USED:ALL", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- All."], ["UNC_C_RING_AK_USED:CCW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down."], ["UNC_C_RING_AK_USED:CW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up."], ["UNC_C_RING_AK_USED:DOWN_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Even."], ["UNC_C_RING_AK_USED:DOWN_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Odd."], ["UNC_C_RING_AK_USED:UP_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Even."], ["UNC_C_RING_AK_USED:UP_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Odd."], ["UNC_C_RING_BL_USED:ALL", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CCW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up."], ["UNC_C_RING_BL_USED:DOWN_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Even."], ["UNC_C_RING_BL_USED:DOWN_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Odd."], ["UNC_C_RING_BL_USED:UP_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Even."], ["UNC_C_RING_BL_USED:UP_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Odd."], ["UNC_C_RING_BOUNCES:AD", "TBD. Number of LLC responses that bounced on the Ring. -- AD."], ["UNC_C_RING_BOUNCES:AK", "TBD. Number of LLC responses that bounced on the Ring. -- AK."], ["UNC_C_RING_BOUNCES:BL", "TBD. Number of LLC responses that bounced on the Ring. -- BL."], ["UNC_C_RING_BOUNCES:IV", "TBD. Number of LLC responses that bounced on the Ring. -- Snoops of processors cachee.."], ["UNC_C_RING_IV_USED:ANY", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DOWN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Down."], ["UNC_C_RING_IV_USED:UP", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_SRC_THRTL", "TBD."], ["UNC_C_RXR_EXT_STARVED:IPQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IRQ."], ["UNC_C_RXR_EXT_STARVED:IRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IPQ."], ["UNC_C_RXR_EXT_STARVED:ISMQ_BIDS", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- ISMQ_BID."], ["UNC_C_RXR_EXT_STARVED:PRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- PRQ."], ["UNC_C_RXR_INSERTS:IPQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IPQ."], ["UNC_C_RXR_INSERTS:IRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ."], ["UNC_C_RXR_INSERTS:IRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ Rejected."], ["UNC_C_RXR_INSERTS:PRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_INSERTS:PRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_IPQ_RETRY:ADDR_CONFLICT", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Address Conflict."], ["UNC_C_RXR_IPQ_RETRY:ANY", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Any Reject."], ["UNC_C_RXR_IPQ_RETRY:FULL", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No Egress Credits."], ["UNC_C_RXR_IPQ_RETRY:QPI_CREDITS", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No QPI Credits."], ["UNC_C_RXR_IPQ_RETRY2:AD_SBO", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No AD Sbo Credits."], ["UNC_C_RXR_IPQ_RETRY2:TARGET", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Target Node Filter."], ["UNC_C_RXR_IRQ_RETRY:ADDR_CONFLICT", "TBD. Ingress Request Queue Rejects -- Address Conflict."], ["UNC_C_RXR_IRQ_RETRY:ANY", "TBD. Ingress Request Queue Rejects -- Any Reject."], ["UNC_C_RXR_IRQ_RETRY:FULL", "TBD. Ingress Request Queue Rejects -- No Egress Credits."], ["UNC_C_RXR_IRQ_RETRY:IIO_CREDITS", "TBD. Ingress Request Queue Rejects -- No IIO Credits."], ["UNC_C_RXR_IRQ_RETRY:NID", "TBD. Ingress Request Queue Rejects -- ."], ["UNC_C_RXR_IRQ_RETRY:QPI_CREDITS", "TBD. Ingress Request Queue Rejects -- No QPI Credits."], ["UNC_C_RXR_IRQ_RETRY:RTID", "TBD. Ingress Request Queue Rejects -- No RTIDs."], ["UNC_C_RXR_IRQ_RETRY2:AD_SBO", "TBD. Ingress Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:BL_SBO", "TBD. Ingress Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:TARGET", "TBD. Ingress Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_ISMQ_RETRY:ANY", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- Any Reject."], ["UNC_C_RXR_ISMQ_RETRY:FULL", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No Egress Credits."], ["UNC_C_RXR_ISMQ_RETRY:IIO_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No IIO Credits."], ["UNC_C_RXR_ISMQ_RETRY:NID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY:QPI_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No QPI Credits."], ["UNC_C_RXR_ISMQ_RETRY:RTID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No RTIDs."], ["UNC_C_RXR_ISMQ_RETRY:WB_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY2:AD_SBO", "TBD. ISMQ Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:BL_SBO", "TBD. ISMQ Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:TARGET", "TBD. ISMQ Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_OCCUPANCY:IPQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IPQ."], ["UNC_C_RXR_OCCUPANCY:IRQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ."], ["UNC_C_RXR_OCCUPANCY:IRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ Rejected."], ["UNC_C_RXR_OCCUPANCY:PRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- PRQ Rejects."], ["UNC_C_SBO_CREDITS_ACQUIRED:AD", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For AD Ring."], ["UNC_C_SBO_CREDITS_ACQUIRED:BL", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For BL Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:AD", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For AD Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:BL", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For BL Ring."], ["UNC_C_TOR_INSERTS:ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. All."], ["UNC_C_TOR_INSERTS:EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_INSERTS:LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory."], ["UNC_C_TOR_INSERTS:LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory."], ["UNC_C_TOR_INSERTS:MISS_LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss Opcode Match."], ["UNC_C_TOR_INSERTS:MISS_REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory."], ["UNC_C_TOR_INSERTS:MISS_REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched."], ["UNC_C_TOR_INSERTS:NID_EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Evictions."], ["UNC_C_TOR_INSERTS:NID_MISS_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Miss All."], ["UNC_C_TOR_INSERTS:NID_MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched Miss."], ["UNC_C_TOR_INSERTS:NID_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Writebacks."], ["UNC_C_TOR_INSERTS:OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Opcode Match."], ["UNC_C_TOR_INSERTS:REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory."], ["UNC_C_TOR_INSERTS:REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Writebacks."], ["UNC_C_TOR_INSERTS:OPC_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_CRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_DRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCILF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_CODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_DATA", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIRDCUR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOI", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_ITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWRF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Any."], ["UNC_C_TOR_OCCUPANCY:EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_OCCUPANCY:LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_OCCUPANCY:MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss All."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:NID_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched eviction transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched miss transactions that were inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID and opcode matched miss transactions inserted into the TOR (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match a NID and opcode (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched write back transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of write transactions inserted into the TOR."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:OPC_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_CRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_DRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCILF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_CODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_DATA", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIRDCUR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOI", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_ITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWRF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TXR_ADS_USED:AD", "TBD. Onto AD Ring."], ["UNC_C_TXR_ADS_USED:AK", "TBD. Onto AK Ring."], ["UNC_C_TXR_ADS_USED:BL", "TBD. Onto BL Ring."], ["UNC_C_TXR_INSERTS:AD_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Cachebo."], ["UNC_C_TXR_INSERTS:AD_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Corebo."], ["UNC_C_TXR_INSERTS:AK_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Cachebo."], ["UNC_C_TXR_INSERTS:AK_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Corebo."], ["UNC_C_TXR_INSERTS:BL_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Cacheno."], ["UNC_C_TXR_INSERTS:BL_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Corebo."], ["UNC_C_TXR_INSERTS:IV_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- IV - Cachebo."]], "features": {"name": "Intel BroadwellX C-Box 0 uncore", "no_events": 28, "max_encoding": 2, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_cbo1": {"events": [["UNC_C_BOUNCE_CONTROL", "TBD."], ["UNC_C_CLOCKTICKS", "Clock ticks."], ["UNC_C_COUNTER0_OCCUPANCY", "Since occupancy counts can only be captured in the Cbos 0 counter, this event allows a user to capture occupancy related information by filtering the Cb0 occupancy count captured in Counter 0. The filtering available is found in the control register - threshold, invert and edge detect.  E.g. setting threshold to 1 can effectively monitor how many cycles the monitored queue has an entry.."], ["UNC_C_FAST_ASSERTED", "Counts the number of cycles either the local distress or incoming distress signals are asserted.  Incoming distress includes both up and dn.."], ["UNC_C_LLC_LOOKUP:ANY", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Request."], ["UNC_C_LLC_LOOKUP:DATA_READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Data Read Request."], ["UNC_C_LLC_LOOKUP:NID", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Lookups that Match NID."], ["UNC_C_LLC_LOOKUP:READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Read Request."], ["UNC_C_LLC_LOOKUP:REMOTE_SNOOP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- External Snoop Request."], ["UNC_C_LLC_LOOKUP:WRITE", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Write Requests."], ["UNC_C_LLC_LOOKUP:STATE_I", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Invalid cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_S", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Shared cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_E", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Exclusive cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_M", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Modified cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_F", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Forward cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_D", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Debug cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_MP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cacheline is modified but never written, was forwarded in modified state."], ["UNC_C_LLC_LOOKUP:STATE_MESIFD", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Any cache line state."], ["UNC_C_LLC_VICTIMS:F_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in Forward state."], ["UNC_C_LLC_VICTIMS:I_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S State."], ["UNC_C_LLC_VICTIMS:S_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S state."], ["UNC_C_LLC_VICTIMS:E_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in E state."], ["UNC_C_LLC_VICTIMS:M_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in M state."], ["UNC_C_LLC_VICTIMS:MISS", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized."], ["UNC_C_LLC_VICTIMS:NID", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized -- Victimized Lines that Match NID."], ["UNC_C_MISC:CVZERO_PREFETCH_MISS", "Miscellaneous events in the Cbo.. Cbo Misc -- DRd hitting non-M with raw CV=0."], ["UNC_C_MISC:CVZERO_PREFETCH_VICTIM", "Miscellaneous events in the Cbo.. Cbo Misc -- Clean Victim with raw CV=0."], ["UNC_C_MISC:RFO_HIT_S", "Miscellaneous events in the Cbo.. Cbo Misc -- RFO HitS."], ["UNC_C_MISC:RSPI_WAS_FSE", "Miscellaneous events in the Cbo.. Cbo Misc -- Silent Snoop Eviction."], ["UNC_C_MISC:STARTED", "Miscellaneous events in the Cbo.. Cbo Misc -- ."], ["UNC_C_MISC:WC_ALIASING", "Miscellaneous events in the Cbo.. Cbo Misc -- Write Combining Aliasing."], ["UNC_C_RING_AD_USED:ALL", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- All."], ["UNC_C_RING_AD_USED:CCW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down."], ["UNC_C_RING_AD_USED:CW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up."], ["UNC_C_RING_AD_USED:DOWN_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Even."], ["UNC_C_RING_AD_USED:DOWN_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Odd."], ["UNC_C_RING_AD_USED:UP_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Even."], ["UNC_C_RING_AD_USED:UP_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Odd."], ["UNC_C_RING_AK_USED:ALL", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- All."], ["UNC_C_RING_AK_USED:CCW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down."], ["UNC_C_RING_AK_USED:CW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up."], ["UNC_C_RING_AK_USED:DOWN_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Even."], ["UNC_C_RING_AK_USED:DOWN_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Odd."], ["UNC_C_RING_AK_USED:UP_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Even."], ["UNC_C_RING_AK_USED:UP_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Odd."], ["UNC_C_RING_BL_USED:ALL", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CCW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up."], ["UNC_C_RING_BL_USED:DOWN_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Even."], ["UNC_C_RING_BL_USED:DOWN_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Odd."], ["UNC_C_RING_BL_USED:UP_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Even."], ["UNC_C_RING_BL_USED:UP_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Odd."], ["UNC_C_RING_BOUNCES:AD", "TBD. Number of LLC responses that bounced on the Ring. -- AD."], ["UNC_C_RING_BOUNCES:AK", "TBD. Number of LLC responses that bounced on the Ring. -- AK."], ["UNC_C_RING_BOUNCES:BL", "TBD. Number of LLC responses that bounced on the Ring. -- BL."], ["UNC_C_RING_BOUNCES:IV", "TBD. Number of LLC responses that bounced on the Ring. -- Snoops of processors cachee.."], ["UNC_C_RING_IV_USED:ANY", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DOWN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Down."], ["UNC_C_RING_IV_USED:UP", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_SRC_THRTL", "TBD."], ["UNC_C_RXR_EXT_STARVED:IPQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IRQ."], ["UNC_C_RXR_EXT_STARVED:IRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IPQ."], ["UNC_C_RXR_EXT_STARVED:ISMQ_BIDS", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- ISMQ_BID."], ["UNC_C_RXR_EXT_STARVED:PRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- PRQ."], ["UNC_C_RXR_INSERTS:IPQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IPQ."], ["UNC_C_RXR_INSERTS:IRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ."], ["UNC_C_RXR_INSERTS:IRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ Rejected."], ["UNC_C_RXR_INSERTS:PRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_INSERTS:PRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_IPQ_RETRY:ADDR_CONFLICT", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Address Conflict."], ["UNC_C_RXR_IPQ_RETRY:ANY", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Any Reject."], ["UNC_C_RXR_IPQ_RETRY:FULL", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No Egress Credits."], ["UNC_C_RXR_IPQ_RETRY:QPI_CREDITS", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No QPI Credits."], ["UNC_C_RXR_IPQ_RETRY2:AD_SBO", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No AD Sbo Credits."], ["UNC_C_RXR_IPQ_RETRY2:TARGET", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Target Node Filter."], ["UNC_C_RXR_IRQ_RETRY:ADDR_CONFLICT", "TBD. Ingress Request Queue Rejects -- Address Conflict."], ["UNC_C_RXR_IRQ_RETRY:ANY", "TBD. Ingress Request Queue Rejects -- Any Reject."], ["UNC_C_RXR_IRQ_RETRY:FULL", "TBD. Ingress Request Queue Rejects -- No Egress Credits."], ["UNC_C_RXR_IRQ_RETRY:IIO_CREDITS", "TBD. Ingress Request Queue Rejects -- No IIO Credits."], ["UNC_C_RXR_IRQ_RETRY:NID", "TBD. Ingress Request Queue Rejects -- ."], ["UNC_C_RXR_IRQ_RETRY:QPI_CREDITS", "TBD. Ingress Request Queue Rejects -- No QPI Credits."], ["UNC_C_RXR_IRQ_RETRY:RTID", "TBD. Ingress Request Queue Rejects -- No RTIDs."], ["UNC_C_RXR_IRQ_RETRY2:AD_SBO", "TBD. Ingress Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:BL_SBO", "TBD. Ingress Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:TARGET", "TBD. Ingress Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_ISMQ_RETRY:ANY", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- Any Reject."], ["UNC_C_RXR_ISMQ_RETRY:FULL", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No Egress Credits."], ["UNC_C_RXR_ISMQ_RETRY:IIO_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No IIO Credits."], ["UNC_C_RXR_ISMQ_RETRY:NID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY:QPI_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No QPI Credits."], ["UNC_C_RXR_ISMQ_RETRY:RTID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No RTIDs."], ["UNC_C_RXR_ISMQ_RETRY:WB_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY2:AD_SBO", "TBD. ISMQ Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:BL_SBO", "TBD. ISMQ Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:TARGET", "TBD. ISMQ Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_OCCUPANCY:IPQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IPQ."], ["UNC_C_RXR_OCCUPANCY:IRQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ."], ["UNC_C_RXR_OCCUPANCY:IRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ Rejected."], ["UNC_C_RXR_OCCUPANCY:PRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- PRQ Rejects."], ["UNC_C_SBO_CREDITS_ACQUIRED:AD", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For AD Ring."], ["UNC_C_SBO_CREDITS_ACQUIRED:BL", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For BL Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:AD", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For AD Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:BL", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For BL Ring."], ["UNC_C_TOR_INSERTS:ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. All."], ["UNC_C_TOR_INSERTS:EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_INSERTS:LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory."], ["UNC_C_TOR_INSERTS:LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory."], ["UNC_C_TOR_INSERTS:MISS_LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss Opcode Match."], ["UNC_C_TOR_INSERTS:MISS_REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory."], ["UNC_C_TOR_INSERTS:MISS_REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched."], ["UNC_C_TOR_INSERTS:NID_EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Evictions."], ["UNC_C_TOR_INSERTS:NID_MISS_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Miss All."], ["UNC_C_TOR_INSERTS:NID_MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched Miss."], ["UNC_C_TOR_INSERTS:NID_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Writebacks."], ["UNC_C_TOR_INSERTS:OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Opcode Match."], ["UNC_C_TOR_INSERTS:REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory."], ["UNC_C_TOR_INSERTS:REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Writebacks."], ["UNC_C_TOR_INSERTS:OPC_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_CRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_DRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCILF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_CODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_DATA", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIRDCUR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOI", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_ITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWRF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Any."], ["UNC_C_TOR_OCCUPANCY:EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_OCCUPANCY:LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_OCCUPANCY:MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss All."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:NID_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched eviction transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched miss transactions that were inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID and opcode matched miss transactions inserted into the TOR (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match a NID and opcode (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched write back transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of write transactions inserted into the TOR."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:OPC_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_CRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_DRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCILF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_CODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_DATA", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIRDCUR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOI", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_ITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWRF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TXR_ADS_USED:AD", "TBD. Onto AD Ring."], ["UNC_C_TXR_ADS_USED:AK", "TBD. Onto AK Ring."], ["UNC_C_TXR_ADS_USED:BL", "TBD. Onto BL Ring."], ["UNC_C_TXR_INSERTS:AD_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Cachebo."], ["UNC_C_TXR_INSERTS:AD_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Corebo."], ["UNC_C_TXR_INSERTS:AK_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Cachebo."], ["UNC_C_TXR_INSERTS:AK_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Corebo."], ["UNC_C_TXR_INSERTS:BL_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Cacheno."], ["UNC_C_TXR_INSERTS:BL_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Corebo."], ["UNC_C_TXR_INSERTS:IV_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- IV - Cachebo."]], "features": {"name": "Intel BroadwellX C-Box 1 uncore", "no_events": 28, "max_encoding": 2, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_cbo2": {"events": [["UNC_C_BOUNCE_CONTROL", "TBD."], ["UNC_C_CLOCKTICKS", "Clock ticks."], ["UNC_C_COUNTER0_OCCUPANCY", "Since occupancy counts can only be captured in the Cbos 0 counter, this event allows a user to capture occupancy related information by filtering the Cb0 occupancy count captured in Counter 0. The filtering available is found in the control register - threshold, invert and edge detect.  E.g. setting threshold to 1 can effectively monitor how many cycles the monitored queue has an entry.."], ["UNC_C_FAST_ASSERTED", "Counts the number of cycles either the local distress or incoming distress signals are asserted.  Incoming distress includes both up and dn.."], ["UNC_C_LLC_LOOKUP:ANY", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Request."], ["UNC_C_LLC_LOOKUP:DATA_READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Data Read Request."], ["UNC_C_LLC_LOOKUP:NID", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Lookups that Match NID."], ["UNC_C_LLC_LOOKUP:READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Read Request."], ["UNC_C_LLC_LOOKUP:REMOTE_SNOOP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- External Snoop Request."], ["UNC_C_LLC_LOOKUP:WRITE", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Write Requests."], ["UNC_C_LLC_LOOKUP:STATE_I", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Invalid cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_S", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Shared cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_E", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Exclusive cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_M", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Modified cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_F", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Forward cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_D", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Debug cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_MP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cacheline is modified but never written, was forwarded in modified state."], ["UNC_C_LLC_LOOKUP:STATE_MESIFD", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Any cache line state."], ["UNC_C_LLC_VICTIMS:F_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in Forward state."], ["UNC_C_LLC_VICTIMS:I_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S State."], ["UNC_C_LLC_VICTIMS:S_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S state."], ["UNC_C_LLC_VICTIMS:E_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in E state."], ["UNC_C_LLC_VICTIMS:M_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in M state."], ["UNC_C_LLC_VICTIMS:MISS", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized."], ["UNC_C_LLC_VICTIMS:NID", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized -- Victimized Lines that Match NID."], ["UNC_C_MISC:CVZERO_PREFETCH_MISS", "Miscellaneous events in the Cbo.. Cbo Misc -- DRd hitting non-M with raw CV=0."], ["UNC_C_MISC:CVZERO_PREFETCH_VICTIM", "Miscellaneous events in the Cbo.. Cbo Misc -- Clean Victim with raw CV=0."], ["UNC_C_MISC:RFO_HIT_S", "Miscellaneous events in the Cbo.. Cbo Misc -- RFO HitS."], ["UNC_C_MISC:RSPI_WAS_FSE", "Miscellaneous events in the Cbo.. Cbo Misc -- Silent Snoop Eviction."], ["UNC_C_MISC:STARTED", "Miscellaneous events in the Cbo.. Cbo Misc -- ."], ["UNC_C_MISC:WC_ALIASING", "Miscellaneous events in the Cbo.. Cbo Misc -- Write Combining Aliasing."], ["UNC_C_RING_AD_USED:ALL", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- All."], ["UNC_C_RING_AD_USED:CCW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down."], ["UNC_C_RING_AD_USED:CW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up."], ["UNC_C_RING_AD_USED:DOWN_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Even."], ["UNC_C_RING_AD_USED:DOWN_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Odd."], ["UNC_C_RING_AD_USED:UP_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Even."], ["UNC_C_RING_AD_USED:UP_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Odd."], ["UNC_C_RING_AK_USED:ALL", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- All."], ["UNC_C_RING_AK_USED:CCW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down."], ["UNC_C_RING_AK_USED:CW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up."], ["UNC_C_RING_AK_USED:DOWN_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Even."], ["UNC_C_RING_AK_USED:DOWN_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Odd."], ["UNC_C_RING_AK_USED:UP_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Even."], ["UNC_C_RING_AK_USED:UP_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Odd."], ["UNC_C_RING_BL_USED:ALL", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CCW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up."], ["UNC_C_RING_BL_USED:DOWN_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Even."], ["UNC_C_RING_BL_USED:DOWN_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Odd."], ["UNC_C_RING_BL_USED:UP_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Even."], ["UNC_C_RING_BL_USED:UP_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Odd."], ["UNC_C_RING_BOUNCES:AD", "TBD. Number of LLC responses that bounced on the Ring. -- AD."], ["UNC_C_RING_BOUNCES:AK", "TBD. Number of LLC responses that bounced on the Ring. -- AK."], ["UNC_C_RING_BOUNCES:BL", "TBD. Number of LLC responses that bounced on the Ring. -- BL."], ["UNC_C_RING_BOUNCES:IV", "TBD. Number of LLC responses that bounced on the Ring. -- Snoops of processors cachee.."], ["UNC_C_RING_IV_USED:ANY", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DOWN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Down."], ["UNC_C_RING_IV_USED:UP", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_SRC_THRTL", "TBD."], ["UNC_C_RXR_EXT_STARVED:IPQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IRQ."], ["UNC_C_RXR_EXT_STARVED:IRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IPQ."], ["UNC_C_RXR_EXT_STARVED:ISMQ_BIDS", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- ISMQ_BID."], ["UNC_C_RXR_EXT_STARVED:PRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- PRQ."], ["UNC_C_RXR_INSERTS:IPQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IPQ."], ["UNC_C_RXR_INSERTS:IRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ."], ["UNC_C_RXR_INSERTS:IRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ Rejected."], ["UNC_C_RXR_INSERTS:PRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_INSERTS:PRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_IPQ_RETRY:ADDR_CONFLICT", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Address Conflict."], ["UNC_C_RXR_IPQ_RETRY:ANY", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Any Reject."], ["UNC_C_RXR_IPQ_RETRY:FULL", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No Egress Credits."], ["UNC_C_RXR_IPQ_RETRY:QPI_CREDITS", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No QPI Credits."], ["UNC_C_RXR_IPQ_RETRY2:AD_SBO", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No AD Sbo Credits."], ["UNC_C_RXR_IPQ_RETRY2:TARGET", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Target Node Filter."], ["UNC_C_RXR_IRQ_RETRY:ADDR_CONFLICT", "TBD. Ingress Request Queue Rejects -- Address Conflict."], ["UNC_C_RXR_IRQ_RETRY:ANY", "TBD. Ingress Request Queue Rejects -- Any Reject."], ["UNC_C_RXR_IRQ_RETRY:FULL", "TBD. Ingress Request Queue Rejects -- No Egress Credits."], ["UNC_C_RXR_IRQ_RETRY:IIO_CREDITS", "TBD. Ingress Request Queue Rejects -- No IIO Credits."], ["UNC_C_RXR_IRQ_RETRY:NID", "TBD. Ingress Request Queue Rejects -- ."], ["UNC_C_RXR_IRQ_RETRY:QPI_CREDITS", "TBD. Ingress Request Queue Rejects -- No QPI Credits."], ["UNC_C_RXR_IRQ_RETRY:RTID", "TBD. Ingress Request Queue Rejects -- No RTIDs."], ["UNC_C_RXR_IRQ_RETRY2:AD_SBO", "TBD. Ingress Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:BL_SBO", "TBD. Ingress Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:TARGET", "TBD. Ingress Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_ISMQ_RETRY:ANY", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- Any Reject."], ["UNC_C_RXR_ISMQ_RETRY:FULL", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No Egress Credits."], ["UNC_C_RXR_ISMQ_RETRY:IIO_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No IIO Credits."], ["UNC_C_RXR_ISMQ_RETRY:NID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY:QPI_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No QPI Credits."], ["UNC_C_RXR_ISMQ_RETRY:RTID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No RTIDs."], ["UNC_C_RXR_ISMQ_RETRY:WB_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY2:AD_SBO", "TBD. ISMQ Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:BL_SBO", "TBD. ISMQ Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:TARGET", "TBD. ISMQ Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_OCCUPANCY:IPQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IPQ."], ["UNC_C_RXR_OCCUPANCY:IRQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ."], ["UNC_C_RXR_OCCUPANCY:IRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ Rejected."], ["UNC_C_RXR_OCCUPANCY:PRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- PRQ Rejects."], ["UNC_C_SBO_CREDITS_ACQUIRED:AD", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For AD Ring."], ["UNC_C_SBO_CREDITS_ACQUIRED:BL", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For BL Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:AD", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For AD Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:BL", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For BL Ring."], ["UNC_C_TOR_INSERTS:ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. All."], ["UNC_C_TOR_INSERTS:EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_INSERTS:LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory."], ["UNC_C_TOR_INSERTS:LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory."], ["UNC_C_TOR_INSERTS:MISS_LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss Opcode Match."], ["UNC_C_TOR_INSERTS:MISS_REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory."], ["UNC_C_TOR_INSERTS:MISS_REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched."], ["UNC_C_TOR_INSERTS:NID_EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Evictions."], ["UNC_C_TOR_INSERTS:NID_MISS_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Miss All."], ["UNC_C_TOR_INSERTS:NID_MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched Miss."], ["UNC_C_TOR_INSERTS:NID_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Writebacks."], ["UNC_C_TOR_INSERTS:OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Opcode Match."], ["UNC_C_TOR_INSERTS:REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory."], ["UNC_C_TOR_INSERTS:REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Writebacks."], ["UNC_C_TOR_INSERTS:OPC_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_CRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_DRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCILF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_CODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_DATA", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIRDCUR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOI", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_ITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWRF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Any."], ["UNC_C_TOR_OCCUPANCY:EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_OCCUPANCY:LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_OCCUPANCY:MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss All."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:NID_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched eviction transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched miss transactions that were inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID and opcode matched miss transactions inserted into the TOR (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match a NID and opcode (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched write back transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of write transactions inserted into the TOR."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:OPC_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_CRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_DRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCILF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_CODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_DATA", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIRDCUR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOI", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_ITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWRF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TXR_ADS_USED:AD", "TBD. Onto AD Ring."], ["UNC_C_TXR_ADS_USED:AK", "TBD. Onto AK Ring."], ["UNC_C_TXR_ADS_USED:BL", "TBD. Onto BL Ring."], ["UNC_C_TXR_INSERTS:AD_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Cachebo."], ["UNC_C_TXR_INSERTS:AD_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Corebo."], ["UNC_C_TXR_INSERTS:AK_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Cachebo."], ["UNC_C_TXR_INSERTS:AK_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Corebo."], ["UNC_C_TXR_INSERTS:BL_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Cacheno."], ["UNC_C_TXR_INSERTS:BL_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Corebo."], ["UNC_C_TXR_INSERTS:IV_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- IV - Cachebo."]], "features": {"name": "Intel BroadwellX C-Box 2 uncore", "no_events": 28, "max_encoding": 2, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_cbo3": {"events": [["UNC_C_BOUNCE_CONTROL", "TBD."], ["UNC_C_CLOCKTICKS", "Clock ticks."], ["UNC_C_COUNTER0_OCCUPANCY", "Since occupancy counts can only be captured in the Cbos 0 counter, this event allows a user to capture occupancy related information by filtering the Cb0 occupancy count captured in Counter 0. The filtering available is found in the control register - threshold, invert and edge detect.  E.g. setting threshold to 1 can effectively monitor how many cycles the monitored queue has an entry.."], ["UNC_C_FAST_ASSERTED", "Counts the number of cycles either the local distress or incoming distress signals are asserted.  Incoming distress includes both up and dn.."], ["UNC_C_LLC_LOOKUP:ANY", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Request."], ["UNC_C_LLC_LOOKUP:DATA_READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Data Read Request."], ["UNC_C_LLC_LOOKUP:NID", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Lookups that Match NID."], ["UNC_C_LLC_LOOKUP:READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Read Request."], ["UNC_C_LLC_LOOKUP:REMOTE_SNOOP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- External Snoop Request."], ["UNC_C_LLC_LOOKUP:WRITE", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Write Requests."], ["UNC_C_LLC_LOOKUP:STATE_I", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Invalid cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_S", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Shared cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_E", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Exclusive cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_M", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Modified cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_F", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Forward cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_D", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Debug cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_MP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cacheline is modified but never written, was forwarded in modified state."], ["UNC_C_LLC_LOOKUP:STATE_MESIFD", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Any cache line state."], ["UNC_C_LLC_VICTIMS:F_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in Forward state."], ["UNC_C_LLC_VICTIMS:I_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S State."], ["UNC_C_LLC_VICTIMS:S_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S state."], ["UNC_C_LLC_VICTIMS:E_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in E state."], ["UNC_C_LLC_VICTIMS:M_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in M state."], ["UNC_C_LLC_VICTIMS:MISS", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized."], ["UNC_C_LLC_VICTIMS:NID", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized -- Victimized Lines that Match NID."], ["UNC_C_MISC:CVZERO_PREFETCH_MISS", "Miscellaneous events in the Cbo.. Cbo Misc -- DRd hitting non-M with raw CV=0."], ["UNC_C_MISC:CVZERO_PREFETCH_VICTIM", "Miscellaneous events in the Cbo.. Cbo Misc -- Clean Victim with raw CV=0."], ["UNC_C_MISC:RFO_HIT_S", "Miscellaneous events in the Cbo.. Cbo Misc -- RFO HitS."], ["UNC_C_MISC:RSPI_WAS_FSE", "Miscellaneous events in the Cbo.. Cbo Misc -- Silent Snoop Eviction."], ["UNC_C_MISC:STARTED", "Miscellaneous events in the Cbo.. Cbo Misc -- ."], ["UNC_C_MISC:WC_ALIASING", "Miscellaneous events in the Cbo.. Cbo Misc -- Write Combining Aliasing."], ["UNC_C_RING_AD_USED:ALL", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- All."], ["UNC_C_RING_AD_USED:CCW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down."], ["UNC_C_RING_AD_USED:CW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up."], ["UNC_C_RING_AD_USED:DOWN_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Even."], ["UNC_C_RING_AD_USED:DOWN_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Odd."], ["UNC_C_RING_AD_USED:UP_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Even."], ["UNC_C_RING_AD_USED:UP_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Odd."], ["UNC_C_RING_AK_USED:ALL", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- All."], ["UNC_C_RING_AK_USED:CCW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down."], ["UNC_C_RING_AK_USED:CW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up."], ["UNC_C_RING_AK_USED:DOWN_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Even."], ["UNC_C_RING_AK_USED:DOWN_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Odd."], ["UNC_C_RING_AK_USED:UP_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Even."], ["UNC_C_RING_AK_USED:UP_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Odd."], ["UNC_C_RING_BL_USED:ALL", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CCW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up."], ["UNC_C_RING_BL_USED:DOWN_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Even."], ["UNC_C_RING_BL_USED:DOWN_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Odd."], ["UNC_C_RING_BL_USED:UP_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Even."], ["UNC_C_RING_BL_USED:UP_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Odd."], ["UNC_C_RING_BOUNCES:AD", "TBD. Number of LLC responses that bounced on the Ring. -- AD."], ["UNC_C_RING_BOUNCES:AK", "TBD. Number of LLC responses that bounced on the Ring. -- AK."], ["UNC_C_RING_BOUNCES:BL", "TBD. Number of LLC responses that bounced on the Ring. -- BL."], ["UNC_C_RING_BOUNCES:IV", "TBD. Number of LLC responses that bounced on the Ring. -- Snoops of processors cachee.."], ["UNC_C_RING_IV_USED:ANY", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DOWN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Down."], ["UNC_C_RING_IV_USED:UP", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_SRC_THRTL", "TBD."], ["UNC_C_RXR_EXT_STARVED:IPQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IRQ."], ["UNC_C_RXR_EXT_STARVED:IRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IPQ."], ["UNC_C_RXR_EXT_STARVED:ISMQ_BIDS", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- ISMQ_BID."], ["UNC_C_RXR_EXT_STARVED:PRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- PRQ."], ["UNC_C_RXR_INSERTS:IPQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IPQ."], ["UNC_C_RXR_INSERTS:IRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ."], ["UNC_C_RXR_INSERTS:IRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ Rejected."], ["UNC_C_RXR_INSERTS:PRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_INSERTS:PRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_IPQ_RETRY:ADDR_CONFLICT", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Address Conflict."], ["UNC_C_RXR_IPQ_RETRY:ANY", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Any Reject."], ["UNC_C_RXR_IPQ_RETRY:FULL", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No Egress Credits."], ["UNC_C_RXR_IPQ_RETRY:QPI_CREDITS", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No QPI Credits."], ["UNC_C_RXR_IPQ_RETRY2:AD_SBO", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No AD Sbo Credits."], ["UNC_C_RXR_IPQ_RETRY2:TARGET", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Target Node Filter."], ["UNC_C_RXR_IRQ_RETRY:ADDR_CONFLICT", "TBD. Ingress Request Queue Rejects -- Address Conflict."], ["UNC_C_RXR_IRQ_RETRY:ANY", "TBD. Ingress Request Queue Rejects -- Any Reject."], ["UNC_C_RXR_IRQ_RETRY:FULL", "TBD. Ingress Request Queue Rejects -- No Egress Credits."], ["UNC_C_RXR_IRQ_RETRY:IIO_CREDITS", "TBD. Ingress Request Queue Rejects -- No IIO Credits."], ["UNC_C_RXR_IRQ_RETRY:NID", "TBD. Ingress Request Queue Rejects -- ."], ["UNC_C_RXR_IRQ_RETRY:QPI_CREDITS", "TBD. Ingress Request Queue Rejects -- No QPI Credits."], ["UNC_C_RXR_IRQ_RETRY:RTID", "TBD. Ingress Request Queue Rejects -- No RTIDs."], ["UNC_C_RXR_IRQ_RETRY2:AD_SBO", "TBD. Ingress Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:BL_SBO", "TBD. Ingress Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:TARGET", "TBD. Ingress Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_ISMQ_RETRY:ANY", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- Any Reject."], ["UNC_C_RXR_ISMQ_RETRY:FULL", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No Egress Credits."], ["UNC_C_RXR_ISMQ_RETRY:IIO_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No IIO Credits."], ["UNC_C_RXR_ISMQ_RETRY:NID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY:QPI_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No QPI Credits."], ["UNC_C_RXR_ISMQ_RETRY:RTID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No RTIDs."], ["UNC_C_RXR_ISMQ_RETRY:WB_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY2:AD_SBO", "TBD. ISMQ Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:BL_SBO", "TBD. ISMQ Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:TARGET", "TBD. ISMQ Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_OCCUPANCY:IPQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IPQ."], ["UNC_C_RXR_OCCUPANCY:IRQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ."], ["UNC_C_RXR_OCCUPANCY:IRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ Rejected."], ["UNC_C_RXR_OCCUPANCY:PRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- PRQ Rejects."], ["UNC_C_SBO_CREDITS_ACQUIRED:AD", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For AD Ring."], ["UNC_C_SBO_CREDITS_ACQUIRED:BL", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For BL Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:AD", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For AD Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:BL", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For BL Ring."], ["UNC_C_TOR_INSERTS:ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. All."], ["UNC_C_TOR_INSERTS:EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_INSERTS:LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory."], ["UNC_C_TOR_INSERTS:LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory."], ["UNC_C_TOR_INSERTS:MISS_LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss Opcode Match."], ["UNC_C_TOR_INSERTS:MISS_REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory."], ["UNC_C_TOR_INSERTS:MISS_REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched."], ["UNC_C_TOR_INSERTS:NID_EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Evictions."], ["UNC_C_TOR_INSERTS:NID_MISS_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Miss All."], ["UNC_C_TOR_INSERTS:NID_MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched Miss."], ["UNC_C_TOR_INSERTS:NID_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Writebacks."], ["UNC_C_TOR_INSERTS:OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Opcode Match."], ["UNC_C_TOR_INSERTS:REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory."], ["UNC_C_TOR_INSERTS:REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Writebacks."], ["UNC_C_TOR_INSERTS:OPC_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_CRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_DRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCILF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_CODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_DATA", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIRDCUR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOI", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_ITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWRF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Any."], ["UNC_C_TOR_OCCUPANCY:EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_OCCUPANCY:LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_OCCUPANCY:MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss All."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:NID_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched eviction transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched miss transactions that were inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID and opcode matched miss transactions inserted into the TOR (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match a NID and opcode (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched write back transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of write transactions inserted into the TOR."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:OPC_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_CRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_DRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCILF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_CODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_DATA", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIRDCUR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOI", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_ITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWRF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TXR_ADS_USED:AD", "TBD. Onto AD Ring."], ["UNC_C_TXR_ADS_USED:AK", "TBD. Onto AK Ring."], ["UNC_C_TXR_ADS_USED:BL", "TBD. Onto BL Ring."], ["UNC_C_TXR_INSERTS:AD_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Cachebo."], ["UNC_C_TXR_INSERTS:AD_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Corebo."], ["UNC_C_TXR_INSERTS:AK_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Cachebo."], ["UNC_C_TXR_INSERTS:AK_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Corebo."], ["UNC_C_TXR_INSERTS:BL_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Cacheno."], ["UNC_C_TXR_INSERTS:BL_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Corebo."], ["UNC_C_TXR_INSERTS:IV_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- IV - Cachebo."]], "features": {"name": "Intel BroadwellX C-Box 3 uncore", "no_events": 28, "max_encoding": 2, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_cbo4": {"events": [["UNC_C_BOUNCE_CONTROL", "TBD."], ["UNC_C_CLOCKTICKS", "Clock ticks."], ["UNC_C_COUNTER0_OCCUPANCY", "Since occupancy counts can only be captured in the Cbos 0 counter, this event allows a user to capture occupancy related information by filtering the Cb0 occupancy count captured in Counter 0. The filtering available is found in the control register - threshold, invert and edge detect.  E.g. setting threshold to 1 can effectively monitor how many cycles the monitored queue has an entry.."], ["UNC_C_FAST_ASSERTED", "Counts the number of cycles either the local distress or incoming distress signals are asserted.  Incoming distress includes both up and dn.."], ["UNC_C_LLC_LOOKUP:ANY", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Request."], ["UNC_C_LLC_LOOKUP:DATA_READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Data Read Request."], ["UNC_C_LLC_LOOKUP:NID", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Lookups that Match NID."], ["UNC_C_LLC_LOOKUP:READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Read Request."], ["UNC_C_LLC_LOOKUP:REMOTE_SNOOP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- External Snoop Request."], ["UNC_C_LLC_LOOKUP:WRITE", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Write Requests."], ["UNC_C_LLC_LOOKUP:STATE_I", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Invalid cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_S", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Shared cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_E", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Exclusive cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_M", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Modified cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_F", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Forward cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_D", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Debug cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_MP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cacheline is modified but never written, was forwarded in modified state."], ["UNC_C_LLC_LOOKUP:STATE_MESIFD", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Any cache line state."], ["UNC_C_LLC_VICTIMS:F_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in Forward state."], ["UNC_C_LLC_VICTIMS:I_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S State."], ["UNC_C_LLC_VICTIMS:S_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S state."], ["UNC_C_LLC_VICTIMS:E_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in E state."], ["UNC_C_LLC_VICTIMS:M_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in M state."], ["UNC_C_LLC_VICTIMS:MISS", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized."], ["UNC_C_LLC_VICTIMS:NID", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized -- Victimized Lines that Match NID."], ["UNC_C_MISC:CVZERO_PREFETCH_MISS", "Miscellaneous events in the Cbo.. Cbo Misc -- DRd hitting non-M with raw CV=0."], ["UNC_C_MISC:CVZERO_PREFETCH_VICTIM", "Miscellaneous events in the Cbo.. Cbo Misc -- Clean Victim with raw CV=0."], ["UNC_C_MISC:RFO_HIT_S", "Miscellaneous events in the Cbo.. Cbo Misc -- RFO HitS."], ["UNC_C_MISC:RSPI_WAS_FSE", "Miscellaneous events in the Cbo.. Cbo Misc -- Silent Snoop Eviction."], ["UNC_C_MISC:STARTED", "Miscellaneous events in the Cbo.. Cbo Misc -- ."], ["UNC_C_MISC:WC_ALIASING", "Miscellaneous events in the Cbo.. Cbo Misc -- Write Combining Aliasing."], ["UNC_C_RING_AD_USED:ALL", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- All."], ["UNC_C_RING_AD_USED:CCW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down."], ["UNC_C_RING_AD_USED:CW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up."], ["UNC_C_RING_AD_USED:DOWN_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Even."], ["UNC_C_RING_AD_USED:DOWN_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Odd."], ["UNC_C_RING_AD_USED:UP_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Even."], ["UNC_C_RING_AD_USED:UP_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Odd."], ["UNC_C_RING_AK_USED:ALL", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- All."], ["UNC_C_RING_AK_USED:CCW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down."], ["UNC_C_RING_AK_USED:CW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up."], ["UNC_C_RING_AK_USED:DOWN_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Even."], ["UNC_C_RING_AK_USED:DOWN_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Odd."], ["UNC_C_RING_AK_USED:UP_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Even."], ["UNC_C_RING_AK_USED:UP_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Odd."], ["UNC_C_RING_BL_USED:ALL", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CCW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up."], ["UNC_C_RING_BL_USED:DOWN_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Even."], ["UNC_C_RING_BL_USED:DOWN_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Odd."], ["UNC_C_RING_BL_USED:UP_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Even."], ["UNC_C_RING_BL_USED:UP_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Odd."], ["UNC_C_RING_BOUNCES:AD", "TBD. Number of LLC responses that bounced on the Ring. -- AD."], ["UNC_C_RING_BOUNCES:AK", "TBD. Number of LLC responses that bounced on the Ring. -- AK."], ["UNC_C_RING_BOUNCES:BL", "TBD. Number of LLC responses that bounced on the Ring. -- BL."], ["UNC_C_RING_BOUNCES:IV", "TBD. Number of LLC responses that bounced on the Ring. -- Snoops of processors cachee.."], ["UNC_C_RING_IV_USED:ANY", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DOWN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Down."], ["UNC_C_RING_IV_USED:UP", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_SRC_THRTL", "TBD."], ["UNC_C_RXR_EXT_STARVED:IPQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IRQ."], ["UNC_C_RXR_EXT_STARVED:IRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IPQ."], ["UNC_C_RXR_EXT_STARVED:ISMQ_BIDS", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- ISMQ_BID."], ["UNC_C_RXR_EXT_STARVED:PRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- PRQ."], ["UNC_C_RXR_INSERTS:IPQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IPQ."], ["UNC_C_RXR_INSERTS:IRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ."], ["UNC_C_RXR_INSERTS:IRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ Rejected."], ["UNC_C_RXR_INSERTS:PRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_INSERTS:PRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_IPQ_RETRY:ADDR_CONFLICT", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Address Conflict."], ["UNC_C_RXR_IPQ_RETRY:ANY", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Any Reject."], ["UNC_C_RXR_IPQ_RETRY:FULL", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No Egress Credits."], ["UNC_C_RXR_IPQ_RETRY:QPI_CREDITS", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No QPI Credits."], ["UNC_C_RXR_IPQ_RETRY2:AD_SBO", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No AD Sbo Credits."], ["UNC_C_RXR_IPQ_RETRY2:TARGET", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Target Node Filter."], ["UNC_C_RXR_IRQ_RETRY:ADDR_CONFLICT", "TBD. Ingress Request Queue Rejects -- Address Conflict."], ["UNC_C_RXR_IRQ_RETRY:ANY", "TBD. Ingress Request Queue Rejects -- Any Reject."], ["UNC_C_RXR_IRQ_RETRY:FULL", "TBD. Ingress Request Queue Rejects -- No Egress Credits."], ["UNC_C_RXR_IRQ_RETRY:IIO_CREDITS", "TBD. Ingress Request Queue Rejects -- No IIO Credits."], ["UNC_C_RXR_IRQ_RETRY:NID", "TBD. Ingress Request Queue Rejects -- ."], ["UNC_C_RXR_IRQ_RETRY:QPI_CREDITS", "TBD. Ingress Request Queue Rejects -- No QPI Credits."], ["UNC_C_RXR_IRQ_RETRY:RTID", "TBD. Ingress Request Queue Rejects -- No RTIDs."], ["UNC_C_RXR_IRQ_RETRY2:AD_SBO", "TBD. Ingress Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:BL_SBO", "TBD. Ingress Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:TARGET", "TBD. Ingress Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_ISMQ_RETRY:ANY", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- Any Reject."], ["UNC_C_RXR_ISMQ_RETRY:FULL", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No Egress Credits."], ["UNC_C_RXR_ISMQ_RETRY:IIO_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No IIO Credits."], ["UNC_C_RXR_ISMQ_RETRY:NID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY:QPI_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No QPI Credits."], ["UNC_C_RXR_ISMQ_RETRY:RTID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No RTIDs."], ["UNC_C_RXR_ISMQ_RETRY:WB_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY2:AD_SBO", "TBD. ISMQ Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:BL_SBO", "TBD. ISMQ Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:TARGET", "TBD. ISMQ Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_OCCUPANCY:IPQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IPQ."], ["UNC_C_RXR_OCCUPANCY:IRQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ."], ["UNC_C_RXR_OCCUPANCY:IRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ Rejected."], ["UNC_C_RXR_OCCUPANCY:PRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- PRQ Rejects."], ["UNC_C_SBO_CREDITS_ACQUIRED:AD", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For AD Ring."], ["UNC_C_SBO_CREDITS_ACQUIRED:BL", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For BL Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:AD", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For AD Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:BL", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For BL Ring."], ["UNC_C_TOR_INSERTS:ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. All."], ["UNC_C_TOR_INSERTS:EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_INSERTS:LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory."], ["UNC_C_TOR_INSERTS:LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory."], ["UNC_C_TOR_INSERTS:MISS_LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss Opcode Match."], ["UNC_C_TOR_INSERTS:MISS_REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory."], ["UNC_C_TOR_INSERTS:MISS_REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched."], ["UNC_C_TOR_INSERTS:NID_EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Evictions."], ["UNC_C_TOR_INSERTS:NID_MISS_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Miss All."], ["UNC_C_TOR_INSERTS:NID_MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched Miss."], ["UNC_C_TOR_INSERTS:NID_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Writebacks."], ["UNC_C_TOR_INSERTS:OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Opcode Match."], ["UNC_C_TOR_INSERTS:REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory."], ["UNC_C_TOR_INSERTS:REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Writebacks."], ["UNC_C_TOR_INSERTS:OPC_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_CRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_DRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCILF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_CODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_DATA", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIRDCUR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOI", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_ITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWRF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Any."], ["UNC_C_TOR_OCCUPANCY:EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_OCCUPANCY:LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_OCCUPANCY:MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss All."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:NID_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched eviction transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched miss transactions that were inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID and opcode matched miss transactions inserted into the TOR (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match a NID and opcode (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched write back transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of write transactions inserted into the TOR."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:OPC_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_CRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_DRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCILF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_CODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_DATA", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIRDCUR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOI", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_ITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWRF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TXR_ADS_USED:AD", "TBD. Onto AD Ring."], ["UNC_C_TXR_ADS_USED:AK", "TBD. Onto AK Ring."], ["UNC_C_TXR_ADS_USED:BL", "TBD. Onto BL Ring."], ["UNC_C_TXR_INSERTS:AD_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Cachebo."], ["UNC_C_TXR_INSERTS:AD_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Corebo."], ["UNC_C_TXR_INSERTS:AK_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Cachebo."], ["UNC_C_TXR_INSERTS:AK_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Corebo."], ["UNC_C_TXR_INSERTS:BL_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Cacheno."], ["UNC_C_TXR_INSERTS:BL_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Corebo."], ["UNC_C_TXR_INSERTS:IV_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- IV - Cachebo."]], "features": {"name": "Intel BroadwellX C-Box 4 uncore", "no_events": 28, "max_encoding": 2, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_cbo5": {"events": [["UNC_C_BOUNCE_CONTROL", "TBD."], ["UNC_C_CLOCKTICKS", "Clock ticks."], ["UNC_C_COUNTER0_OCCUPANCY", "Since occupancy counts can only be captured in the Cbos 0 counter, this event allows a user to capture occupancy related information by filtering the Cb0 occupancy count captured in Counter 0. The filtering available is found in the control register - threshold, invert and edge detect.  E.g. setting threshold to 1 can effectively monitor how many cycles the monitored queue has an entry.."], ["UNC_C_FAST_ASSERTED", "Counts the number of cycles either the local distress or incoming distress signals are asserted.  Incoming distress includes both up and dn.."], ["UNC_C_LLC_LOOKUP:ANY", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Request."], ["UNC_C_LLC_LOOKUP:DATA_READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Data Read Request."], ["UNC_C_LLC_LOOKUP:NID", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Lookups that Match NID."], ["UNC_C_LLC_LOOKUP:READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Read Request."], ["UNC_C_LLC_LOOKUP:REMOTE_SNOOP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- External Snoop Request."], ["UNC_C_LLC_LOOKUP:WRITE", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Write Requests."], ["UNC_C_LLC_LOOKUP:STATE_I", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Invalid cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_S", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Shared cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_E", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Exclusive cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_M", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Modified cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_F", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Forward cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_D", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Debug cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_MP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cacheline is modified but never written, was forwarded in modified state."], ["UNC_C_LLC_LOOKUP:STATE_MESIFD", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Any cache line state."], ["UNC_C_LLC_VICTIMS:F_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in Forward state."], ["UNC_C_LLC_VICTIMS:I_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S State."], ["UNC_C_LLC_VICTIMS:S_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S state."], ["UNC_C_LLC_VICTIMS:E_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in E state."], ["UNC_C_LLC_VICTIMS:M_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in M state."], ["UNC_C_LLC_VICTIMS:MISS", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized."], ["UNC_C_LLC_VICTIMS:NID", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized -- Victimized Lines that Match NID."], ["UNC_C_MISC:CVZERO_PREFETCH_MISS", "Miscellaneous events in the Cbo.. Cbo Misc -- DRd hitting non-M with raw CV=0."], ["UNC_C_MISC:CVZERO_PREFETCH_VICTIM", "Miscellaneous events in the Cbo.. Cbo Misc -- Clean Victim with raw CV=0."], ["UNC_C_MISC:RFO_HIT_S", "Miscellaneous events in the Cbo.. Cbo Misc -- RFO HitS."], ["UNC_C_MISC:RSPI_WAS_FSE", "Miscellaneous events in the Cbo.. Cbo Misc -- Silent Snoop Eviction."], ["UNC_C_MISC:STARTED", "Miscellaneous events in the Cbo.. Cbo Misc -- ."], ["UNC_C_MISC:WC_ALIASING", "Miscellaneous events in the Cbo.. Cbo Misc -- Write Combining Aliasing."], ["UNC_C_RING_AD_USED:ALL", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- All."], ["UNC_C_RING_AD_USED:CCW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down."], ["UNC_C_RING_AD_USED:CW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up."], ["UNC_C_RING_AD_USED:DOWN_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Even."], ["UNC_C_RING_AD_USED:DOWN_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Odd."], ["UNC_C_RING_AD_USED:UP_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Even."], ["UNC_C_RING_AD_USED:UP_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Odd."], ["UNC_C_RING_AK_USED:ALL", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- All."], ["UNC_C_RING_AK_USED:CCW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down."], ["UNC_C_RING_AK_USED:CW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up."], ["UNC_C_RING_AK_USED:DOWN_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Even."], ["UNC_C_RING_AK_USED:DOWN_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Odd."], ["UNC_C_RING_AK_USED:UP_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Even."], ["UNC_C_RING_AK_USED:UP_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Odd."], ["UNC_C_RING_BL_USED:ALL", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CCW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up."], ["UNC_C_RING_BL_USED:DOWN_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Even."], ["UNC_C_RING_BL_USED:DOWN_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Odd."], ["UNC_C_RING_BL_USED:UP_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Even."], ["UNC_C_RING_BL_USED:UP_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Odd."], ["UNC_C_RING_BOUNCES:AD", "TBD. Number of LLC responses that bounced on the Ring. -- AD."], ["UNC_C_RING_BOUNCES:AK", "TBD. Number of LLC responses that bounced on the Ring. -- AK."], ["UNC_C_RING_BOUNCES:BL", "TBD. Number of LLC responses that bounced on the Ring. -- BL."], ["UNC_C_RING_BOUNCES:IV", "TBD. Number of LLC responses that bounced on the Ring. -- Snoops of processors cachee.."], ["UNC_C_RING_IV_USED:ANY", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DOWN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Down."], ["UNC_C_RING_IV_USED:UP", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_SRC_THRTL", "TBD."], ["UNC_C_RXR_EXT_STARVED:IPQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IRQ."], ["UNC_C_RXR_EXT_STARVED:IRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IPQ."], ["UNC_C_RXR_EXT_STARVED:ISMQ_BIDS", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- ISMQ_BID."], ["UNC_C_RXR_EXT_STARVED:PRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- PRQ."], ["UNC_C_RXR_INSERTS:IPQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IPQ."], ["UNC_C_RXR_INSERTS:IRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ."], ["UNC_C_RXR_INSERTS:IRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ Rejected."], ["UNC_C_RXR_INSERTS:PRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_INSERTS:PRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_IPQ_RETRY:ADDR_CONFLICT", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Address Conflict."], ["UNC_C_RXR_IPQ_RETRY:ANY", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Any Reject."], ["UNC_C_RXR_IPQ_RETRY:FULL", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No Egress Credits."], ["UNC_C_RXR_IPQ_RETRY:QPI_CREDITS", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No QPI Credits."], ["UNC_C_RXR_IPQ_RETRY2:AD_SBO", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No AD Sbo Credits."], ["UNC_C_RXR_IPQ_RETRY2:TARGET", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Target Node Filter."], ["UNC_C_RXR_IRQ_RETRY:ADDR_CONFLICT", "TBD. Ingress Request Queue Rejects -- Address Conflict."], ["UNC_C_RXR_IRQ_RETRY:ANY", "TBD. Ingress Request Queue Rejects -- Any Reject."], ["UNC_C_RXR_IRQ_RETRY:FULL", "TBD. Ingress Request Queue Rejects -- No Egress Credits."], ["UNC_C_RXR_IRQ_RETRY:IIO_CREDITS", "TBD. Ingress Request Queue Rejects -- No IIO Credits."], ["UNC_C_RXR_IRQ_RETRY:NID", "TBD. Ingress Request Queue Rejects -- ."], ["UNC_C_RXR_IRQ_RETRY:QPI_CREDITS", "TBD. Ingress Request Queue Rejects -- No QPI Credits."], ["UNC_C_RXR_IRQ_RETRY:RTID", "TBD. Ingress Request Queue Rejects -- No RTIDs."], ["UNC_C_RXR_IRQ_RETRY2:AD_SBO", "TBD. Ingress Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:BL_SBO", "TBD. Ingress Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:TARGET", "TBD. Ingress Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_ISMQ_RETRY:ANY", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- Any Reject."], ["UNC_C_RXR_ISMQ_RETRY:FULL", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No Egress Credits."], ["UNC_C_RXR_ISMQ_RETRY:IIO_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No IIO Credits."], ["UNC_C_RXR_ISMQ_RETRY:NID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY:QPI_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No QPI Credits."], ["UNC_C_RXR_ISMQ_RETRY:RTID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No RTIDs."], ["UNC_C_RXR_ISMQ_RETRY:WB_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY2:AD_SBO", "TBD. ISMQ Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:BL_SBO", "TBD. ISMQ Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:TARGET", "TBD. ISMQ Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_OCCUPANCY:IPQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IPQ."], ["UNC_C_RXR_OCCUPANCY:IRQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ."], ["UNC_C_RXR_OCCUPANCY:IRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ Rejected."], ["UNC_C_RXR_OCCUPANCY:PRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- PRQ Rejects."], ["UNC_C_SBO_CREDITS_ACQUIRED:AD", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For AD Ring."], ["UNC_C_SBO_CREDITS_ACQUIRED:BL", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For BL Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:AD", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For AD Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:BL", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For BL Ring."], ["UNC_C_TOR_INSERTS:ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. All."], ["UNC_C_TOR_INSERTS:EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_INSERTS:LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory."], ["UNC_C_TOR_INSERTS:LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory."], ["UNC_C_TOR_INSERTS:MISS_LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss Opcode Match."], ["UNC_C_TOR_INSERTS:MISS_REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory."], ["UNC_C_TOR_INSERTS:MISS_REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched."], ["UNC_C_TOR_INSERTS:NID_EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Evictions."], ["UNC_C_TOR_INSERTS:NID_MISS_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Miss All."], ["UNC_C_TOR_INSERTS:NID_MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched Miss."], ["UNC_C_TOR_INSERTS:NID_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Writebacks."], ["UNC_C_TOR_INSERTS:OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Opcode Match."], ["UNC_C_TOR_INSERTS:REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory."], ["UNC_C_TOR_INSERTS:REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Writebacks."], ["UNC_C_TOR_INSERTS:OPC_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_CRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_DRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCILF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_CODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_DATA", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIRDCUR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOI", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_ITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWRF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Any."], ["UNC_C_TOR_OCCUPANCY:EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_OCCUPANCY:LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_OCCUPANCY:MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss All."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:NID_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched eviction transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched miss transactions that were inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID and opcode matched miss transactions inserted into the TOR (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match a NID and opcode (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched write back transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of write transactions inserted into the TOR."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:OPC_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_CRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_DRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCILF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_CODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_DATA", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIRDCUR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOI", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_ITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWRF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TXR_ADS_USED:AD", "TBD. Onto AD Ring."], ["UNC_C_TXR_ADS_USED:AK", "TBD. Onto AK Ring."], ["UNC_C_TXR_ADS_USED:BL", "TBD. Onto BL Ring."], ["UNC_C_TXR_INSERTS:AD_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Cachebo."], ["UNC_C_TXR_INSERTS:AD_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Corebo."], ["UNC_C_TXR_INSERTS:AK_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Cachebo."], ["UNC_C_TXR_INSERTS:AK_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Corebo."], ["UNC_C_TXR_INSERTS:BL_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Cacheno."], ["UNC_C_TXR_INSERTS:BL_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Corebo."], ["UNC_C_TXR_INSERTS:IV_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- IV - Cachebo."]], "features": {"name": "Intel BroadwellX C-Box 5 uncore", "no_events": 28, "max_encoding": 2, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_cbo6": {"events": [["UNC_C_BOUNCE_CONTROL", "TBD."], ["UNC_C_CLOCKTICKS", "Clock ticks."], ["UNC_C_COUNTER0_OCCUPANCY", "Since occupancy counts can only be captured in the Cbos 0 counter, this event allows a user to capture occupancy related information by filtering the Cb0 occupancy count captured in Counter 0. The filtering available is found in the control register - threshold, invert and edge detect.  E.g. setting threshold to 1 can effectively monitor how many cycles the monitored queue has an entry.."], ["UNC_C_FAST_ASSERTED", "Counts the number of cycles either the local distress or incoming distress signals are asserted.  Incoming distress includes both up and dn.."], ["UNC_C_LLC_LOOKUP:ANY", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Request."], ["UNC_C_LLC_LOOKUP:DATA_READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Data Read Request."], ["UNC_C_LLC_LOOKUP:NID", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Lookups that Match NID."], ["UNC_C_LLC_LOOKUP:READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Read Request."], ["UNC_C_LLC_LOOKUP:REMOTE_SNOOP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- External Snoop Request."], ["UNC_C_LLC_LOOKUP:WRITE", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Write Requests."], ["UNC_C_LLC_LOOKUP:STATE_I", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Invalid cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_S", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Shared cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_E", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Exclusive cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_M", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Modified cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_F", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Forward cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_D", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Debug cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_MP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cacheline is modified but never written, was forwarded in modified state."], ["UNC_C_LLC_LOOKUP:STATE_MESIFD", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Any cache line state."], ["UNC_C_LLC_VICTIMS:F_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in Forward state."], ["UNC_C_LLC_VICTIMS:I_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S State."], ["UNC_C_LLC_VICTIMS:S_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S state."], ["UNC_C_LLC_VICTIMS:E_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in E state."], ["UNC_C_LLC_VICTIMS:M_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in M state."], ["UNC_C_LLC_VICTIMS:MISS", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized."], ["UNC_C_LLC_VICTIMS:NID", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized -- Victimized Lines that Match NID."], ["UNC_C_MISC:CVZERO_PREFETCH_MISS", "Miscellaneous events in the Cbo.. Cbo Misc -- DRd hitting non-M with raw CV=0."], ["UNC_C_MISC:CVZERO_PREFETCH_VICTIM", "Miscellaneous events in the Cbo.. Cbo Misc -- Clean Victim with raw CV=0."], ["UNC_C_MISC:RFO_HIT_S", "Miscellaneous events in the Cbo.. Cbo Misc -- RFO HitS."], ["UNC_C_MISC:RSPI_WAS_FSE", "Miscellaneous events in the Cbo.. Cbo Misc -- Silent Snoop Eviction."], ["UNC_C_MISC:STARTED", "Miscellaneous events in the Cbo.. Cbo Misc -- ."], ["UNC_C_MISC:WC_ALIASING", "Miscellaneous events in the Cbo.. Cbo Misc -- Write Combining Aliasing."], ["UNC_C_RING_AD_USED:ALL", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- All."], ["UNC_C_RING_AD_USED:CCW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down."], ["UNC_C_RING_AD_USED:CW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up."], ["UNC_C_RING_AD_USED:DOWN_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Even."], ["UNC_C_RING_AD_USED:DOWN_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Odd."], ["UNC_C_RING_AD_USED:UP_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Even."], ["UNC_C_RING_AD_USED:UP_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Odd."], ["UNC_C_RING_AK_USED:ALL", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- All."], ["UNC_C_RING_AK_USED:CCW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down."], ["UNC_C_RING_AK_USED:CW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up."], ["UNC_C_RING_AK_USED:DOWN_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Even."], ["UNC_C_RING_AK_USED:DOWN_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Odd."], ["UNC_C_RING_AK_USED:UP_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Even."], ["UNC_C_RING_AK_USED:UP_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Odd."], ["UNC_C_RING_BL_USED:ALL", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CCW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up."], ["UNC_C_RING_BL_USED:DOWN_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Even."], ["UNC_C_RING_BL_USED:DOWN_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Odd."], ["UNC_C_RING_BL_USED:UP_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Even."], ["UNC_C_RING_BL_USED:UP_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Odd."], ["UNC_C_RING_BOUNCES:AD", "TBD. Number of LLC responses that bounced on the Ring. -- AD."], ["UNC_C_RING_BOUNCES:AK", "TBD. Number of LLC responses that bounced on the Ring. -- AK."], ["UNC_C_RING_BOUNCES:BL", "TBD. Number of LLC responses that bounced on the Ring. -- BL."], ["UNC_C_RING_BOUNCES:IV", "TBD. Number of LLC responses that bounced on the Ring. -- Snoops of processors cachee.."], ["UNC_C_RING_IV_USED:ANY", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DOWN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Down."], ["UNC_C_RING_IV_USED:UP", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_SRC_THRTL", "TBD."], ["UNC_C_RXR_EXT_STARVED:IPQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IRQ."], ["UNC_C_RXR_EXT_STARVED:IRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IPQ."], ["UNC_C_RXR_EXT_STARVED:ISMQ_BIDS", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- ISMQ_BID."], ["UNC_C_RXR_EXT_STARVED:PRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- PRQ."], ["UNC_C_RXR_INSERTS:IPQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IPQ."], ["UNC_C_RXR_INSERTS:IRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ."], ["UNC_C_RXR_INSERTS:IRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ Rejected."], ["UNC_C_RXR_INSERTS:PRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_INSERTS:PRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_IPQ_RETRY:ADDR_CONFLICT", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Address Conflict."], ["UNC_C_RXR_IPQ_RETRY:ANY", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Any Reject."], ["UNC_C_RXR_IPQ_RETRY:FULL", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No Egress Credits."], ["UNC_C_RXR_IPQ_RETRY:QPI_CREDITS", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No QPI Credits."], ["UNC_C_RXR_IPQ_RETRY2:AD_SBO", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No AD Sbo Credits."], ["UNC_C_RXR_IPQ_RETRY2:TARGET", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Target Node Filter."], ["UNC_C_RXR_IRQ_RETRY:ADDR_CONFLICT", "TBD. Ingress Request Queue Rejects -- Address Conflict."], ["UNC_C_RXR_IRQ_RETRY:ANY", "TBD. Ingress Request Queue Rejects -- Any Reject."], ["UNC_C_RXR_IRQ_RETRY:FULL", "TBD. Ingress Request Queue Rejects -- No Egress Credits."], ["UNC_C_RXR_IRQ_RETRY:IIO_CREDITS", "TBD. Ingress Request Queue Rejects -- No IIO Credits."], ["UNC_C_RXR_IRQ_RETRY:NID", "TBD. Ingress Request Queue Rejects -- ."], ["UNC_C_RXR_IRQ_RETRY:QPI_CREDITS", "TBD. Ingress Request Queue Rejects -- No QPI Credits."], ["UNC_C_RXR_IRQ_RETRY:RTID", "TBD. Ingress Request Queue Rejects -- No RTIDs."], ["UNC_C_RXR_IRQ_RETRY2:AD_SBO", "TBD. Ingress Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:BL_SBO", "TBD. Ingress Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:TARGET", "TBD. Ingress Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_ISMQ_RETRY:ANY", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- Any Reject."], ["UNC_C_RXR_ISMQ_RETRY:FULL", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No Egress Credits."], ["UNC_C_RXR_ISMQ_RETRY:IIO_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No IIO Credits."], ["UNC_C_RXR_ISMQ_RETRY:NID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY:QPI_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No QPI Credits."], ["UNC_C_RXR_ISMQ_RETRY:RTID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No RTIDs."], ["UNC_C_RXR_ISMQ_RETRY:WB_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY2:AD_SBO", "TBD. ISMQ Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:BL_SBO", "TBD. ISMQ Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:TARGET", "TBD. ISMQ Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_OCCUPANCY:IPQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IPQ."], ["UNC_C_RXR_OCCUPANCY:IRQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ."], ["UNC_C_RXR_OCCUPANCY:IRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ Rejected."], ["UNC_C_RXR_OCCUPANCY:PRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- PRQ Rejects."], ["UNC_C_SBO_CREDITS_ACQUIRED:AD", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For AD Ring."], ["UNC_C_SBO_CREDITS_ACQUIRED:BL", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For BL Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:AD", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For AD Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:BL", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For BL Ring."], ["UNC_C_TOR_INSERTS:ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. All."], ["UNC_C_TOR_INSERTS:EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_INSERTS:LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory."], ["UNC_C_TOR_INSERTS:LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory."], ["UNC_C_TOR_INSERTS:MISS_LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss Opcode Match."], ["UNC_C_TOR_INSERTS:MISS_REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory."], ["UNC_C_TOR_INSERTS:MISS_REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched."], ["UNC_C_TOR_INSERTS:NID_EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Evictions."], ["UNC_C_TOR_INSERTS:NID_MISS_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Miss All."], ["UNC_C_TOR_INSERTS:NID_MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched Miss."], ["UNC_C_TOR_INSERTS:NID_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Writebacks."], ["UNC_C_TOR_INSERTS:OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Opcode Match."], ["UNC_C_TOR_INSERTS:REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory."], ["UNC_C_TOR_INSERTS:REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Writebacks."], ["UNC_C_TOR_INSERTS:OPC_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_CRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_DRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCILF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_CODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_DATA", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIRDCUR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOI", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_ITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWRF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Any."], ["UNC_C_TOR_OCCUPANCY:EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_OCCUPANCY:LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_OCCUPANCY:MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss All."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:NID_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched eviction transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched miss transactions that were inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID and opcode matched miss transactions inserted into the TOR (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match a NID and opcode (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched write back transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of write transactions inserted into the TOR."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:OPC_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_CRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_DRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCILF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_CODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_DATA", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIRDCUR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOI", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_ITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWRF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TXR_ADS_USED:AD", "TBD. Onto AD Ring."], ["UNC_C_TXR_ADS_USED:AK", "TBD. Onto AK Ring."], ["UNC_C_TXR_ADS_USED:BL", "TBD. Onto BL Ring."], ["UNC_C_TXR_INSERTS:AD_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Cachebo."], ["UNC_C_TXR_INSERTS:AD_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Corebo."], ["UNC_C_TXR_INSERTS:AK_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Cachebo."], ["UNC_C_TXR_INSERTS:AK_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Corebo."], ["UNC_C_TXR_INSERTS:BL_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Cacheno."], ["UNC_C_TXR_INSERTS:BL_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Corebo."], ["UNC_C_TXR_INSERTS:IV_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- IV - Cachebo."]], "features": {"name": "Intel BroadwellX C-Box 6 uncore", "no_events": 28, "max_encoding": 2, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_cbo7": {"events": [["UNC_C_BOUNCE_CONTROL", "TBD."], ["UNC_C_CLOCKTICKS", "Clock ticks."], ["UNC_C_COUNTER0_OCCUPANCY", "Since occupancy counts can only be captured in the Cbos 0 counter, this event allows a user to capture occupancy related information by filtering the Cb0 occupancy count captured in Counter 0. The filtering available is found in the control register - threshold, invert and edge detect.  E.g. setting threshold to 1 can effectively monitor how many cycles the monitored queue has an entry.."], ["UNC_C_FAST_ASSERTED", "Counts the number of cycles either the local distress or incoming distress signals are asserted.  Incoming distress includes both up and dn.."], ["UNC_C_LLC_LOOKUP:ANY", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Request."], ["UNC_C_LLC_LOOKUP:DATA_READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Data Read Request."], ["UNC_C_LLC_LOOKUP:NID", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Lookups that Match NID."], ["UNC_C_LLC_LOOKUP:READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Read Request."], ["UNC_C_LLC_LOOKUP:REMOTE_SNOOP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- External Snoop Request."], ["UNC_C_LLC_LOOKUP:WRITE", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Write Requests."], ["UNC_C_LLC_LOOKUP:STATE_I", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Invalid cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_S", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Shared cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_E", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Exclusive cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_M", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Modified cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_F", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Forward cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_D", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Debug cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_MP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cacheline is modified but never written, was forwarded in modified state."], ["UNC_C_LLC_LOOKUP:STATE_MESIFD", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Any cache line state."], ["UNC_C_LLC_VICTIMS:F_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in Forward state."], ["UNC_C_LLC_VICTIMS:I_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S State."], ["UNC_C_LLC_VICTIMS:S_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S state."], ["UNC_C_LLC_VICTIMS:E_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in E state."], ["UNC_C_LLC_VICTIMS:M_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in M state."], ["UNC_C_LLC_VICTIMS:MISS", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized."], ["UNC_C_LLC_VICTIMS:NID", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized -- Victimized Lines that Match NID."], ["UNC_C_MISC:CVZERO_PREFETCH_MISS", "Miscellaneous events in the Cbo.. Cbo Misc -- DRd hitting non-M with raw CV=0."], ["UNC_C_MISC:CVZERO_PREFETCH_VICTIM", "Miscellaneous events in the Cbo.. Cbo Misc -- Clean Victim with raw CV=0."], ["UNC_C_MISC:RFO_HIT_S", "Miscellaneous events in the Cbo.. Cbo Misc -- RFO HitS."], ["UNC_C_MISC:RSPI_WAS_FSE", "Miscellaneous events in the Cbo.. Cbo Misc -- Silent Snoop Eviction."], ["UNC_C_MISC:STARTED", "Miscellaneous events in the Cbo.. Cbo Misc -- ."], ["UNC_C_MISC:WC_ALIASING", "Miscellaneous events in the Cbo.. Cbo Misc -- Write Combining Aliasing."], ["UNC_C_RING_AD_USED:ALL", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- All."], ["UNC_C_RING_AD_USED:CCW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down."], ["UNC_C_RING_AD_USED:CW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up."], ["UNC_C_RING_AD_USED:DOWN_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Even."], ["UNC_C_RING_AD_USED:DOWN_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Odd."], ["UNC_C_RING_AD_USED:UP_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Even."], ["UNC_C_RING_AD_USED:UP_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Odd."], ["UNC_C_RING_AK_USED:ALL", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- All."], ["UNC_C_RING_AK_USED:CCW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down."], ["UNC_C_RING_AK_USED:CW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up."], ["UNC_C_RING_AK_USED:DOWN_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Even."], ["UNC_C_RING_AK_USED:DOWN_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Odd."], ["UNC_C_RING_AK_USED:UP_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Even."], ["UNC_C_RING_AK_USED:UP_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Odd."], ["UNC_C_RING_BL_USED:ALL", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CCW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up."], ["UNC_C_RING_BL_USED:DOWN_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Even."], ["UNC_C_RING_BL_USED:DOWN_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Odd."], ["UNC_C_RING_BL_USED:UP_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Even."], ["UNC_C_RING_BL_USED:UP_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Odd."], ["UNC_C_RING_BOUNCES:AD", "TBD. Number of LLC responses that bounced on the Ring. -- AD."], ["UNC_C_RING_BOUNCES:AK", "TBD. Number of LLC responses that bounced on the Ring. -- AK."], ["UNC_C_RING_BOUNCES:BL", "TBD. Number of LLC responses that bounced on the Ring. -- BL."], ["UNC_C_RING_BOUNCES:IV", "TBD. Number of LLC responses that bounced on the Ring. -- Snoops of processors cachee.."], ["UNC_C_RING_IV_USED:ANY", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DOWN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Down."], ["UNC_C_RING_IV_USED:UP", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_SRC_THRTL", "TBD."], ["UNC_C_RXR_EXT_STARVED:IPQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IRQ."], ["UNC_C_RXR_EXT_STARVED:IRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IPQ."], ["UNC_C_RXR_EXT_STARVED:ISMQ_BIDS", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- ISMQ_BID."], ["UNC_C_RXR_EXT_STARVED:PRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- PRQ."], ["UNC_C_RXR_INSERTS:IPQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IPQ."], ["UNC_C_RXR_INSERTS:IRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ."], ["UNC_C_RXR_INSERTS:IRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ Rejected."], ["UNC_C_RXR_INSERTS:PRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_INSERTS:PRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_IPQ_RETRY:ADDR_CONFLICT", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Address Conflict."], ["UNC_C_RXR_IPQ_RETRY:ANY", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Any Reject."], ["UNC_C_RXR_IPQ_RETRY:FULL", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No Egress Credits."], ["UNC_C_RXR_IPQ_RETRY:QPI_CREDITS", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No QPI Credits."], ["UNC_C_RXR_IPQ_RETRY2:AD_SBO", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No AD Sbo Credits."], ["UNC_C_RXR_IPQ_RETRY2:TARGET", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Target Node Filter."], ["UNC_C_RXR_IRQ_RETRY:ADDR_CONFLICT", "TBD. Ingress Request Queue Rejects -- Address Conflict."], ["UNC_C_RXR_IRQ_RETRY:ANY", "TBD. Ingress Request Queue Rejects -- Any Reject."], ["UNC_C_RXR_IRQ_RETRY:FULL", "TBD. Ingress Request Queue Rejects -- No Egress Credits."], ["UNC_C_RXR_IRQ_RETRY:IIO_CREDITS", "TBD. Ingress Request Queue Rejects -- No IIO Credits."], ["UNC_C_RXR_IRQ_RETRY:NID", "TBD. Ingress Request Queue Rejects -- ."], ["UNC_C_RXR_IRQ_RETRY:QPI_CREDITS", "TBD. Ingress Request Queue Rejects -- No QPI Credits."], ["UNC_C_RXR_IRQ_RETRY:RTID", "TBD. Ingress Request Queue Rejects -- No RTIDs."], ["UNC_C_RXR_IRQ_RETRY2:AD_SBO", "TBD. Ingress Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:BL_SBO", "TBD. Ingress Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:TARGET", "TBD. Ingress Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_ISMQ_RETRY:ANY", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- Any Reject."], ["UNC_C_RXR_ISMQ_RETRY:FULL", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No Egress Credits."], ["UNC_C_RXR_ISMQ_RETRY:IIO_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No IIO Credits."], ["UNC_C_RXR_ISMQ_RETRY:NID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY:QPI_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No QPI Credits."], ["UNC_C_RXR_ISMQ_RETRY:RTID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No RTIDs."], ["UNC_C_RXR_ISMQ_RETRY:WB_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY2:AD_SBO", "TBD. ISMQ Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:BL_SBO", "TBD. ISMQ Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:TARGET", "TBD. ISMQ Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_OCCUPANCY:IPQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IPQ."], ["UNC_C_RXR_OCCUPANCY:IRQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ."], ["UNC_C_RXR_OCCUPANCY:IRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ Rejected."], ["UNC_C_RXR_OCCUPANCY:PRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- PRQ Rejects."], ["UNC_C_SBO_CREDITS_ACQUIRED:AD", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For AD Ring."], ["UNC_C_SBO_CREDITS_ACQUIRED:BL", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For BL Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:AD", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For AD Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:BL", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For BL Ring."], ["UNC_C_TOR_INSERTS:ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. All."], ["UNC_C_TOR_INSERTS:EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_INSERTS:LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory."], ["UNC_C_TOR_INSERTS:LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory."], ["UNC_C_TOR_INSERTS:MISS_LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss Opcode Match."], ["UNC_C_TOR_INSERTS:MISS_REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory."], ["UNC_C_TOR_INSERTS:MISS_REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched."], ["UNC_C_TOR_INSERTS:NID_EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Evictions."], ["UNC_C_TOR_INSERTS:NID_MISS_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Miss All."], ["UNC_C_TOR_INSERTS:NID_MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched Miss."], ["UNC_C_TOR_INSERTS:NID_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Writebacks."], ["UNC_C_TOR_INSERTS:OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Opcode Match."], ["UNC_C_TOR_INSERTS:REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory."], ["UNC_C_TOR_INSERTS:REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Writebacks."], ["UNC_C_TOR_INSERTS:OPC_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_CRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_DRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCILF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_CODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_DATA", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIRDCUR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOI", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_ITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWRF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Any."], ["UNC_C_TOR_OCCUPANCY:EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_OCCUPANCY:LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_OCCUPANCY:MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss All."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:NID_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched eviction transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched miss transactions that were inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID and opcode matched miss transactions inserted into the TOR (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match a NID and opcode (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched write back transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of write transactions inserted into the TOR."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:OPC_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_CRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_DRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCILF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_CODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_DATA", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIRDCUR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOI", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_ITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWRF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TXR_ADS_USED:AD", "TBD. Onto AD Ring."], ["UNC_C_TXR_ADS_USED:AK", "TBD. Onto AK Ring."], ["UNC_C_TXR_ADS_USED:BL", "TBD. Onto BL Ring."], ["UNC_C_TXR_INSERTS:AD_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Cachebo."], ["UNC_C_TXR_INSERTS:AD_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Corebo."], ["UNC_C_TXR_INSERTS:AK_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Cachebo."], ["UNC_C_TXR_INSERTS:AK_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Corebo."], ["UNC_C_TXR_INSERTS:BL_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Cacheno."], ["UNC_C_TXR_INSERTS:BL_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Corebo."], ["UNC_C_TXR_INSERTS:IV_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- IV - Cachebo."]], "features": {"name": "Intel BroadwellX C-Box 7 uncore", "no_events": 28, "max_encoding": 2, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_cbo8": {"events": [["UNC_C_BOUNCE_CONTROL", "TBD."], ["UNC_C_CLOCKTICKS", "Clock ticks."], ["UNC_C_COUNTER0_OCCUPANCY", "Since occupancy counts can only be captured in the Cbos 0 counter, this event allows a user to capture occupancy related information by filtering the Cb0 occupancy count captured in Counter 0. The filtering available is found in the control register - threshold, invert and edge detect.  E.g. setting threshold to 1 can effectively monitor how many cycles the monitored queue has an entry.."], ["UNC_C_FAST_ASSERTED", "Counts the number of cycles either the local distress or incoming distress signals are asserted.  Incoming distress includes both up and dn.."], ["UNC_C_LLC_LOOKUP:ANY", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Request."], ["UNC_C_LLC_LOOKUP:DATA_READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Data Read Request."], ["UNC_C_LLC_LOOKUP:NID", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Lookups that Match NID."], ["UNC_C_LLC_LOOKUP:READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Read Request."], ["UNC_C_LLC_LOOKUP:REMOTE_SNOOP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- External Snoop Request."], ["UNC_C_LLC_LOOKUP:WRITE", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Write Requests."], ["UNC_C_LLC_LOOKUP:STATE_I", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Invalid cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_S", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Shared cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_E", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Exclusive cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_M", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Modified cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_F", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Forward cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_D", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Debug cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_MP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cacheline is modified but never written, was forwarded in modified state."], ["UNC_C_LLC_LOOKUP:STATE_MESIFD", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Any cache line state."], ["UNC_C_LLC_VICTIMS:F_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in Forward state."], ["UNC_C_LLC_VICTIMS:I_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S State."], ["UNC_C_LLC_VICTIMS:S_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S state."], ["UNC_C_LLC_VICTIMS:E_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in E state."], ["UNC_C_LLC_VICTIMS:M_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in M state."], ["UNC_C_LLC_VICTIMS:MISS", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized."], ["UNC_C_LLC_VICTIMS:NID", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized -- Victimized Lines that Match NID."], ["UNC_C_MISC:CVZERO_PREFETCH_MISS", "Miscellaneous events in the Cbo.. Cbo Misc -- DRd hitting non-M with raw CV=0."], ["UNC_C_MISC:CVZERO_PREFETCH_VICTIM", "Miscellaneous events in the Cbo.. Cbo Misc -- Clean Victim with raw CV=0."], ["UNC_C_MISC:RFO_HIT_S", "Miscellaneous events in the Cbo.. Cbo Misc -- RFO HitS."], ["UNC_C_MISC:RSPI_WAS_FSE", "Miscellaneous events in the Cbo.. Cbo Misc -- Silent Snoop Eviction."], ["UNC_C_MISC:STARTED", "Miscellaneous events in the Cbo.. Cbo Misc -- ."], ["UNC_C_MISC:WC_ALIASING", "Miscellaneous events in the Cbo.. Cbo Misc -- Write Combining Aliasing."], ["UNC_C_RING_AD_USED:ALL", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- All."], ["UNC_C_RING_AD_USED:CCW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down."], ["UNC_C_RING_AD_USED:CW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up."], ["UNC_C_RING_AD_USED:DOWN_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Even."], ["UNC_C_RING_AD_USED:DOWN_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Odd."], ["UNC_C_RING_AD_USED:UP_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Even."], ["UNC_C_RING_AD_USED:UP_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Odd."], ["UNC_C_RING_AK_USED:ALL", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- All."], ["UNC_C_RING_AK_USED:CCW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down."], ["UNC_C_RING_AK_USED:CW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up."], ["UNC_C_RING_AK_USED:DOWN_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Even."], ["UNC_C_RING_AK_USED:DOWN_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Odd."], ["UNC_C_RING_AK_USED:UP_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Even."], ["UNC_C_RING_AK_USED:UP_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Odd."], ["UNC_C_RING_BL_USED:ALL", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CCW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up."], ["UNC_C_RING_BL_USED:DOWN_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Even."], ["UNC_C_RING_BL_USED:DOWN_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Odd."], ["UNC_C_RING_BL_USED:UP_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Even."], ["UNC_C_RING_BL_USED:UP_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Odd."], ["UNC_C_RING_BOUNCES:AD", "TBD. Number of LLC responses that bounced on the Ring. -- AD."], ["UNC_C_RING_BOUNCES:AK", "TBD. Number of LLC responses that bounced on the Ring. -- AK."], ["UNC_C_RING_BOUNCES:BL", "TBD. Number of LLC responses that bounced on the Ring. -- BL."], ["UNC_C_RING_BOUNCES:IV", "TBD. Number of LLC responses that bounced on the Ring. -- Snoops of processors cachee.."], ["UNC_C_RING_IV_USED:ANY", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DOWN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Down."], ["UNC_C_RING_IV_USED:UP", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_SRC_THRTL", "TBD."], ["UNC_C_RXR_EXT_STARVED:IPQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IRQ."], ["UNC_C_RXR_EXT_STARVED:IRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IPQ."], ["UNC_C_RXR_EXT_STARVED:ISMQ_BIDS", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- ISMQ_BID."], ["UNC_C_RXR_EXT_STARVED:PRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- PRQ."], ["UNC_C_RXR_INSERTS:IPQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IPQ."], ["UNC_C_RXR_INSERTS:IRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ."], ["UNC_C_RXR_INSERTS:IRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ Rejected."], ["UNC_C_RXR_INSERTS:PRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_INSERTS:PRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_IPQ_RETRY:ADDR_CONFLICT", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Address Conflict."], ["UNC_C_RXR_IPQ_RETRY:ANY", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Any Reject."], ["UNC_C_RXR_IPQ_RETRY:FULL", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No Egress Credits."], ["UNC_C_RXR_IPQ_RETRY:QPI_CREDITS", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No QPI Credits."], ["UNC_C_RXR_IPQ_RETRY2:AD_SBO", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No AD Sbo Credits."], ["UNC_C_RXR_IPQ_RETRY2:TARGET", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Target Node Filter."], ["UNC_C_RXR_IRQ_RETRY:ADDR_CONFLICT", "TBD. Ingress Request Queue Rejects -- Address Conflict."], ["UNC_C_RXR_IRQ_RETRY:ANY", "TBD. Ingress Request Queue Rejects -- Any Reject."], ["UNC_C_RXR_IRQ_RETRY:FULL", "TBD. Ingress Request Queue Rejects -- No Egress Credits."], ["UNC_C_RXR_IRQ_RETRY:IIO_CREDITS", "TBD. Ingress Request Queue Rejects -- No IIO Credits."], ["UNC_C_RXR_IRQ_RETRY:NID", "TBD. Ingress Request Queue Rejects -- ."], ["UNC_C_RXR_IRQ_RETRY:QPI_CREDITS", "TBD. Ingress Request Queue Rejects -- No QPI Credits."], ["UNC_C_RXR_IRQ_RETRY:RTID", "TBD. Ingress Request Queue Rejects -- No RTIDs."], ["UNC_C_RXR_IRQ_RETRY2:AD_SBO", "TBD. Ingress Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:BL_SBO", "TBD. Ingress Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:TARGET", "TBD. Ingress Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_ISMQ_RETRY:ANY", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- Any Reject."], ["UNC_C_RXR_ISMQ_RETRY:FULL", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No Egress Credits."], ["UNC_C_RXR_ISMQ_RETRY:IIO_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No IIO Credits."], ["UNC_C_RXR_ISMQ_RETRY:NID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY:QPI_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No QPI Credits."], ["UNC_C_RXR_ISMQ_RETRY:RTID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No RTIDs."], ["UNC_C_RXR_ISMQ_RETRY:WB_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY2:AD_SBO", "TBD. ISMQ Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:BL_SBO", "TBD. ISMQ Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:TARGET", "TBD. ISMQ Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_OCCUPANCY:IPQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IPQ."], ["UNC_C_RXR_OCCUPANCY:IRQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ."], ["UNC_C_RXR_OCCUPANCY:IRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ Rejected."], ["UNC_C_RXR_OCCUPANCY:PRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- PRQ Rejects."], ["UNC_C_SBO_CREDITS_ACQUIRED:AD", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For AD Ring."], ["UNC_C_SBO_CREDITS_ACQUIRED:BL", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For BL Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:AD", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For AD Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:BL", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For BL Ring."], ["UNC_C_TOR_INSERTS:ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. All."], ["UNC_C_TOR_INSERTS:EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_INSERTS:LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory."], ["UNC_C_TOR_INSERTS:LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory."], ["UNC_C_TOR_INSERTS:MISS_LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss Opcode Match."], ["UNC_C_TOR_INSERTS:MISS_REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory."], ["UNC_C_TOR_INSERTS:MISS_REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched."], ["UNC_C_TOR_INSERTS:NID_EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Evictions."], ["UNC_C_TOR_INSERTS:NID_MISS_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Miss All."], ["UNC_C_TOR_INSERTS:NID_MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched Miss."], ["UNC_C_TOR_INSERTS:NID_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Writebacks."], ["UNC_C_TOR_INSERTS:OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Opcode Match."], ["UNC_C_TOR_INSERTS:REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory."], ["UNC_C_TOR_INSERTS:REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Writebacks."], ["UNC_C_TOR_INSERTS:OPC_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_CRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_DRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCILF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_CODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_DATA", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIRDCUR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOI", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_ITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWRF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Any."], ["UNC_C_TOR_OCCUPANCY:EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_OCCUPANCY:LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_OCCUPANCY:MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss All."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:NID_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched eviction transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched miss transactions that were inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID and opcode matched miss transactions inserted into the TOR (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match a NID and opcode (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched write back transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of write transactions inserted into the TOR."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:OPC_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_CRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_DRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCILF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_CODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_DATA", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIRDCUR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOI", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_ITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWRF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TXR_ADS_USED:AD", "TBD. Onto AD Ring."], ["UNC_C_TXR_ADS_USED:AK", "TBD. Onto AK Ring."], ["UNC_C_TXR_ADS_USED:BL", "TBD. Onto BL Ring."], ["UNC_C_TXR_INSERTS:AD_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Cachebo."], ["UNC_C_TXR_INSERTS:AD_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Corebo."], ["UNC_C_TXR_INSERTS:AK_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Cachebo."], ["UNC_C_TXR_INSERTS:AK_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Corebo."], ["UNC_C_TXR_INSERTS:BL_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Cacheno."], ["UNC_C_TXR_INSERTS:BL_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Corebo."], ["UNC_C_TXR_INSERTS:IV_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- IV - Cachebo."]], "features": {"name": "Intel BroadwellX C-Box 8 uncore", "no_events": 28, "max_encoding": 2, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_cbo9": {"events": [["UNC_C_BOUNCE_CONTROL", "TBD."], ["UNC_C_CLOCKTICKS", "Clock ticks."], ["UNC_C_COUNTER0_OCCUPANCY", "Since occupancy counts can only be captured in the Cbos 0 counter, this event allows a user to capture occupancy related information by filtering the Cb0 occupancy count captured in Counter 0. The filtering available is found in the control register - threshold, invert and edge detect.  E.g. setting threshold to 1 can effectively monitor how many cycles the monitored queue has an entry.."], ["UNC_C_FAST_ASSERTED", "Counts the number of cycles either the local distress or incoming distress signals are asserted.  Incoming distress includes both up and dn.."], ["UNC_C_LLC_LOOKUP:ANY", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Request."], ["UNC_C_LLC_LOOKUP:DATA_READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Data Read Request."], ["UNC_C_LLC_LOOKUP:NID", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Lookups that Match NID."], ["UNC_C_LLC_LOOKUP:READ", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Any Read Request."], ["UNC_C_LLC_LOOKUP:REMOTE_SNOOP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- External Snoop Request."], ["UNC_C_LLC_LOOKUP:WRITE", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cache Lookups -- Write Requests."], ["UNC_C_LLC_LOOKUP:STATE_I", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Invalid cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_S", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Shared cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_E", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Exclusive cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_M", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Modified cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_F", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Forward cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_D", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Debug cacheline state."], ["UNC_C_LLC_LOOKUP:STATE_MP", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Cacheline is modified but never written, was forwarded in modified state."], ["UNC_C_LLC_LOOKUP:STATE_MESIFD", "Counts the number of times the LLC was accessed - this includes code, data, prefetches and hints coming from L2.  This has numerous filters available.  Note the non-standard filtering equation.  This event will count requests that lookup the cache multiple times with multiple increments.  One must ALWAYS set umask bit 0 and select a state or states to match.  Otherwise, the event will count nothing.  CBoGlCtrl[22:18] bits correspond to [FMESI] state.. Any cache line state."], ["UNC_C_LLC_VICTIMS:F_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in Forward state."], ["UNC_C_LLC_VICTIMS:I_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S State."], ["UNC_C_LLC_VICTIMS:S_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in S state."], ["UNC_C_LLC_VICTIMS:E_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in E state."], ["UNC_C_LLC_VICTIMS:M_STATE", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines in M state."], ["UNC_C_LLC_VICTIMS:MISS", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized."], ["UNC_C_LLC_VICTIMS:NID", "Counts the number of lines that were victimized on a fill.  This can be filtered by the state that the line was in.. Lines Victimized -- Victimized Lines that Match NID."], ["UNC_C_MISC:CVZERO_PREFETCH_MISS", "Miscellaneous events in the Cbo.. Cbo Misc -- DRd hitting non-M with raw CV=0."], ["UNC_C_MISC:CVZERO_PREFETCH_VICTIM", "Miscellaneous events in the Cbo.. Cbo Misc -- Clean Victim with raw CV=0."], ["UNC_C_MISC:RFO_HIT_S", "Miscellaneous events in the Cbo.. Cbo Misc -- RFO HitS."], ["UNC_C_MISC:RSPI_WAS_FSE", "Miscellaneous events in the Cbo.. Cbo Misc -- Silent Snoop Eviction."], ["UNC_C_MISC:STARTED", "Miscellaneous events in the Cbo.. Cbo Misc -- ."], ["UNC_C_MISC:WC_ALIASING", "Miscellaneous events in the Cbo.. Cbo Misc -- Write Combining Aliasing."], ["UNC_C_RING_AD_USED:ALL", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- All."], ["UNC_C_RING_AD_USED:CCW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down."], ["UNC_C_RING_AD_USED:CW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up."], ["UNC_C_RING_AD_USED:DOWN_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Even."], ["UNC_C_RING_AD_USED:DOWN_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Down and Odd."], ["UNC_C_RING_AD_USED:UP_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Even."], ["UNC_C_RING_AD_USED:UP_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AD Ring In Use -- Up and Odd."], ["UNC_C_RING_AK_USED:ALL", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- All."], ["UNC_C_RING_AK_USED:CCW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down."], ["UNC_C_RING_AK_USED:CW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up."], ["UNC_C_RING_AK_USED:DOWN_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Even."], ["UNC_C_RING_AK_USED:DOWN_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Down and Odd."], ["UNC_C_RING_AK_USED:UP_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Even."], ["UNC_C_RING_AK_USED:UP_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. AK Ring In Use -- Up and Odd."], ["UNC_C_RING_BL_USED:ALL", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CCW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down."], ["UNC_C_RING_BL_USED:CW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up."], ["UNC_C_RING_BL_USED:DOWN_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Even."], ["UNC_C_RING_BL_USED:DOWN_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Down and Odd."], ["UNC_C_RING_BL_USED:UP_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Even."], ["UNC_C_RING_BL_USED:UP_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.We really have two rings in BDX -- a clockwise ring and a counter-clockwise ring.  On the left side of the ring, the UP direction is on the clockwise ring and DN is on the counter-clockwise ring.  On the right side of the ring, this is reversed.  The first half of the CBos are on the left side of the ring, and the 2nd half are on the right side of the ring.  In other words (for example), in a 4c part, Cbo 0 UP AD is NOT the same ring as CBo 2 UP AD because they are on opposite sides of the rhe ring.. BL Ring in Use -- Up and Odd."], ["UNC_C_RING_BOUNCES:AD", "TBD. Number of LLC responses that bounced on the Ring. -- AD."], ["UNC_C_RING_BOUNCES:AK", "TBD. Number of LLC responses that bounced on the Ring. -- AK."], ["UNC_C_RING_BOUNCES:BL", "TBD. Number of LLC responses that bounced on the Ring. -- BL."], ["UNC_C_RING_BOUNCES:IV", "TBD. Number of LLC responses that bounced on the Ring. -- Snoops of processors cachee.."], ["UNC_C_RING_IV_USED:ANY", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_IV_USED:DOWN", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Down."], ["UNC_C_RING_IV_USED:UP", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.  There is only 1 IV ring in BDX  Therefore, if one wants to monitor the Even ring, they should select both UP_EVEN and DN_EVEN.  To monitor the Odd ring, they should select both UP_ODD and DN_ DN_ODD.. BL Ring in Use -- Any."], ["UNC_C_RING_SRC_THRTL", "TBD."], ["UNC_C_RXR_EXT_STARVED:IPQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IRQ."], ["UNC_C_RXR_EXT_STARVED:IRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- IPQ."], ["UNC_C_RXR_EXT_STARVED:ISMQ_BIDS", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- ISMQ_BID."], ["UNC_C_RXR_EXT_STARVED:PRQ", "Counts cycles in external starvation.  This occurs when one of the ingress queues is being starved by the other queues.. Ingress Arbiter Blocking Cycles -- PRQ."], ["UNC_C_RXR_INSERTS:IPQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IPQ."], ["UNC_C_RXR_INSERTS:IRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ."], ["UNC_C_RXR_INSERTS:IRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- IRQ Rejected."], ["UNC_C_RXR_INSERTS:PRQ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_INSERTS:PRQ_REJ", "Counts number of allocations per cycle into the specified Ingress queue.. Ingress Allocations -- PRQ."], ["UNC_C_RXR_IPQ_RETRY:ADDR_CONFLICT", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Address Conflict."], ["UNC_C_RXR_IPQ_RETRY:ANY", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Any Reject."], ["UNC_C_RXR_IPQ_RETRY:FULL", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No Egress Credits."], ["UNC_C_RXR_IPQ_RETRY:QPI_CREDITS", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No QPI Credits."], ["UNC_C_RXR_IPQ_RETRY2:AD_SBO", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- No AD Sbo Credits."], ["UNC_C_RXR_IPQ_RETRY2:TARGET", "Number of times a snoop (probe) request had to retry.  Filters exist to cover some of the common cases retries.. Probe Queue Retries -- Target Node Filter."], ["UNC_C_RXR_IRQ_RETRY:ADDR_CONFLICT", "TBD. Ingress Request Queue Rejects -- Address Conflict."], ["UNC_C_RXR_IRQ_RETRY:ANY", "TBD. Ingress Request Queue Rejects -- Any Reject."], ["UNC_C_RXR_IRQ_RETRY:FULL", "TBD. Ingress Request Queue Rejects -- No Egress Credits."], ["UNC_C_RXR_IRQ_RETRY:IIO_CREDITS", "TBD. Ingress Request Queue Rejects -- No IIO Credits."], ["UNC_C_RXR_IRQ_RETRY:NID", "TBD. Ingress Request Queue Rejects -- ."], ["UNC_C_RXR_IRQ_RETRY:QPI_CREDITS", "TBD. Ingress Request Queue Rejects -- No QPI Credits."], ["UNC_C_RXR_IRQ_RETRY:RTID", "TBD. Ingress Request Queue Rejects -- No RTIDs."], ["UNC_C_RXR_IRQ_RETRY2:AD_SBO", "TBD. Ingress Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:BL_SBO", "TBD. Ingress Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_IRQ_RETRY2:TARGET", "TBD. Ingress Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_ISMQ_RETRY:ANY", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- Any Reject."], ["UNC_C_RXR_ISMQ_RETRY:FULL", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No Egress Credits."], ["UNC_C_RXR_ISMQ_RETRY:IIO_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No IIO Credits."], ["UNC_C_RXR_ISMQ_RETRY:NID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY:QPI_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No QPI Credits."], ["UNC_C_RXR_ISMQ_RETRY:RTID", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- No RTIDs."], ["UNC_C_RXR_ISMQ_RETRY:WB_CREDITS", "Number of times a transaction flowing through the ISMQ had to retry.  Transaction pass through the ISMQ as responses for requests that already exist in the Cbo.  Some examples include: when data is returned or when snoop responses come back from the cores.. ISMQ Retries -- ."], ["UNC_C_RXR_ISMQ_RETRY2:AD_SBO", "TBD. ISMQ Request Queue Rejects -- No AD Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:BL_SBO", "TBD. ISMQ Request Queue Rejects -- No BL Sbo Credits."], ["UNC_C_RXR_ISMQ_RETRY2:TARGET", "TBD. ISMQ Request Queue Rejects -- Target Node Filter."], ["UNC_C_RXR_OCCUPANCY:IPQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IPQ."], ["UNC_C_RXR_OCCUPANCY:IRQ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ."], ["UNC_C_RXR_OCCUPANCY:IRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- IRQ Rejected."], ["UNC_C_RXR_OCCUPANCY:PRQ_REJ", "Counts number of entries in the specified Ingress queue in each cycle.. Ingress Occupancy -- PRQ Rejects."], ["UNC_C_SBO_CREDITS_ACQUIRED:AD", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For AD Ring."], ["UNC_C_SBO_CREDITS_ACQUIRED:BL", "Number of Sbo credits acquired in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Acquired -- For BL Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:AD", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For AD Ring."], ["UNC_C_SBO_CREDIT_OCCUPANCY:BL", "Number of Sbo credits in use in a given cycle, per ring.  Each Cbo is assigned an Sbo it can communicate with.. SBo Credits Occupancy -- For BL Ring."], ["UNC_C_TOR_INSERTS:ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. All."], ["UNC_C_TOR_INSERTS:EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_INSERTS:LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory."], ["UNC_C_TOR_INSERTS:LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_LOCAL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory."], ["UNC_C_TOR_INSERTS:MISS_LOCAL_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Local Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss Opcode Match."], ["UNC_C_TOR_INSERTS:MISS_REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory."], ["UNC_C_TOR_INSERTS:MISS_REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Misses to Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched."], ["UNC_C_TOR_INSERTS:NID_EVICTION", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Evictions."], ["UNC_C_TOR_INSERTS:NID_MISS_ALL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Miss All."], ["UNC_C_TOR_INSERTS:NID_MISS_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched Miss."], ["UNC_C_TOR_INSERTS:NID_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID and Opcode Matched."], ["UNC_C_TOR_INSERTS:NID_WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. NID Matched Writebacks."], ["UNC_C_TOR_INSERTS:OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Opcode Match."], ["UNC_C_TOR_INSERTS:REMOTE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory."], ["UNC_C_TOR_INSERTS:REMOTE_OPCODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Remote Memory - Opcode Matched."], ["UNC_C_TOR_INSERTS:WB", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Writebacks."], ["UNC_C_TOR_INSERTS:OPC_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_CRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_DRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCILF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WCIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_RFO", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_CODE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PF_DATA", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIL", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIWIF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCIRDCUR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOI", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_WBMTOE", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_ITOM", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSRD", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWR", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_INSERTS:OPC_PCINSWRF", "Counts the number of entries successfully inserted into the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Any."], ["UNC_C_TOR_OCCUPANCY:EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Evictions."], ["UNC_C_TOR_OCCUPANCY:LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Local Memory - Opcode Matched."], ["UNC_C_TOR_OCCUPANCY:MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Miss All."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions in the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_LOCAL_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by locally homed memory."], ["UNC_C_TOR_OCCUPANCY:MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:NID_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_EVICTION", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched eviction transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_ALL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched miss transactions that were inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_MISS_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID and opcode matched miss transactions inserted into the TOR (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match a NID and opcode (must provide opc_* umask and nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:NID_WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of NID-matched write back transactions inserted into the TOR (must provide nf=X modifier)."], ["UNC_C_TOR_OCCUPANCY:OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that match an opcode (must provide opc_* umask)."], ["UNC_C_TOR_OCCUPANCY:REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:REMOTE_OPCODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of opcode-matched transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:WB", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of write transactions inserted into the TOR."], ["UNC_C_TOR_OCCUPANCY:MISS_REMOTE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Number of miss transactions inserted into the TOR that are satisfied by remote caches or memory."], ["UNC_C_TOR_OCCUPANCY:OPC_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data RFO (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_CRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand code read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_DRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Demand data read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial reads (UC) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCILF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Full Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WCIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Partial Stream store (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Write Invalidate Line (Partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_RFO", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch RFO into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_CODE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch code into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PF_DATA", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Prefetch data into LLC but do not pass to L2 (includes hints) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIL", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (partial, non-allocating) - partial line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIWIF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (full, non-allocating) - full line MMIO write transactions from IIO (P2P). Not used for coherent transacions. Uncacheable. (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe write (allocating) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCIRDCUR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe read current (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOI", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified invalidate line (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_WBMTOE", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request writeback modified set to exclusive (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_ITOM", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. Request invalidate line. Request exclusive ownership of the line  (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSRD", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop read (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWR", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (partial) (combine with any OPCODE umask)."], ["UNC_C_TOR_OCCUPANCY:OPC_PCINSWRF", "For each cycle, this event accumulates the number of valid entries in the TOR that match qualifications specified by the subevent.  There are a number of subevent filters but only a subset of the subevent combinations are valid.  Subevents that require an opcode or NID match require the Cn_MSR_PMON_BOX_FILTER.{opc, nid} field to be set.  If, for example, one wanted to count DRD Local Misses, one should select MISS_OPC_MATCH and set Cn_MSR_PMON_BOX_FILTER.opc to DRD (0x182).. PCIe non-snoop write (full) (combine with any OPCODE umask)."], ["UNC_C_TXR_ADS_USED:AD", "TBD. Onto AD Ring."], ["UNC_C_TXR_ADS_USED:AK", "TBD. Onto AK Ring."], ["UNC_C_TXR_ADS_USED:BL", "TBD. Onto BL Ring."], ["UNC_C_TXR_INSERTS:AD_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Cachebo."], ["UNC_C_TXR_INSERTS:AD_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AD - Corebo."], ["UNC_C_TXR_INSERTS:AK_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Cachebo."], ["UNC_C_TXR_INSERTS:AK_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- AK - Corebo."], ["UNC_C_TXR_INSERTS:BL_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Cacheno."], ["UNC_C_TXR_INSERTS:BL_CORE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- BL - Corebo."], ["UNC_C_TXR_INSERTS:IV_CACHE", "Number of allocations into the Cbo Egress.  The Egress is used to queue up requests destined for the ring.. Egress Allocations -- IV - Cachebo."]], "features": {"name": "Intel BroadwellX C-Box 9 uncore", "no_events": 28, "max_encoding": 2, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_ha0": {"events": [["UNC_H_BT_CYCLES_NE", "Cycles the Backup Tracker (BT) is not empty. The BT is the actual HOM tracker in IVT.."], ["UNC_H_BT_OCCUPANCY", "Accumulates the occupancy of te HA BT pool in every cycle. This can be used with the 'not empty' stat to calculate the average queue occupancy or the 'allocations' stat to calculate average queue latency. HA BTs are allocated as son as a request enters the HA and are released after the snoop response and data return and the response is returned to the ring."], ["UNC_H_BYPASS_IMC:NOT_TAKEN", "Counts the number of times when the HA was able to bypass was attempted.  This is a latency optimization for situations when there is light loadings on the memory subsystem.  This can be filted by when the bypass was taken and when it was not.. HA to iMC Bypass -- Not Taken."], ["UNC_H_BYPASS_IMC:TAKEN", "Counts the number of times when the HA was able to bypass was attempted.  This is a latency optimization for situations when there is light loadings on the memory subsystem.  This can be filted by when the bypass was taken and when it was not.. HA to iMC Bypass -- Taken."], ["UNC_H_CONFLICT_CYCLES", "TBD."], ["UNC_H_CLOCKTICKS", "Counts the number of uclks in the HA.  This will be slightly different than the count in the Ubox because of enable/freeze delays.  The HA is on the other side of the die from the fixed Ubox uclk counter, so the drift could be somewhat larger than in units that are closer like the QPI Agent.."], ["UNC_H_DIRECT2CORE_COUNT", "Number of Direct2Core messages sent."], ["UNC_H_DIRECT2CORE_CYCLES_DISABLED", "Number of cycles in which Direct2Core was disabled."], ["UNC_H_DIRECT2CORE_TXN_OVERRIDE", "Number of Reads where Direct2Core overridden."], ["UNC_H_DIRECTORY_LAT_OPT", "Directory Latency Optimization Data Return Path Taken. When directory mode is enabled and the directory retuned for a read is Dir=I, then data can be returned using a faster path if certain conditions are met (credits, free pipeline, etc).."], ["UNC_H_DIRECTORY_LOOKUP:NO_SNP", "Counts the number of transactions that looked up the directory.  Can be filtered by requests that had to snoop and those that did not have to.. Directory Lookups -- Snoop Not Needed."], ["UNC_H_DIRECTORY_LOOKUP:SNP", "Counts the number of transactions that looked up the directory.  Can be filtered by requests that had to snoop and those that did not have to.. Directory Lookups -- Snoop Needed."], ["UNC_H_DIRECTORY_UPDATE:ANY", "Counts the number of directory updates that were required.  These result in writes to the memory controller.  This can be filtered by directory sets and directory clears.. Directory Updates -- Any Directory Update."], ["UNC_H_DIRECTORY_UPDATE:CLEAR", "Counts the number of directory updates that were required.  These result in writes to the memory controller.  This can be filtered by directory sets and directory clears.. Directory Updates -- Directory Clear."], ["UNC_H_DIRECTORY_UPDATE:SET", "Counts the number of directory updates that were required.  These result in writes to the memory controller.  This can be filtered by directory sets and directory clears.. Directory Updates -- Directory Set."], ["UNC_H_HITME_HIT:ACKCNFLTWBI", "TBD. Counts Number of Hits in HitMe Cache -- op is AckCnfltWbI."], ["UNC_H_HITME_HIT:ALL", "TBD. Counts Number of Hits in HitMe Cache -- All Requests."], ["UNC_H_HITME_HIT:ALLOCS", "TBD. Counts Number of Hits in HitMe Cache -- Allocations."], ["UNC_H_HITME_HIT:EVICTS", "TBD. Counts Number of Hits in HitMe Cache -- Allocations."], ["UNC_H_HITME_HIT:HOM", "TBD. Counts Number of Hits in HitMe Cache -- HOM Requests."], ["UNC_H_HITME_HIT:INVALS", "TBD. Counts Number of Hits in HitMe Cache -- Invalidations."], ["UNC_H_HITME_HIT:READ_OR_INVITOE", "TBD. Counts Number of Hits in HitMe Cache -- op is RdCode, RdData, RdDataMigratory, RdInvOwn, RdCur or InvItoE."], ["UNC_H_HITME_HIT:RSP", "TBD. Counts Number of Hits in HitMe Cache -- op is RspI, RspIWb, RspS, RspSWb, RspCnflt or RspCnfltWbI."], ["UNC_H_HITME_HIT:RSPFWDI_LOCAL", "TBD. Counts Number of Hits in HitMe Cache -- op is RspIFwd or RspIFwdWb for a local request."], ["UNC_H_HITME_HIT:RSPFWDI_REMOTE", "TBD. Counts Number of Hits in HitMe Cache -- op is RspIFwd or RspIFwdWb for a remote request."], ["UNC_H_HITME_HIT:RSPFWDS", "TBD. Counts Number of Hits in HitMe Cache -- op is RsSFwd or RspSFwdWb."], ["UNC_H_HITME_HIT:WBMTOE_OR_S", "TBD. Counts Number of Hits in HitMe Cache -- op is WbMtoE or WbMtoS."], ["UNC_H_HITME_HIT:WBMTOI", "TBD. Counts Number of Hits in HitMe Cache -- op is WbMtoI."], ["UNC_H_HITME_HIT_PV_BITS_SET:ACKCNFLTWBI", "TBD. Accumulates Number of PV bits set on HitMe Cache Hits -- op is AckCnfltWbI."], ["UNC_H_HITME_HIT_PV_BITS_SET:ALL", "TBD. Accumulates Number of PV bits set on HitMe Cache Hits -- All Requests."], ["UNC_H_HITME_HIT_PV_BITS_SET:HOM", "TBD. Accumulates Number of PV bits set on HitMe Cache Hits -- HOM Requests."], ["UNC_H_HITME_HIT_PV_BITS_SET:READ_OR_INVITOE", "TBD. Accumulates Number of PV bits set on HitMe Cache Hits -- op is RdCode, RdData, RdDataMigratory, RdInvOwn, RdCur or InvItoE."], ["UNC_H_HITME_HIT_PV_BITS_SET:RSP", "TBD. Accumulates Number of PV bits set on HitMe Cache Hits -- op is RspI, RspIWb, RspS, RspSWb, RspCnflt or RspCnfltWbI."], ["UNC_H_HITME_HIT_PV_BITS_SET:RSPFWDI_LOCAL", "TBD. Accumulates Number of PV bits set on HitMe Cache Hits -- op is RspIFwd or RspIFwdWb for a local request."], ["UNC_H_HITME_HIT_PV_BITS_SET:RSPFWDI_REMOTE", "TBD. Accumulates Number of PV bits set on HitMe Cache Hits -- op is RspIFwd or RspIFwdWb for a remote request."], ["UNC_H_HITME_HIT_PV_BITS_SET:RSPFWDS", "TBD. Accumulates Number of PV bits set on HitMe Cache Hits -- op is RsSFwd or RspSFwdWb."], ["UNC_H_HITME_HIT_PV_BITS_SET:WBMTOE_OR_S", "TBD. Accumulates Number of PV bits set on HitMe Cache Hits -- op is WbMtoE or WbMtoS."], ["UNC_H_HITME_HIT_PV_BITS_SET:WBMTOI", "TBD. Accumulates Number of PV bits set on HitMe Cache Hits -- op is WbMtoI."], ["UNC_H_HITME_LOOKUP:ACKCNFLTWBI", "TBD. Counts Number of times HitMe Cache is accessed -- op is AckCnfltWbI."], ["UNC_H_HITME_LOOKUP:ALL", "TBD. Counts Number of times HitMe Cache is accessed -- All Requests."], ["UNC_H_HITME_LOOKUP:ALLOCS", "TBD. Counts Number of times HitMe Cache is accessed -- Allocations."], ["UNC_H_HITME_LOOKUP:HOM", "TBD. Counts Number of times HitMe Cache is accessed -- HOM Requests."], ["UNC_H_HITME_LOOKUP:INVALS", "TBD. Counts Number of times HitMe Cache is accessed -- Invalidations."], ["UNC_H_HITME_LOOKUP:READ_OR_INVITOE", "TBD. Counts Number of times HitMe Cache is accessed -- op is RdCode, RdData, RdDataMigratory, RdInvOwn, RdCur or InvItoE."], ["UNC_H_HITME_LOOKUP:RSP", "TBD. Counts Number of times HitMe Cache is accessed -- op is RspI, RspIWb, RspS, RspSWb, RspCnflt or RspCnfltWbI."], ["UNC_H_HITME_LOOKUP:RSPFWDI_LOCAL", "TBD. Counts Number of times HitMe Cache is accessed -- op is RspIFwd or RspIFwdWb for a local request."], ["UNC_H_HITME_LOOKUP:RSPFWDI_REMOTE", "TBD. Counts Number of times HitMe Cache is accessed -- op is RspIFwd or RspIFwdWb for a remote request."], ["UNC_H_HITME_LOOKUP:RSPFWDS", "TBD. Counts Number of times HitMe Cache is accessed -- op is RsSFwd or RspSFwdWb."], ["UNC_H_HITME_LOOKUP:WBMTOE_OR_S", "TBD. Counts Number of times HitMe Cache is accessed -- op is WbMtoE or WbMtoS."], ["UNC_H_HITME_LOOKUP:WBMTOI", "TBD. Counts Number of times HitMe Cache is accessed -- op is WbMtoI."], ["UNC_H_IGR_NO_CREDIT_CYCLES:AD_QPI0", "Counts the number of cycles when the HA does not have credits to send messages to the QPI Agent.  This can be filtered by the different credit pools and the different links.. Cycles without QPI Ingress Credits -- AD to QPI Link 0."], ["UNC_H_IGR_NO_CREDIT_CYCLES:AD_QPI1", "Counts the number of cycles when the HA does not have credits to send messages to the QPI Agent.  This can be filtered by the different credit pools and the different links.. Cycles without QPI Ingress Credits -- AD to QPI Link 1."], ["UNC_H_IGR_NO_CREDIT_CYCLES:AD_QPI2", "Counts the number of cycles when the HA does not have credits to send messages to the QPI Agent.  This can be filtered by the different credit pools and the different links.. Cycles without QPI Ingress Credits -- BL to QPI Link 0."], ["UNC_H_IGR_NO_CREDIT_CYCLES:BL_QPI0", "Counts the number of cycles when the HA does not have credits to send messages to the QPI Agent.  This can be filtered by the different credit pools and the different links.. Cycles without QPI Ingress Credits -- BL to QPI Link 0."], ["UNC_H_IGR_NO_CREDIT_CYCLES:BL_QPI1", "Counts the number of cycles when the HA does not have credits to send messages to the QPI Agent.  This can be filtered by the different credit pools and the different links.. Cycles without QPI Ingress Credits -- BL to QPI Link 1."], ["UNC_H_IGR_NO_CREDIT_CYCLES:BL_QPI2", "Counts the number of cycles when the HA does not have credits to send messages to the QPI Agent.  This can be filtered by the different credit pools and the different links.. Cycles without QPI Ingress Credits -- BL to QPI Link 1."], ["UNC_H_IMC_READS:NORMAL", "Count of the number of reads issued to any of the memory controller channels.  This can be filtered by the priority of the reads.. HA to iMC Normal Priority Reads Issued -- Normal Priority."], ["UNC_H_IMC_RETRY", "TBD."], ["UNC_H_IMC_WRITES:ALL", "Counts the total number of full line writes issued from the HA into the memory controller.  This counts for all four channels.  It can be filtered by full/partial and ISOCH/non-ISOCH.. HA to iMC Full Line Writes Issued -- All Writes."], ["UNC_H_IMC_WRITES:FULL", "Counts the total number of full line writes issued from the HA into the memory controller.  This counts for all four channels.  It can be filtered by full/partial and ISOCH/non-ISOCH.. HA to iMC Full Line Writes Issued -- Full Line Non-ISOCH."], ["UNC_H_IMC_WRITES:FULL_ISOCH", "Counts the total number of full line writes issued from the HA into the memory controller.  This counts for all four channels.  It can be filtered by full/partial and ISOCH/non-ISOCH.. HA to iMC Full Line Writes Issued -- ISOCH Full Line."], ["UNC_H_IMC_WRITES:PARTIAL", "Counts the total number of full line writes issued from the HA into the memory controller.  This counts for all four channels.  It can be filtered by full/partial and ISOCH/non-ISOCH.. HA to iMC Full Line Writes Issued -- Partial Non-ISOCH."], ["UNC_H_IMC_WRITES:PARTIAL_ISOCH", "Counts the total number of full line writes issued from the HA into the memory controller.  This counts for all four channels.  It can be filtered by full/partial and ISOCH/non-ISOCH.. HA to iMC Full Line Writes Issued -- ISOCH Partial."], ["UNC_H_OSB:CANCELLED", "Count of OSB snoop broadcasts. Counts by 1 per request causing OSB snoops to be broadcast. Does not count all the snoops generated by OSB.. OSB Snoop Broadcast -- Cancelled."], ["UNC_H_OSB:INVITOE_LOCAL", "Count of OSB snoop broadcasts. Counts by 1 per request causing OSB snoops to be broadcast. Does not count all the snoops generated by OSB.. OSB Snoop Broadcast -- Local InvItoE."], ["UNC_H_OSB:READS_LOCAL", "Count of OSB snoop broadcasts. Counts by 1 per request causing OSB snoops to be broadcast. Does not count all the snoops generated by OSB.. OSB Snoop Broadcast -- Local Reads."], ["UNC_H_OSB:READS_LOCAL_USEFUL", "Count of OSB snoop broadcasts. Counts by 1 per request causing OSB snoops to be broadcast. Does not count all the snoops generated by OSB.. OSB Snoop Broadcast -- Reads Local -  Useful."], ["UNC_H_OSB:REMOTE", "Count of OSB snoop broadcasts. Counts by 1 per request causing OSB snoops to be broadcast. Does not count all the snoops generated by OSB.. OSB Snoop Broadcast -- Remote."], ["UNC_H_OSB:REMOTE_USEFUL", "Count of OSB snoop broadcasts. Counts by 1 per request causing OSB snoops to be broadcast. Does not count all the snoops generated by OSB.. OSB Snoop Broadcast -- Remote - Useful."], ["UNC_H_OSB_EDR:ALL", "Counts the number of transactions that broadcast snoop due to OSB, but found clean data in memory and was able to do early data return. OSB Early Data Return -- All."], ["UNC_H_OSB_EDR:READS_LOCAL_I", "Counts the number of transactions that broadcast snoop due to OSB, but found clean data in memory and was able to do early data return. OSB Early Data Return -- Reads to Local  I."], ["UNC_H_OSB_EDR:READS_LOCAL_S", "Counts the number of transactions that broadcast snoop due to OSB, but found clean data in memory and was able to do early data return. OSB Early Data Return -- Reads to Local S."], ["UNC_H_OSB_EDR:READS_REMOTE_I", "Counts the number of transactions that broadcast snoop due to OSB, but found clean data in memory and was able to do early data return. OSB Early Data Return -- Reads to Remote I."], ["UNC_H_OSB_EDR:READS_REMOTE_S", "Counts the number of transactions that broadcast snoop due to OSB, but found clean data in memory and was able to do early data return. OSB Early Data Return -- Reads to Remote S."], ["UNC_H_REQUESTS:INVITOE_LOCAL", "Counts the total number of read requests made into the Home Agent. Reads include all read opcodes (including RFO).  Writes include all writes (streaming, evictions, HitM, etc).. Read and Write Requests -- Local InvItoEs."], ["UNC_H_REQUESTS:INVITOE_REMOTE", "Counts the total number of read requests made into the Home Agent. Reads include all read opcodes (including RFO).  Writes include all writes (streaming, evictions, HitM, etc).. Read and Write Requests -- Remote InvItoEs."], ["UNC_H_REQUESTS:READS", "Counts the total number of read requests made into the Home Agent. Reads include all read opcodes (including RFO).  Writes include all writes (streaming, evictions, HitM, etc).. Read and Write Requests -- Reads."], ["UNC_H_REQUESTS:READS_LOCAL", "Counts the total number of read requests made into the Home Agent. Reads include all read opcodes (including RFO).  Writes include all writes (streaming, evictions, HitM, etc).. Read and Write Requests -- Local Reads."], ["UNC_H_REQUESTS:READS_REMOTE", "Counts the total number of read requests made into the Home Agent. Reads include all read opcodes (including RFO).  Writes include all writes (streaming, evictions, HitM, etc).. Read and Write Requests -- Remote Reads."], ["UNC_H_REQUESTS:WRITES", "Counts the total number of read requests made into the Home Agent. Reads include all read opcodes (including RFO).  Writes include all writes (streaming, evictions, HitM, etc).. Read and Write Requests -- Writes."], ["UNC_H_REQUESTS:WRITES_LOCAL", "Counts the total number of read requests made into the Home Agent. Reads include all read opcodes (including RFO).  Writes include all writes (streaming, evictions, HitM, etc).. Read and Write Requests -- Local Writes."], ["UNC_H_REQUESTS:WRITES_REMOTE", "Counts the total number of read requests made into the Home Agent. Reads include all read opcodes (including RFO).  Writes include all writes (streaming, evictions, HitM, etc).. Read and Write Requests -- Remote Writes."], ["UNC_H_RING_AD_USED:CCW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise."], ["UNC_H_RING_AD_USED:CCW_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Even."], ["UNC_H_RING_AD_USED:CCW_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Odd."], ["UNC_H_RING_AD_USED:CW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise."], ["UNC_H_RING_AD_USED:CW_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Even."], ["UNC_H_RING_AD_USED:CW_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Odd."], ["UNC_H_RING_AK_USED:CCW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise."], ["UNC_H_RING_AK_USED:CCW_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Even."], ["UNC_H_RING_AK_USED:CCW_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Odd."], ["UNC_H_RING_AK_USED:CW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise."], ["UNC_H_RING_AK_USED:CW_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Even."], ["UNC_H_RING_AK_USED:CW_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Odd."], ["UNC_H_RING_BL_USED:CCW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise."], ["UNC_H_RING_BL_USED:CCW_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Even."], ["UNC_H_RING_BL_USED:CCW_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Odd."], ["UNC_H_RING_BL_USED:CW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise."], ["UNC_H_RING_BL_USED:CW_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Even."], ["UNC_H_RING_BL_USED:CW_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Odd."], ["UNC_H_RPQ_CYCLES_NO_REG_CREDITS:CHN0", "Counts the number of cycles when there are no regular credits available for posting reads from the HA into the iMC.  In order to send reads into the memory controller, the HA must first acquire a credit for the iMCs RPQ (read pending queue).  This queue is broken into regular credits/buffers that are used by general reads, and special requests such as ISOCH reads.  This count only tracks the regular credits  Common high banwidth workloads should be able to make use of all of the regular buffers, but it will be difficult (and uncommon) to make use of both the regular and special buffers at the same time.  One can filter based on the memory controller channel.  One or more channels can be tracked at a given iven time.. iMC RPQ Credits Empty - Regular -- Channel 0."], ["UNC_H_RPQ_CYCLES_NO_REG_CREDITS:CHN1", "Counts the number of cycles when there are no regular credits available for posting reads from the HA into the iMC.  In order to send reads into the memory controller, the HA must first acquire a credit for the iMCs RPQ (read pending queue).  This queue is broken into regular credits/buffers that are used by general reads, and special requests such as ISOCH reads.  This count only tracks the regular credits  Common high banwidth workloads should be able to make use of all of the regular buffers, but it will be difficult (and uncommon) to make use of both the regular and special buffers at the same time.  One can filter based on the memory controller channel.  One or more channels can be tracked at a given iven time.. iMC RPQ Credits Empty - Regular -- Channel 1."], ["UNC_H_RPQ_CYCLES_NO_REG_CREDITS:CHN2", "Counts the number of cycles when there are no regular credits available for posting reads from the HA into the iMC.  In order to send reads into the memory controller, the HA must first acquire a credit for the iMCs RPQ (read pending queue).  This queue is broken into regular credits/buffers that are used by general reads, and special requests such as ISOCH reads.  This count only tracks the regular credits  Common high banwidth workloads should be able to make use of all of the regular buffers, but it will be difficult (and uncommon) to make use of both the regular and special buffers at the same time.  One can filter based on the memory controller channel.  One or more channels can be tracked at a given iven time.. iMC RPQ Credits Empty - Regular -- Channel 2."], ["UNC_H_RPQ_CYCLES_NO_REG_CREDITS:CHN3", "Counts the number of cycles when there are no regular credits available for posting reads from the HA into the iMC.  In order to send reads into the memory controller, the HA must first acquire a credit for the iMCs RPQ (read pending queue).  This queue is broken into regular credits/buffers that are used by general reads, and special requests such as ISOCH reads.  This count only tracks the regular credits  Common high banwidth workloads should be able to make use of all of the regular buffers, but it will be difficult (and uncommon) to make use of both the regular and special buffers at the same time.  One can filter based on the memory controller channel.  One or more channels can be tracked at a given iven time.. iMC RPQ Credits Empty - Regular -- Channel 3."], ["UNC_H_SBO0_CREDITS_ACQUIRED:AD", "Number of Sbo 0 credits acquired in a given cycle, per ring.. For AD Ring."], ["UNC_H_SBO0_CREDITS_ACQUIRED:BL", "Number of Sbo 0 credits acquired in a given cycle, per ring.. For BL Ring."], ["UNC_H_SBO0_CREDIT_OCCUPANCY:AD", "Number of Sbo 0 credits in use in a given cycle, per ring.. For AD Ring."], ["UNC_H_SBO0_CREDIT_OCCUPANCY:BL", "Number of Sbo 0 credits in use in a given cycle, per ring.. For BL Ring."], ["UNC_H_SBO1_CREDITS_ACQUIRED:AD", "Number of Sbo 1 credits acquired in a given cycle, per ring.. For AD Ring."], ["UNC_H_SBO1_CREDITS_ACQUIRED:BL", "Number of Sbo 1 credits acquired in a given cycle, per ring.. For BL Ring."], ["UNC_H_SBO1_CREDIT_OCCUPANCY:AD", "Number of Sbo 1 credits in use in a given cycle, per ring.. For AD Ring."], ["UNC_H_SBO1_CREDIT_OCCUPANCY:BL", "Number of Sbo 1 credits in use in a given cycle, per ring.. For BL Ring."], ["UNC_H_SNOOPS_RSP_AFTER_DATA:LOCAL", "Counts the number of reads when the snoop was on the critical path to the data return.. Data beat the Snoop Responses -- Local Requests."], ["UNC_H_SNOOPS_RSP_AFTER_DATA:REMOTE", "Counts the number of reads when the snoop was on the critical path to the data return.. Data beat the Snoop Responses -- Remote Requests."], ["UNC_H_SNOOP_CYCLES_NE:ALL", "Counts cycles when one or more snoops are outstanding.. Cycles with Snoops Outstanding -- All Requests."], ["UNC_H_SNOOP_CYCLES_NE:LOCAL", "Counts cycles when one or more snoops are outstanding.. Cycles with Snoops Outstanding -- Local Requests."], ["UNC_H_SNOOP_CYCLES_NE:REMOTE", "Counts cycles when one or more snoops are outstanding.. Cycles with Snoops Outstanding -- Remote Requests."], ["UNC_H_SNOOP_OCCUPANCY:LOCAL", "Accumulates the occupancy of either the local HA tracker pool that have snoops pending in every cycle.  This can be used in conjection with the not empty stat to calculate average queue occupancy or the allocations stat in order to calculate average queue latency.  HA trackers are allocated as soon as a request enters the HA if an HT (HomeTracker) entry is available and this occupancy is decremented when all the snoop responses have returned.. Tracker Snoops Outstanding Accumulator -- Local Requests."], ["UNC_H_SNOOP_OCCUPANCY:REMOTE", "Accumulates the occupancy of either the local HA tracker pool that have snoops pending in every cycle.  This can be used in conjection with the not empty stat to calculate average queue occupancy or the allocations stat in order to calculate average queue latency.  HA trackers are allocated as soon as a request enters the HA if an HT (HomeTracker) entry is available and this occupancy is decremented when all the snoop responses have returned.. Tracker Snoops Outstanding Accumulator -- Remote Requests."], ["UNC_H_SNOOP_RESP:RSPCNFLCT", "Counts the total number of RspI snoop responses received.  Whenever a snoops are issued, one or more snoop responses will be returned depending on the topology of the system.  In systems larger than 2s, when multiple snoops are returned this will count all the snoops that are received.  For example, if 3 snoops were issued and returned RspI, RspS, and RspSFwd; then each of these sub-events would increment by 1.. Snoop Responses Received -- RSPCNFLCT*."], ["UNC_H_SNOOP_RESP:RSPI", "Counts the total number of RspI snoop responses received.  Whenever a snoops are issued, one or more snoop responses will be returned depending on the topology of the system.  In systems larger than 2s, when multiple snoops are returned this will count all the snoops that are received.  For example, if 3 snoops were issued and returned RspI, RspS, and RspSFwd; then each of these sub-events would increment by 1.. Snoop Responses Received -- RspI."], ["UNC_H_SNOOP_RESP:RSPIFWD", "Counts the total number of RspI snoop responses received.  Whenever a snoops are issued, one or more snoop responses will be returned depending on the topology of the system.  In systems larger than 2s, when multiple snoops are returned this will count all the snoops that are received.  For example, if 3 snoops were issued and returned RspI, RspS, and RspSFwd; then each of these sub-events would increment by 1.. Snoop Responses Received -- RspIFwd."], ["UNC_H_SNOOP_RESP:RSPS", "Counts the total number of RspI snoop responses received.  Whenever a snoops are issued, one or more snoop responses will be returned depending on the topology of the system.  In systems larger than 2s, when multiple snoops are returned this will count all the snoops that are received.  For example, if 3 snoops were issued and returned RspI, RspS, and RspSFwd; then each of these sub-events would increment by 1.. Snoop Responses Received -- RspS."], ["UNC_H_SNOOP_RESP:RSPSFWD", "Counts the total number of RspI snoop responses received.  Whenever a snoops are issued, one or more snoop responses will be returned depending on the topology of the system.  In systems larger than 2s, when multiple snoops are returned this will count all the snoops that are received.  For example, if 3 snoops were issued and returned RspI, RspS, and RspSFwd; then each of these sub-events would increment by 1.. Snoop Responses Received -- RspSFwd."], ["UNC_H_SNOOP_RESP:RSP_FWD_WB", "Counts the total number of RspI snoop responses received.  Whenever a snoops are issued, one or more snoop responses will be returned depending on the topology of the system.  In systems larger than 2s, when multiple snoops are returned this will count all the snoops that are received.  For example, if 3 snoops were issued and returned RspI, RspS, and RspSFwd; then each of these sub-events would increment by 1.. Snoop Responses Received -- Rsp*Fwd*WB."], ["UNC_H_SNOOP_RESP:RSP_WB", "Counts the total number of RspI snoop responses received.  Whenever a snoops are issued, one or more snoop responses will be returned depending on the topology of the system.  In systems larger than 2s, when multiple snoops are returned this will count all the snoops that are received.  For example, if 3 snoops were issued and returned RspI, RspS, and RspSFwd; then each of these sub-events would increment by 1.. Snoop Responses Received -- Rsp*WB."], ["UNC_H_SNP_RESP_RECV_LOCAL:OTHER", "Number of snoop responses received for a Local request. Snoop Responses Received Local -- Other."], ["UNC_H_SNP_RESP_RECV_LOCAL:RSPCNFLCT", "Number of snoop responses received for a Local request. Snoop Responses Received Local -- RspCnflct."], ["UNC_H_SNP_RESP_RECV_LOCAL:RSPI", "Number of snoop responses received for a Local request. Snoop Responses Received Local -- RspI."], ["UNC_H_SNP_RESP_RECV_LOCAL:RSPIFWD", "Number of snoop responses received for a Local request. Snoop Responses Received Local -- RspIFwd."], ["UNC_H_SNP_RESP_RECV_LOCAL:RSPS", "Number of snoop responses received for a Local request. Snoop Responses Received Local -- RspS."], ["UNC_H_SNP_RESP_RECV_LOCAL:RSPSFWD", "Number of snoop responses received for a Local request. Snoop Responses Received Local -- RspSFwd."], ["UNC_H_SNP_RESP_RECV_LOCAL:RSPxFWDxWB", "Number of snoop responses received for a Local request. Snoop Responses Received Local -- Rsp*FWD*WB."], ["UNC_H_SNP_RESP_RECV_LOCAL:RSPxWB", "Number of snoop responses received for a Local request. Snoop Responses Received Local -- Rsp*WB."], ["UNC_H_STALL_NO_SBO_CREDIT:SBO0_AD", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo0, AD Ring."], ["UNC_H_STALL_NO_SBO_CREDIT:SBO0_BL", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo0, BL Ring."], ["UNC_H_STALL_NO_SBO_CREDIT:SBO1_AD", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo1, AD Ring."], ["UNC_H_STALL_NO_SBO_CREDIT:SBO1_BL", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo1, BL Ring."], ["UNC_H_TAD_REQUESTS_G0:REGION0", "Counts the number of HA requests to a given TAD region.  There are up to 11 TAD (target address decode) regions in each home agent.  All requests destined for the memory controller must first be decoded to determine which TAD region they are in.  This event is filtered based on the TAD region ID, and covers regions 0 to 7.  This event is useful for understanding how applications are using the memory that is spread across the different memory regions.  It is particularly useful for Monroe systems that use the TAD to enable individual channels to enter self-refresh to save power.. HA Requests to a TAD Region - Group 0 -- TAD Region 0."], ["UNC_H_TAD_REQUESTS_G0:REGION1", "Counts the number of HA requests to a given TAD region.  There are up to 11 TAD (target address decode) regions in each home agent.  All requests destined for the memory controller must first be decoded to determine which TAD region they are in.  This event is filtered based on the TAD region ID, and covers regions 0 to 7.  This event is useful for understanding how applications are using the memory that is spread across the different memory regions.  It is particularly useful for Monroe systems that use the TAD to enable individual channels to enter self-refresh to save power.. HA Requests to a TAD Region - Group 0 -- TAD Region 1."], ["UNC_H_TAD_REQUESTS_G0:REGION2", "Counts the number of HA requests to a given TAD region.  There are up to 11 TAD (target address decode) regions in each home agent.  All requests destined for the memory controller must first be decoded to determine which TAD region they are in.  This event is filtered based on the TAD region ID, and covers regions 0 to 7.  This event is useful for understanding how applications are using the memory that is spread across the different memory regions.  It is particularly useful for Monroe systems that use the TAD to enable individual channels to enter self-refresh to save power.. HA Requests to a TAD Region - Group 0 -- TAD Region 2."], ["UNC_H_TAD_REQUESTS_G0:REGION3", "Counts the number of HA requests to a given TAD region.  There are up to 11 TAD (target address decode) regions in each home agent.  All requests destined for the memory controller must first be decoded to determine which TAD region they are in.  This event is filtered based on the TAD region ID, and covers regions 0 to 7.  This event is useful for understanding how applications are using the memory that is spread across the different memory regions.  It is particularly useful for Monroe systems that use the TAD to enable individual channels to enter self-refresh to save power.. HA Requests to a TAD Region - Group 0 -- TAD Region 3."], ["UNC_H_TAD_REQUESTS_G0:REGION4", "Counts the number of HA requests to a given TAD region.  There are up to 11 TAD (target address decode) regions in each home agent.  All requests destined for the memory controller must first be decoded to determine which TAD region they are in.  This event is filtered based on the TAD region ID, and covers regions 0 to 7.  This event is useful for understanding how applications are using the memory that is spread across the different memory regions.  It is particularly useful for Monroe systems that use the TAD to enable individual channels to enter self-refresh to save power.. HA Requests to a TAD Region - Group 0 -- TAD Region 4."], ["UNC_H_TAD_REQUESTS_G0:REGION5", "Counts the number of HA requests to a given TAD region.  There are up to 11 TAD (target address decode) regions in each home agent.  All requests destined for the memory controller must first be decoded to determine which TAD region they are in.  This event is filtered based on the TAD region ID, and covers regions 0 to 7.  This event is useful for understanding how applications are using the memory that is spread across the different memory regions.  It is particularly useful for Monroe systems that use the TAD to enable individual channels to enter self-refresh to save power.. HA Requests to a TAD Region - Group 0 -- TAD Region 5."], ["UNC_H_TAD_REQUESTS_G0:REGION6", "Counts the number of HA requests to a given TAD region.  There are up to 11 TAD (target address decode) regions in each home agent.  All requests destined for the memory controller must first be decoded to determine which TAD region they are in.  This event is filtered based on the TAD region ID, and covers regions 0 to 7.  This event is useful for understanding how applications are using the memory that is spread across the different memory regions.  It is particularly useful for Monroe systems that use the TAD to enable individual channels to enter self-refresh to save power.. HA Requests to a TAD Region - Group 0 -- TAD Region 6."], ["UNC_H_TAD_REQUESTS_G0:REGION7", "Counts the number of HA requests to a given TAD region.  There are up to 11 TAD (target address decode) regions in each home agent.  All requests destined for the memory controller must first be decoded to determine which TAD region they are in.  This event is filtered based on the TAD region ID, and covers regions 0 to 7.  This event is useful for understanding how applications are using the memory that is spread across the different memory regions.  It is particularly useful for Monroe systems that use the TAD to enable individual channels to enter self-refresh to save power.. HA Requests to a TAD Region - Group 0 -- TAD Region 7."], ["UNC_H_TAD_REQUESTS_G1:REGION10", "Counts the number of HA requests to a given TAD region.  There are up to 11 TAD (target address decode) regions in each home agent.  All requests destined for the memory controller must first be decoded to determine which TAD region they are in.  This event is filtered based on the TAD region ID, and covers regions 8 to 10.  This event is useful for understanding how applications are using the memory that is spread across the different memory regions.  It is particularly useful for Monroe systems that use the TAD to enable individual channels to enter self-refresh to save power.. HA Requests to a TAD Region - Group 1 -- TAD Region 10."], ["UNC_H_TAD_REQUESTS_G1:REGION11", "Counts the number of HA requests to a given TAD region.  There are up to 11 TAD (target address decode) regions in each home agent.  All requests destined for the memory controller must first be decoded to determine which TAD region they are in.  This event is filtered based on the TAD region ID, and covers regions 8 to 10.  This event is useful for understanding how applications are using the memory that is spread across the different memory regions.  It is particularly useful for Monroe systems that use the TAD to enable individual channels to enter self-refresh to save power.. HA Requests to a TAD Region - Group 1 -- TAD Region 11."], ["UNC_H_TAD_REQUESTS_G1:REGION8", "Counts the number of HA requests to a given TAD region.  There are up to 11 TAD (target address decode) regions in each home agent.  All requests destined for the memory controller must first be decoded to determine which TAD region they are in.  This event is filtered based on the TAD region ID, and covers regions 8 to 10.  This event is useful for understanding how applications are using the memory that is spread across the different memory regions.  It is particularly useful for Monroe systems that use the TAD to enable individual channels to enter self-refresh to save power.. HA Requests to a TAD Region - Group 1 -- TAD Region 8."], ["UNC_H_TAD_REQUESTS_G1:REGION9", "Counts the number of HA requests to a given TAD region.  There are up to 11 TAD (target address decode) regions in each home agent.  All requests destined for the memory controller must first be decoded to determine which TAD region they are in.  This event is filtered based on the TAD region ID, and covers regions 8 to 10.  This event is useful for understanding how applications are using the memory that is spread across the different memory regions.  It is particularly useful for Monroe systems that use the TAD to enable individual channels to enter self-refresh to save power.. HA Requests to a TAD Region - Group 1 -- TAD Region 9."], ["UNC_H_TRACKER_CYCLES_FULL:ALL", "Counts the number of cycles when the local HA tracker pool is completely used.  This can be used with edge detect to identify the number of situations when the pool became fully utilized.  This should not be confused with RTID credit usage -- which must be tracked inside each cbo individually -- but represents the actual tracker buffer structure.  In other words, the system could be starved for RTIDs but not fill up the HA trackers.  HA trackers are allocated as soon as a request enters the HA and is released after the snoop response and data return (or post in the case of a write) and the response is returned on the ring.. Tracker Cycles Full -- Cycles Completely Used."], ["UNC_H_TRACKER_CYCLES_FULL:GP", "Counts the number of cycles when the local HA tracker pool is completely used.  This can be used with edge detect to identify the number of situations when the pool became fully utilized.  This should not be confused with RTID credit usage -- which must be tracked inside each cbo individually -- but represents the actual tracker buffer structure.  In other words, the system could be starved for RTIDs but not fill up the HA trackers.  HA trackers are allocated as soon as a request enters the HA and is released after the snoop response and data return (or post in the case of a write) and the response is returned on the ring.. Tracker Cycles Full -- Cycles GP Completely Used."], ["UNC_H_TRACKER_CYCLES_NE:ALL", "Counts the number of cycles when the local HA tracker pool is not empty.  This can be used with edge detect to identify the number of situations when the pool became empty.  This should not be confused with RTID credit usage -- which must be tracked inside each cbo individually -- but represents the actual tracker buffer structure.  In other words, this buffer could be completely empty, but there may still be credits in use by the CBos.  This stat can be used in conjunction with the occupancy accumulation stat in order to calculate average queue occpancy.  HA trackers are allocated as soon as a request enters the HA if an HT (Home Tracker) entry is available and is released after the snoop response and data return (or post in the case of a write) and the response is returned on the ring.. Tracker Cycles Not Empty -- All Requests."], ["UNC_H_TRACKER_CYCLES_NE:LOCAL", "Counts the number of cycles when the local HA tracker pool is not empty.  This can be used with edge detect to identify the number of situations when the pool became empty.  This should not be confused with RTID credit usage -- which must be tracked inside each cbo individually -- but represents the actual tracker buffer structure.  In other words, this buffer could be completely empty, but there may still be credits in use by the CBos.  This stat can be used in conjunction with the occupancy accumulation stat in order to calculate average queue occpancy.  HA trackers are allocated as soon as a request enters the HA if an HT (Home Tracker) entry is available and is released after the snoop response and data return (or post in the case of a write) and the response is returned on the ring.. Tracker Cycles Not Empty -- Local Requests."], ["UNC_H_TRACKER_CYCLES_NE:REMOTE", "Counts the number of cycles when the local HA tracker pool is not empty.  This can be used with edge detect to identify the number of situations when the pool became empty.  This should not be confused with RTID credit usage -- which must be tracked inside each cbo individually -- but represents the actual tracker buffer structure.  In other words, this buffer could be completely empty, but there may still be credits in use by the CBos.  This stat can be used in conjunction with the occupancy accumulation stat in order to calculate average queue occpancy.  HA trackers are allocated as soon as a request enters the HA if an HT (Home Tracker) entry is available and is released after the snoop response and data return (or post in the case of a write) and the response is returned on the ring.. Tracker Cycles Not Empty -- Remote Requests."], ["UNC_H_TRACKER_OCCUPANCY:INVITOE_LOCAL", "Accumulates the occupancy of the local HA tracker pool in every cycle.  This can be used in conjection with the not empty stat to calculate average queue occupancy or the allocations stat in order to calculate average queue latency.  HA trackers are allocated as soon as a request enters the HA if a HT (Home Tracker) entry is available and is released after the snoop response and data return (or post in the case of a write) and the response is returned on the rhe ring.. Tracker Occupancy Accumultor -- Local InvItoE Requests."], ["UNC_H_TRACKER_OCCUPANCY:INVITOE_REMOTE", "Accumulates the occupancy of the local HA tracker pool in every cycle.  This can be used in conjection with the not empty stat to calculate average queue occupancy or the allocations stat in order to calculate average queue latency.  HA trackers are allocated as soon as a request enters the HA if a HT (Home Tracker) entry is available and is released after the snoop response and data return (or post in the case of a write) and the response is returned on the rhe ring.. Tracker Occupancy Accumultor -- Remote InvItoE Requests."], ["UNC_H_TRACKER_OCCUPANCY:READS_LOCAL", "Accumulates the occupancy of the local HA tracker pool in every cycle.  This can be used in conjection with the not empty stat to calculate average queue occupancy or the allocations stat in order to calculate average queue latency.  HA trackers are allocated as soon as a request enters the HA if a HT (Home Tracker) entry is available and is released after the snoop response and data return (or post in the case of a write) and the response is returned on the rhe ring.. Tracker Occupancy Accumultor -- Local Read Requests."], ["UNC_H_TRACKER_OCCUPANCY:READS_REMOTE", "Accumulates the occupancy of the local HA tracker pool in every cycle.  This can be used in conjection with the not empty stat to calculate average queue occupancy or the allocations stat in order to calculate average queue latency.  HA trackers are allocated as soon as a request enters the HA if a HT (Home Tracker) entry is available and is released after the snoop response and data return (or post in the case of a write) and the response is returned on the rhe ring.. Tracker Occupancy Accumultor -- Remote Read Requests."], ["UNC_H_TRACKER_OCCUPANCY:WRITES_LOCAL", "Accumulates the occupancy of the local HA tracker pool in every cycle.  This can be used in conjection with the not empty stat to calculate average queue occupancy or the allocations stat in order to calculate average queue latency.  HA trackers are allocated as soon as a request enters the HA if a HT (Home Tracker) entry is available and is released after the snoop response and data return (or post in the case of a write) and the response is returned on the rhe ring.. Tracker Occupancy Accumultor -- Local Write Requests."], ["UNC_H_TRACKER_OCCUPANCY:WRITES_REMOTE", "Accumulates the occupancy of the local HA tracker pool in every cycle.  This can be used in conjection with the not empty stat to calculate average queue occupancy or the allocations stat in order to calculate average queue latency.  HA trackers are allocated as soon as a request enters the HA if a HT (Home Tracker) entry is available and is released after the snoop response and data return (or post in the case of a write) and the response is returned on the rhe ring.. Tracker Occupancy Accumultor -- Remote Write Requests."], ["UNC_H_TRACKER_PENDING_OCCUPANCY:LOCAL", "Accumulates the number of transactions that have data from the memory controller until they get scheduled to the Egress.  This can be used to calculate the queuing latency for two things.  (1) If the system is waiting for snoops, this will increase.  (2) If the system cant schedule to the Egress because of either (a) Egress Credits or (b) QPI BL IGR credits for remote requestss.. Data Pending Occupancy Accumultor -- Local Requests."], ["UNC_H_TRACKER_PENDING_OCCUPANCY:REMOTE", "Accumulates the number of transactions that have data from the memory controller until they get scheduled to the Egress.  This can be used to calculate the queuing latency for two things.  (1) If the system is waiting for snoops, this will increase.  (2) If the system cant schedule to the Egress because of either (a) Egress Credits or (b) QPI BL IGR credits for remote requestss.. Data Pending Occupancy Accumultor -- Remote Requests."], ["UNC_H_TXR_AD_CYCLES_FULL:ALL", "AD Egress Full. All."], ["UNC_H_TXR_AD_CYCLES_FULL:SCHED0", "AD Egress Full. Scheduler 0."], ["UNC_H_TXR_AD_CYCLES_FULL:SCHED1", "AD Egress Full. Scheduler 1."], ["UNC_H_TXR_AK_CYCLES_FULL:ALL", "AK Egress Full. All."], ["UNC_H_TXR_AK_CYCLES_FULL:SCHED0", "AK Egress Full. Scheduler 0."], ["UNC_H_TXR_AK_CYCLES_FULL:SCHED1", "AK Egress Full. Scheduler 1."], ["UNC_H_TXR_BL:DRS_CACHE", "Counts the number of DRS messages sent out on the BL ring.  This can be filtered by the destination.. Outbound DRS Ring Transactions to Cache -- Data to Cache."], ["UNC_H_TXR_BL:DRS_CORE", "Counts the number of DRS messages sent out on the BL ring.  This can be filtered by the destination.. Outbound DRS Ring Transactions to Cache -- Data to Core."], ["UNC_H_TXR_BL:DRS_QPI", "Counts the number of DRS messages sent out on the BL ring.  This can be filtered by the destination.. Outbound DRS Ring Transactions to Cache -- Data to QPI."], ["UNC_H_TXR_BL_CYCLES_FULL:ALL", "BL Egress Full. All."], ["UNC_H_TXR_BL_CYCLES_FULL:SCHED0", "BL Egress Full. Scheduler 0."], ["UNC_H_TXR_BL_CYCLES_FULL:SCHED1", "BL Egress Full. Scheduler 1."], ["UNC_H_TXR_STARVED:AK", "Counts injection starvation.  This starvation is triggered when the Egress cannot send a transaction onto the ring for a long period of time.. Injection Starvation -- For AK Ring."], ["UNC_H_TXR_STARVED:BL", "Counts injection starvation.  This starvation is triggered when the Egress cannot send a transaction onto the ring for a long period of time.. Injection Starvation -- For BL Ring."], ["UNC_H_WPQ_CYCLES_NO_REG_CREDITS:CHN0", "Counts the number of cycles when there are no regular credits available for posting writes from the HA into the iMC.  In order to send writes into the memory controller, the HA must first acquire a credit for the iMCs WPQ (write pending queue).  This queue is broken into regular credits/buffers that are used by general writes, and special requests such as ISOCH writes.  This count only tracks the regular credits  Common high banwidth workloads should be able to make use of all of the regular buffers, but it will be difficult (and uncommon) to make use of both the regular and special buffers at the same time.  One can filter based on the memory controller channel.  One or more channels can be tracked at a given iven time.. HA iMC CHN0 WPQ Credits Empty - Regular -- Channel 0."], ["UNC_H_WPQ_CYCLES_NO_REG_CREDITS:CHN1", "Counts the number of cycles when there are no regular credits available for posting writes from the HA into the iMC.  In order to send writes into the memory controller, the HA must first acquire a credit for the iMCs WPQ (write pending queue).  This queue is broken into regular credits/buffers that are used by general writes, and special requests such as ISOCH writes.  This count only tracks the regular credits  Common high banwidth workloads should be able to make use of all of the regular buffers, but it will be difficult (and uncommon) to make use of both the regular and special buffers at the same time.  One can filter based on the memory controller channel.  One or more channels can be tracked at a given iven time.. HA iMC CHN0 WPQ Credits Empty - Regular -- Channel 1."], ["UNC_H_WPQ_CYCLES_NO_REG_CREDITS:CHN2", "Counts the number of cycles when there are no regular credits available for posting writes from the HA into the iMC.  In order to send writes into the memory controller, the HA must first acquire a credit for the iMCs WPQ (write pending queue).  This queue is broken into regular credits/buffers that are used by general writes, and special requests such as ISOCH writes.  This count only tracks the regular credits  Common high banwidth workloads should be able to make use of all of the regular buffers, but it will be difficult (and uncommon) to make use of both the regular and special buffers at the same time.  One can filter based on the memory controller channel.  One or more channels can be tracked at a given iven time.. HA iMC CHN0 WPQ Credits Empty - Regular -- Channel 2."], ["UNC_H_WPQ_CYCLES_NO_REG_CREDITS:CHN3", "Counts the number of cycles when there are no regular credits available for posting writes from the HA into the iMC.  In order to send writes into the memory controller, the HA must first acquire a credit for the iMCs WPQ (write pending queue).  This queue is broken into regular credits/buffers that are used by general writes, and special requests such as ISOCH writes.  This count only tracks the regular credits  Common high banwidth workloads should be able to make use of all of the regular buffers, but it will be difficult (and uncommon) to make use of both the regular and special buffers at the same time.  One can filter based on the memory controller channel.  One or more channels can be tracked at a given iven time.. HA iMC CHN0 WPQ Credits Empty - Regular -- Channel 3."]], "features": {"name": "Intel BroadwellX HA 0 uncore", "no_events": 47, "max_encoding": 3, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_imc0": {"events": [["UNC_M_CLOCKTICKS", "IMC Uncore clockticks (fixed counter)."], ["UNC_M_ACT_COUNT:BYP", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Write."], ["UNC_M_ACT_COUNT:RD", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Read."], ["UNC_M_ACT_COUNT:WR", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Write."], ["UNC_M_BYP_CMDS:ACT", "TBD. ACT command issued by 2 cycle bypass."], ["UNC_M_BYP_CMDS:CAS", "TBD. CAS command issued by 2 cycle bypass."], ["UNC_M_BYP_CMDS:PRE", "TBD. PRE command issued by 2 cycle bypass."], ["UNC_M_CAS_COUNT:ALL", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM WR_CAS (w/ and w/out auto-pre)."], ["UNC_M_CAS_COUNT:RD", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM Reads (RD_CAS + Underfills)."], ["UNC_M_CAS_COUNT:RD_REG", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM RD_CAS (w/ and w/out auto-pre)."], ["UNC_M_CAS_COUNT:RD_RMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Read CAS issued in RMM."], ["UNC_M_CAS_COUNT:RD_UNDERFILL", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Underfill Read Issued."], ["UNC_M_CAS_COUNT:RD_WMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Read CAS issued in WMM."], ["UNC_M_CAS_COUNT:WR", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM WR_CAS (both Modes)."], ["UNC_M_CAS_COUNT:WR_RMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. DRAM WR_CAS (w/ and w/out auto-pre) in Read Major Mode."], ["UNC_M_CAS_COUNT:WR_WMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. DRAM WR_CAS (w/ and w/out auto-pre) in Write Major Mode."], ["UNC_M_DCLOCKTICKS", "TBD."], ["UNC_M_DRAM_PRE_ALL", "Counts the number of times that the precharge all command was sent.."], ["UNC_M_DRAM_REFRESH:HIGH", "Counts the number of refreshes issued.. Number of DRAM Refreshes Issued."], ["UNC_M_DRAM_REFRESH:PANIC", "Counts the number of refreshes issued.. Number of DRAM Refreshes Issued."], ["UNC_M_ECC_CORRECTABLE_ERRORS", "Counts the number of ECC errors detected and corrected by the iMC on this channel.  This counter is only useful with ECC DRAM devices.  This count will increment one time for each correction regardless of the number of bits corrected.  The iMC can correct up to 4 bit errors in independent channel mode and 8 bit erros in lockstep mode.."], ["UNC_M_MAJOR_MODES:ISOCH", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Isoch Major Mode."], ["UNC_M_MAJOR_MODES:PARTIAL", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Partial Major Mode."], ["UNC_M_MAJOR_MODES:READ", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Read Major Mode."], ["UNC_M_MAJOR_MODES:WRITE", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Write Major Mode."], ["UNC_M_POWER_CHANNEL_DLLOFF", "Number of cycles when all the ranks in the channel are in CKE Slow (DLLOFF) mode.."], ["UNC_M_POWER_CHANNEL_PPD", "Number of cycles when all the ranks in the channel are in PPD mode.  If IBT=off is enabled, then this can be used to count those cycles.  If it is not enabled, then this can count the number of cycles when that could have been taken advantage of.."], ["UNC_M_POWER_CKE_CYCLES:RANK0", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank0 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK1", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank1 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK2", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank2 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK3", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank3 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK4", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank4 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK5", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank5 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK6", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank6 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK7", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank7 -- DIMM ID."], ["UNC_M_POWER_CRITICAL_THROTTLE_CYCLES", "Counts the number of cycles when the iMC is in critical thermal throttling.  When this happens, all traffic is blocked.  This should be rare unless something bad is going on in the platform.  There is no filtering by rank for this event.."], ["UNC_M_POWER_PCU_THROTTLING", "TBD."], ["UNC_M_POWER_SELF_REFRESH", "Counts the number of cycles when the iMC is in self-refresh and the iMC still has a clock.  This happens in some package C-states.  For example, the PCU may ask the iMC to enter self-refresh even though some of the cores are still processing.  One use of this is for Monroe technology.  Self-refresh is required during package C3 and C6, but there is no clock in the iMC at this time, so it is not possible to count these cases.."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK0", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank0 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK1", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank1 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK2", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank2 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK3", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank3 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK4", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank4 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK5", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank5 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK6", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank6 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK7", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank7 -- DIMM ID."], ["UNC_M_PREEMPTION:RD_PREEMPT_RD", "Counts the number of times a read in the iMC preempts another read or write.  Generally reads to an open page are issued ahead of requests to closed pages.  This improves the page hit rate of the system.  However, high priority requests can cause pages of active requests to be closed in order to get them out.  This will reduce the latency of the high-priority request at the expense of lower bandwidth and increased overall average latency.. Read Preemption Count -- Read over Read Preemption."], ["UNC_M_PREEMPTION:RD_PREEMPT_WR", "Counts the number of times a read in the iMC preempts another read or write.  Generally reads to an open page are issued ahead of requests to closed pages.  This improves the page hit rate of the system.  However, high priority requests can cause pages of active requests to be closed in order to get them out.  This will reduce the latency of the high-priority request at the expense of lower bandwidth and increased overall average latency.. Read Preemption Count -- Read over Write Preemption."], ["UNC_M_PRE_COUNT:BYP", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to bypass."], ["UNC_M_PRE_COUNT:PAGE_CLOSE", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to timer expiration."], ["UNC_M_PRE_COUNT:PAGE_MISS", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharges due to page miss."], ["UNC_M_PRE_COUNT:RD", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to read."], ["UNC_M_PRE_COUNT:WR", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to write."], ["UNC_M_RD_CAS_PRIO:HIGH", "TBD. Read CAS issued with HIGH priority."], ["UNC_M_RD_CAS_PRIO:LOW", "TBD. Read CAS issued with LOW priority."], ["UNC_M_RD_CAS_PRIO:MED", "TBD. Read CAS issued with MEDIUM priority."], ["UNC_M_RD_CAS_PRIO:PANIC", "TBD. Read CAS issued with PANIC NON ISOCH priority (starved)."], ["UNC_M_RD_CAS_RANK0:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK0:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK0:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK0:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK0:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK0:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK0:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK0:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK0:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK0:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK0:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK0:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK0:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK0:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK0:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK0:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK0:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK0:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK0:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK0:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK0:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK1:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK1:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK1:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK1:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK1:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK1:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK1:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK1:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK1:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK1:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK1:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK1:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK1:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK1:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK1:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK1:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK1:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK1:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK1:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK1:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK1:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK2:BANK0", "TBD. RD_CAS Access to Rank 2 -- Bank 0."], ["UNC_M_RD_CAS_RANK4:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK4:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK4:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK4:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK4:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK4:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK4:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK4:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK4:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK4:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK4:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK4:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK4:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK4:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK4:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK4:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK4:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK4:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK4:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK4:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK4:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK5:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK5:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK5:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK5:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK5:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK5:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK5:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK5:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK5:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK5:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK5:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK5:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK5:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK5:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK5:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK5:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK5:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK5:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK5:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK5:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK5:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK6:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK6:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK6:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK6:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK6:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK6:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK6:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK6:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK6:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK6:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK6:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK6:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK6:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK6:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK6:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK6:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK6:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK6:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK6:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK6:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK6:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK7:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK7:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK7:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK7:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK7:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK7:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK7:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK7:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK7:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK7:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK7:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK7:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK7:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK7:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK7:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK7:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK7:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK7:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK7:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK7:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK7:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RPQ_CYCLES_NE", "Counts the number of cycles that the Read Pending Queue is not empty.  This can then be used to calculate the average occupancy (in conjunction with the Read Pending Queue Occupancy count).  The RPQ is used to schedule reads out to the memory controller and to track the requests.  Requests allocate into the RPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after the CAS command has been issued to memory.  This filter is to be used in conjunction with the occupancy filter so that one can correctly track the average occupancies for schedulable entries and scheduled requests.."], ["UNC_M_RPQ_INSERTS", "Counts the number of allocations into the Read Pending Queue.  This queue is used to schedule reads out to the memory controller and to track the requests.  Requests allocate into the RPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after the CAS command has been issued to memory.  This includes both ISOCH and non-ISOCH requests.."], ["UNC_M_VMSE_MXB_WR_OCCUPANCY", "TBD."], ["UNC_M_VMSE_WR_PUSH:RMM", "TBD. VMSE WR PUSH issued -- VMSE write PUSH issued in RMM."], ["UNC_M_VMSE_WR_PUSH:WMM", "TBD. VMSE WR PUSH issued -- VMSE write PUSH issued in WMM."], ["UNC_M_WMM_TO_RMM:LOW_THRESH", "TBD. Transition from WMM to RMM because of low threshold -- Transition from WMM to RMM because of starve counter."], ["UNC_M_WMM_TO_RMM:STARVE", "TBD. Transition from WMM to RMM because of low threshold -- ."], ["UNC_M_WMM_TO_RMM:VMSE_RETRY", "TBD. Transition from WMM to RMM because of low threshold -- ."], ["UNC_M_WPQ_CYCLES_FULL", "Counts the number of cycles when the Write Pending Queue is full.  When the WPQ is full, the HA will not be able to issue any additional read requests into the iMC.  This count should be similar count in the HA which tracks the number of cycles that the HA has no WPQ credits, just somewhat smaller to account for the credit return overhead.."], ["UNC_M_WPQ_CYCLES_NE", "Counts the number of cycles that the Write Pending Queue is not empty.  This can then be used to calculate the average queue occupancy (in conjunction with the WPQ Occupancy Accumulation count).  The WPQ is used to schedule write out to the memory controller and to track the writes.  Requests allocate into the WPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after being issued to DRAM.  Write requests themselves are able to complete (from the perspective of the rest of the system) as soon they have posted to the iMC.  This is not to be confused with actually performing the write to DRAM.  Therefore, the average latency for this queue is actually not useful for deconstruction intermediate write latencieies.."], ["UNC_M_WPQ_READ_HIT", "Counts the number of times a request hits in the WPQ (write-pending queue).  The iMC allows writes and reads to pass up other writes to different addresses.  Before a read or a write is issued, it will first CAM the WPQ to see if there is a write pending to that address.  When reads hit, they are able to directly pull their data from the WPQ instead of going to memory.  Writes that hit will overwrite the existing data.  Partial writes that hit will not need to do underfill reads and will simply update their relevant sections.."], ["UNC_M_WPQ_WRITE_HIT", "Counts the number of times a request hits in the WPQ (write-pending queue).  The iMC allows writes and reads to pass up other writes to different addresses.  Before a read or a write is issued, it will first CAM the WPQ to see if there is a write pending to that address.  When reads hit, they are able to directly pull their data from the WPQ instead of going to memory.  Writes that hit will overwrite the existing data.  Partial writes that hit will not need to do underfill reads and will simply update their relevant sections.."], ["UNC_M_WRONG_MM", "TBD."], ["UNC_M_WR_CAS_RANK0:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK0:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK0:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK0:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK0:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK0:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK0:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK0:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK0:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK0:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK0:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK0:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK0:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK0:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK0:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK0:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK0:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK0:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK0:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK0:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK0:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK1:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK1:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK1:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK1:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK1:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK1:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK1:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK1:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK1:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK1:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK1:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK1:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK1:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK1:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK1:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK1:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK1:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK1:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK1:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK1:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK1:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK4:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK4:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK4:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK4:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK4:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK4:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK4:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK4:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK4:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK4:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK4:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK4:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK4:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK4:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK4:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK4:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK4:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK4:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK4:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK4:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK4:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK5:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK5:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK5:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK5:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK5:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK5:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK5:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK5:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK5:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK5:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK5:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK5:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK5:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK5:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK5:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK5:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK5:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK5:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK5:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK5:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK5:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK6:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK6:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK6:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK6:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK6:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK6:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK6:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK6:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK6:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK6:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK6:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK6:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK6:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK6:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK6:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK6:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK6:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK6:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK6:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK6:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK6:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK7:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK7:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK7:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK7:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK7:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK7:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK7:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK7:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK7:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK7:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK7:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK7:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK7:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK7:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK7:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK7:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK7:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK7:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK7:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK7:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK7:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."]], "features": {"name": "Intel BroadwellX IMC0 uncore", "no_events": 42, "max_encoding": 1, "counters": 5, "type": "uncore PMU"}}, "bdx_unc_imc1": {"events": [["UNC_M_CLOCKTICKS", "IMC Uncore clockticks (fixed counter)."], ["UNC_M_ACT_COUNT:BYP", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Write."], ["UNC_M_ACT_COUNT:RD", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Read."], ["UNC_M_ACT_COUNT:WR", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Write."], ["UNC_M_BYP_CMDS:ACT", "TBD. ACT command issued by 2 cycle bypass."], ["UNC_M_BYP_CMDS:CAS", "TBD. CAS command issued by 2 cycle bypass."], ["UNC_M_BYP_CMDS:PRE", "TBD. PRE command issued by 2 cycle bypass."], ["UNC_M_CAS_COUNT:ALL", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM WR_CAS (w/ and w/out auto-pre)."], ["UNC_M_CAS_COUNT:RD", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM Reads (RD_CAS + Underfills)."], ["UNC_M_CAS_COUNT:RD_REG", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM RD_CAS (w/ and w/out auto-pre)."], ["UNC_M_CAS_COUNT:RD_RMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Read CAS issued in RMM."], ["UNC_M_CAS_COUNT:RD_UNDERFILL", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Underfill Read Issued."], ["UNC_M_CAS_COUNT:RD_WMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Read CAS issued in WMM."], ["UNC_M_CAS_COUNT:WR", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM WR_CAS (both Modes)."], ["UNC_M_CAS_COUNT:WR_RMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. DRAM WR_CAS (w/ and w/out auto-pre) in Read Major Mode."], ["UNC_M_CAS_COUNT:WR_WMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. DRAM WR_CAS (w/ and w/out auto-pre) in Write Major Mode."], ["UNC_M_DCLOCKTICKS", "TBD."], ["UNC_M_DRAM_PRE_ALL", "Counts the number of times that the precharge all command was sent.."], ["UNC_M_DRAM_REFRESH:HIGH", "Counts the number of refreshes issued.. Number of DRAM Refreshes Issued."], ["UNC_M_DRAM_REFRESH:PANIC", "Counts the number of refreshes issued.. Number of DRAM Refreshes Issued."], ["UNC_M_ECC_CORRECTABLE_ERRORS", "Counts the number of ECC errors detected and corrected by the iMC on this channel.  This counter is only useful with ECC DRAM devices.  This count will increment one time for each correction regardless of the number of bits corrected.  The iMC can correct up to 4 bit errors in independent channel mode and 8 bit erros in lockstep mode.."], ["UNC_M_MAJOR_MODES:ISOCH", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Isoch Major Mode."], ["UNC_M_MAJOR_MODES:PARTIAL", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Partial Major Mode."], ["UNC_M_MAJOR_MODES:READ", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Read Major Mode."], ["UNC_M_MAJOR_MODES:WRITE", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Write Major Mode."], ["UNC_M_POWER_CHANNEL_DLLOFF", "Number of cycles when all the ranks in the channel are in CKE Slow (DLLOFF) mode.."], ["UNC_M_POWER_CHANNEL_PPD", "Number of cycles when all the ranks in the channel are in PPD mode.  If IBT=off is enabled, then this can be used to count those cycles.  If it is not enabled, then this can count the number of cycles when that could have been taken advantage of.."], ["UNC_M_POWER_CKE_CYCLES:RANK0", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank0 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK1", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank1 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK2", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank2 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK3", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank3 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK4", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank4 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK5", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank5 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK6", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank6 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK7", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank7 -- DIMM ID."], ["UNC_M_POWER_CRITICAL_THROTTLE_CYCLES", "Counts the number of cycles when the iMC is in critical thermal throttling.  When this happens, all traffic is blocked.  This should be rare unless something bad is going on in the platform.  There is no filtering by rank for this event.."], ["UNC_M_POWER_PCU_THROTTLING", "TBD."], ["UNC_M_POWER_SELF_REFRESH", "Counts the number of cycles when the iMC is in self-refresh and the iMC still has a clock.  This happens in some package C-states.  For example, the PCU may ask the iMC to enter self-refresh even though some of the cores are still processing.  One use of this is for Monroe technology.  Self-refresh is required during package C3 and C6, but there is no clock in the iMC at this time, so it is not possible to count these cases.."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK0", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank0 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK1", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank1 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK2", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank2 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK3", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank3 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK4", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank4 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK5", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank5 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK6", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank6 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK7", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank7 -- DIMM ID."], ["UNC_M_PREEMPTION:RD_PREEMPT_RD", "Counts the number of times a read in the iMC preempts another read or write.  Generally reads to an open page are issued ahead of requests to closed pages.  This improves the page hit rate of the system.  However, high priority requests can cause pages of active requests to be closed in order to get them out.  This will reduce the latency of the high-priority request at the expense of lower bandwidth and increased overall average latency.. Read Preemption Count -- Read over Read Preemption."], ["UNC_M_PREEMPTION:RD_PREEMPT_WR", "Counts the number of times a read in the iMC preempts another read or write.  Generally reads to an open page are issued ahead of requests to closed pages.  This improves the page hit rate of the system.  However, high priority requests can cause pages of active requests to be closed in order to get them out.  This will reduce the latency of the high-priority request at the expense of lower bandwidth and increased overall average latency.. Read Preemption Count -- Read over Write Preemption."], ["UNC_M_PRE_COUNT:BYP", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to bypass."], ["UNC_M_PRE_COUNT:PAGE_CLOSE", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to timer expiration."], ["UNC_M_PRE_COUNT:PAGE_MISS", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharges due to page miss."], ["UNC_M_PRE_COUNT:RD", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to read."], ["UNC_M_PRE_COUNT:WR", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to write."], ["UNC_M_RD_CAS_PRIO:HIGH", "TBD. Read CAS issued with HIGH priority."], ["UNC_M_RD_CAS_PRIO:LOW", "TBD. Read CAS issued with LOW priority."], ["UNC_M_RD_CAS_PRIO:MED", "TBD. Read CAS issued with MEDIUM priority."], ["UNC_M_RD_CAS_PRIO:PANIC", "TBD. Read CAS issued with PANIC NON ISOCH priority (starved)."], ["UNC_M_RD_CAS_RANK0:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK0:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK0:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK0:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK0:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK0:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK0:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK0:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK0:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK0:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK0:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK0:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK0:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK0:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK0:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK0:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK0:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK0:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK0:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK0:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK0:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK1:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK1:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK1:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK1:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK1:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK1:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK1:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK1:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK1:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK1:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK1:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK1:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK1:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK1:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK1:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK1:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK1:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK1:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK1:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK1:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK1:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK2:BANK0", "TBD. RD_CAS Access to Rank 2 -- Bank 0."], ["UNC_M_RD_CAS_RANK4:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK4:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK4:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK4:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK4:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK4:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK4:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK4:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK4:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK4:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK4:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK4:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK4:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK4:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK4:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK4:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK4:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK4:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK4:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK4:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK4:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK5:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK5:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK5:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK5:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK5:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK5:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK5:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK5:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK5:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK5:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK5:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK5:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK5:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK5:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK5:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK5:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK5:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK5:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK5:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK5:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK5:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK6:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK6:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK6:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK6:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK6:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK6:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK6:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK6:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK6:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK6:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK6:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK6:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK6:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK6:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK6:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK6:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK6:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK6:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK6:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK6:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK6:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK7:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK7:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK7:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK7:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK7:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK7:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK7:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK7:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK7:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK7:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK7:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK7:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK7:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK7:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK7:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK7:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK7:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK7:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK7:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK7:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK7:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RPQ_CYCLES_NE", "Counts the number of cycles that the Read Pending Queue is not empty.  This can then be used to calculate the average occupancy (in conjunction with the Read Pending Queue Occupancy count).  The RPQ is used to schedule reads out to the memory controller and to track the requests.  Requests allocate into the RPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after the CAS command has been issued to memory.  This filter is to be used in conjunction with the occupancy filter so that one can correctly track the average occupancies for schedulable entries and scheduled requests.."], ["UNC_M_RPQ_INSERTS", "Counts the number of allocations into the Read Pending Queue.  This queue is used to schedule reads out to the memory controller and to track the requests.  Requests allocate into the RPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after the CAS command has been issued to memory.  This includes both ISOCH and non-ISOCH requests.."], ["UNC_M_VMSE_MXB_WR_OCCUPANCY", "TBD."], ["UNC_M_VMSE_WR_PUSH:RMM", "TBD. VMSE WR PUSH issued -- VMSE write PUSH issued in RMM."], ["UNC_M_VMSE_WR_PUSH:WMM", "TBD. VMSE WR PUSH issued -- VMSE write PUSH issued in WMM."], ["UNC_M_WMM_TO_RMM:LOW_THRESH", "TBD. Transition from WMM to RMM because of low threshold -- Transition from WMM to RMM because of starve counter."], ["UNC_M_WMM_TO_RMM:STARVE", "TBD. Transition from WMM to RMM because of low threshold -- ."], ["UNC_M_WMM_TO_RMM:VMSE_RETRY", "TBD. Transition from WMM to RMM because of low threshold -- ."], ["UNC_M_WPQ_CYCLES_FULL", "Counts the number of cycles when the Write Pending Queue is full.  When the WPQ is full, the HA will not be able to issue any additional read requests into the iMC.  This count should be similar count in the HA which tracks the number of cycles that the HA has no WPQ credits, just somewhat smaller to account for the credit return overhead.."], ["UNC_M_WPQ_CYCLES_NE", "Counts the number of cycles that the Write Pending Queue is not empty.  This can then be used to calculate the average queue occupancy (in conjunction with the WPQ Occupancy Accumulation count).  The WPQ is used to schedule write out to the memory controller and to track the writes.  Requests allocate into the WPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after being issued to DRAM.  Write requests themselves are able to complete (from the perspective of the rest of the system) as soon they have posted to the iMC.  This is not to be confused with actually performing the write to DRAM.  Therefore, the average latency for this queue is actually not useful for deconstruction intermediate write latencieies.."], ["UNC_M_WPQ_READ_HIT", "Counts the number of times a request hits in the WPQ (write-pending queue).  The iMC allows writes and reads to pass up other writes to different addresses.  Before a read or a write is issued, it will first CAM the WPQ to see if there is a write pending to that address.  When reads hit, they are able to directly pull their data from the WPQ instead of going to memory.  Writes that hit will overwrite the existing data.  Partial writes that hit will not need to do underfill reads and will simply update their relevant sections.."], ["UNC_M_WPQ_WRITE_HIT", "Counts the number of times a request hits in the WPQ (write-pending queue).  The iMC allows writes and reads to pass up other writes to different addresses.  Before a read or a write is issued, it will first CAM the WPQ to see if there is a write pending to that address.  When reads hit, they are able to directly pull their data from the WPQ instead of going to memory.  Writes that hit will overwrite the existing data.  Partial writes that hit will not need to do underfill reads and will simply update their relevant sections.."], ["UNC_M_WRONG_MM", "TBD."], ["UNC_M_WR_CAS_RANK0:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK0:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK0:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK0:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK0:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK0:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK0:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK0:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK0:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK0:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK0:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK0:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK0:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK0:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK0:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK0:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK0:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK0:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK0:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK0:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK0:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK1:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK1:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK1:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK1:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK1:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK1:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK1:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK1:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK1:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK1:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK1:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK1:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK1:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK1:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK1:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK1:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK1:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK1:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK1:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK1:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK1:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK4:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK4:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK4:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK4:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK4:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK4:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK4:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK4:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK4:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK4:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK4:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK4:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK4:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK4:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK4:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK4:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK4:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK4:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK4:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK4:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK4:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK5:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK5:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK5:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK5:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK5:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK5:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK5:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK5:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK5:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK5:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK5:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK5:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK5:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK5:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK5:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK5:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK5:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK5:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK5:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK5:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK5:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK6:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK6:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK6:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK6:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK6:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK6:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK6:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK6:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK6:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK6:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK6:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK6:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK6:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK6:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK6:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK6:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK6:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK6:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK6:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK6:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK6:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK7:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK7:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK7:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK7:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK7:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK7:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK7:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK7:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK7:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK7:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK7:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK7:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK7:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK7:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK7:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK7:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK7:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK7:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK7:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK7:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK7:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."]], "features": {"name": "Intel BroadwellX IMC1 uncore", "no_events": 42, "max_encoding": 1, "counters": 5, "type": "uncore PMU"}}, "bdx_unc_imc2": {"events": [["UNC_M_CLOCKTICKS", "IMC Uncore clockticks (fixed counter)."], ["UNC_M_ACT_COUNT:BYP", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Write."], ["UNC_M_ACT_COUNT:RD", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Read."], ["UNC_M_ACT_COUNT:WR", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Write."], ["UNC_M_BYP_CMDS:ACT", "TBD. ACT command issued by 2 cycle bypass."], ["UNC_M_BYP_CMDS:CAS", "TBD. CAS command issued by 2 cycle bypass."], ["UNC_M_BYP_CMDS:PRE", "TBD. PRE command issued by 2 cycle bypass."], ["UNC_M_CAS_COUNT:ALL", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM WR_CAS (w/ and w/out auto-pre)."], ["UNC_M_CAS_COUNT:RD", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM Reads (RD_CAS + Underfills)."], ["UNC_M_CAS_COUNT:RD_REG", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM RD_CAS (w/ and w/out auto-pre)."], ["UNC_M_CAS_COUNT:RD_RMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Read CAS issued in RMM."], ["UNC_M_CAS_COUNT:RD_UNDERFILL", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Underfill Read Issued."], ["UNC_M_CAS_COUNT:RD_WMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Read CAS issued in WMM."], ["UNC_M_CAS_COUNT:WR", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM WR_CAS (both Modes)."], ["UNC_M_CAS_COUNT:WR_RMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. DRAM WR_CAS (w/ and w/out auto-pre) in Read Major Mode."], ["UNC_M_CAS_COUNT:WR_WMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. DRAM WR_CAS (w/ and w/out auto-pre) in Write Major Mode."], ["UNC_M_DCLOCKTICKS", "TBD."], ["UNC_M_DRAM_PRE_ALL", "Counts the number of times that the precharge all command was sent.."], ["UNC_M_DRAM_REFRESH:HIGH", "Counts the number of refreshes issued.. Number of DRAM Refreshes Issued."], ["UNC_M_DRAM_REFRESH:PANIC", "Counts the number of refreshes issued.. Number of DRAM Refreshes Issued."], ["UNC_M_ECC_CORRECTABLE_ERRORS", "Counts the number of ECC errors detected and corrected by the iMC on this channel.  This counter is only useful with ECC DRAM devices.  This count will increment one time for each correction regardless of the number of bits corrected.  The iMC can correct up to 4 bit errors in independent channel mode and 8 bit erros in lockstep mode.."], ["UNC_M_MAJOR_MODES:ISOCH", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Isoch Major Mode."], ["UNC_M_MAJOR_MODES:PARTIAL", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Partial Major Mode."], ["UNC_M_MAJOR_MODES:READ", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Read Major Mode."], ["UNC_M_MAJOR_MODES:WRITE", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Write Major Mode."], ["UNC_M_POWER_CHANNEL_DLLOFF", "Number of cycles when all the ranks in the channel are in CKE Slow (DLLOFF) mode.."], ["UNC_M_POWER_CHANNEL_PPD", "Number of cycles when all the ranks in the channel are in PPD mode.  If IBT=off is enabled, then this can be used to count those cycles.  If it is not enabled, then this can count the number of cycles when that could have been taken advantage of.."], ["UNC_M_POWER_CKE_CYCLES:RANK0", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank0 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK1", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank1 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK2", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank2 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK3", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank3 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK4", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank4 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK5", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank5 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK6", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank6 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK7", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank7 -- DIMM ID."], ["UNC_M_POWER_CRITICAL_THROTTLE_CYCLES", "Counts the number of cycles when the iMC is in critical thermal throttling.  When this happens, all traffic is blocked.  This should be rare unless something bad is going on in the platform.  There is no filtering by rank for this event.."], ["UNC_M_POWER_PCU_THROTTLING", "TBD."], ["UNC_M_POWER_SELF_REFRESH", "Counts the number of cycles when the iMC is in self-refresh and the iMC still has a clock.  This happens in some package C-states.  For example, the PCU may ask the iMC to enter self-refresh even though some of the cores are still processing.  One use of this is for Monroe technology.  Self-refresh is required during package C3 and C6, but there is no clock in the iMC at this time, so it is not possible to count these cases.."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK0", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank0 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK1", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank1 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK2", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank2 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK3", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank3 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK4", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank4 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK5", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank5 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK6", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank6 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK7", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank7 -- DIMM ID."], ["UNC_M_PREEMPTION:RD_PREEMPT_RD", "Counts the number of times a read in the iMC preempts another read or write.  Generally reads to an open page are issued ahead of requests to closed pages.  This improves the page hit rate of the system.  However, high priority requests can cause pages of active requests to be closed in order to get them out.  This will reduce the latency of the high-priority request at the expense of lower bandwidth and increased overall average latency.. Read Preemption Count -- Read over Read Preemption."], ["UNC_M_PREEMPTION:RD_PREEMPT_WR", "Counts the number of times a read in the iMC preempts another read or write.  Generally reads to an open page are issued ahead of requests to closed pages.  This improves the page hit rate of the system.  However, high priority requests can cause pages of active requests to be closed in order to get them out.  This will reduce the latency of the high-priority request at the expense of lower bandwidth and increased overall average latency.. Read Preemption Count -- Read over Write Preemption."], ["UNC_M_PRE_COUNT:BYP", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to bypass."], ["UNC_M_PRE_COUNT:PAGE_CLOSE", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to timer expiration."], ["UNC_M_PRE_COUNT:PAGE_MISS", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharges due to page miss."], ["UNC_M_PRE_COUNT:RD", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to read."], ["UNC_M_PRE_COUNT:WR", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to write."], ["UNC_M_RD_CAS_PRIO:HIGH", "TBD. Read CAS issued with HIGH priority."], ["UNC_M_RD_CAS_PRIO:LOW", "TBD. Read CAS issued with LOW priority."], ["UNC_M_RD_CAS_PRIO:MED", "TBD. Read CAS issued with MEDIUM priority."], ["UNC_M_RD_CAS_PRIO:PANIC", "TBD. Read CAS issued with PANIC NON ISOCH priority (starved)."], ["UNC_M_RD_CAS_RANK0:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK0:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK0:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK0:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK0:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK0:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK0:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK0:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK0:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK0:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK0:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK0:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK0:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK0:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK0:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK0:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK0:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK0:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK0:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK0:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK0:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK1:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK1:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK1:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK1:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK1:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK1:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK1:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK1:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK1:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK1:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK1:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK1:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK1:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK1:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK1:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK1:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK1:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK1:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK1:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK1:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK1:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK2:BANK0", "TBD. RD_CAS Access to Rank 2 -- Bank 0."], ["UNC_M_RD_CAS_RANK4:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK4:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK4:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK4:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK4:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK4:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK4:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK4:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK4:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK4:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK4:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK4:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK4:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK4:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK4:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK4:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK4:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK4:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK4:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK4:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK4:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK5:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK5:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK5:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK5:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK5:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK5:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK5:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK5:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK5:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK5:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK5:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK5:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK5:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK5:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK5:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK5:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK5:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK5:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK5:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK5:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK5:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK6:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK6:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK6:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK6:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK6:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK6:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK6:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK6:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK6:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK6:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK6:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK6:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK6:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK6:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK6:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK6:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK6:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK6:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK6:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK6:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK6:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK7:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK7:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK7:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK7:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK7:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK7:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK7:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK7:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK7:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK7:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK7:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK7:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK7:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK7:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK7:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK7:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK7:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK7:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK7:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK7:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK7:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RPQ_CYCLES_NE", "Counts the number of cycles that the Read Pending Queue is not empty.  This can then be used to calculate the average occupancy (in conjunction with the Read Pending Queue Occupancy count).  The RPQ is used to schedule reads out to the memory controller and to track the requests.  Requests allocate into the RPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after the CAS command has been issued to memory.  This filter is to be used in conjunction with the occupancy filter so that one can correctly track the average occupancies for schedulable entries and scheduled requests.."], ["UNC_M_RPQ_INSERTS", "Counts the number of allocations into the Read Pending Queue.  This queue is used to schedule reads out to the memory controller and to track the requests.  Requests allocate into the RPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after the CAS command has been issued to memory.  This includes both ISOCH and non-ISOCH requests.."], ["UNC_M_VMSE_MXB_WR_OCCUPANCY", "TBD."], ["UNC_M_VMSE_WR_PUSH:RMM", "TBD. VMSE WR PUSH issued -- VMSE write PUSH issued in RMM."], ["UNC_M_VMSE_WR_PUSH:WMM", "TBD. VMSE WR PUSH issued -- VMSE write PUSH issued in WMM."], ["UNC_M_WMM_TO_RMM:LOW_THRESH", "TBD. Transition from WMM to RMM because of low threshold -- Transition from WMM to RMM because of starve counter."], ["UNC_M_WMM_TO_RMM:STARVE", "TBD. Transition from WMM to RMM because of low threshold -- ."], ["UNC_M_WMM_TO_RMM:VMSE_RETRY", "TBD. Transition from WMM to RMM because of low threshold -- ."], ["UNC_M_WPQ_CYCLES_FULL", "Counts the number of cycles when the Write Pending Queue is full.  When the WPQ is full, the HA will not be able to issue any additional read requests into the iMC.  This count should be similar count in the HA which tracks the number of cycles that the HA has no WPQ credits, just somewhat smaller to account for the credit return overhead.."], ["UNC_M_WPQ_CYCLES_NE", "Counts the number of cycles that the Write Pending Queue is not empty.  This can then be used to calculate the average queue occupancy (in conjunction with the WPQ Occupancy Accumulation count).  The WPQ is used to schedule write out to the memory controller and to track the writes.  Requests allocate into the WPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after being issued to DRAM.  Write requests themselves are able to complete (from the perspective of the rest of the system) as soon they have posted to the iMC.  This is not to be confused with actually performing the write to DRAM.  Therefore, the average latency for this queue is actually not useful for deconstruction intermediate write latencieies.."], ["UNC_M_WPQ_READ_HIT", "Counts the number of times a request hits in the WPQ (write-pending queue).  The iMC allows writes and reads to pass up other writes to different addresses.  Before a read or a write is issued, it will first CAM the WPQ to see if there is a write pending to that address.  When reads hit, they are able to directly pull their data from the WPQ instead of going to memory.  Writes that hit will overwrite the existing data.  Partial writes that hit will not need to do underfill reads and will simply update their relevant sections.."], ["UNC_M_WPQ_WRITE_HIT", "Counts the number of times a request hits in the WPQ (write-pending queue).  The iMC allows writes and reads to pass up other writes to different addresses.  Before a read or a write is issued, it will first CAM the WPQ to see if there is a write pending to that address.  When reads hit, they are able to directly pull their data from the WPQ instead of going to memory.  Writes that hit will overwrite the existing data.  Partial writes that hit will not need to do underfill reads and will simply update their relevant sections.."], ["UNC_M_WRONG_MM", "TBD."], ["UNC_M_WR_CAS_RANK0:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK0:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK0:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK0:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK0:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK0:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK0:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK0:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK0:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK0:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK0:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK0:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK0:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK0:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK0:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK0:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK0:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK0:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK0:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK0:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK0:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK1:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK1:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK1:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK1:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK1:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK1:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK1:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK1:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK1:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK1:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK1:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK1:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK1:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK1:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK1:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK1:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK1:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK1:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK1:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK1:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK1:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK4:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK4:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK4:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK4:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK4:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK4:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK4:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK4:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK4:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK4:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK4:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK4:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK4:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK4:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK4:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK4:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK4:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK4:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK4:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK4:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK4:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK5:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK5:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK5:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK5:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK5:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK5:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK5:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK5:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK5:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK5:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK5:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK5:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK5:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK5:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK5:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK5:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK5:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK5:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK5:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK5:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK5:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK6:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK6:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK6:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK6:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK6:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK6:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK6:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK6:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK6:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK6:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK6:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK6:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK6:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK6:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK6:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK6:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK6:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK6:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK6:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK6:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK6:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK7:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK7:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK7:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK7:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK7:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK7:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK7:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK7:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK7:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK7:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK7:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK7:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK7:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK7:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK7:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK7:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK7:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK7:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK7:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK7:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK7:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."]], "features": {"name": "Intel BroadwellX IMC2 uncore", "no_events": 42, "max_encoding": 1, "counters": 5, "type": "uncore PMU"}}, "bdx_unc_imc3": {"events": [["UNC_M_CLOCKTICKS", "IMC Uncore clockticks (fixed counter)."], ["UNC_M_ACT_COUNT:BYP", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Write."], ["UNC_M_ACT_COUNT:RD", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Read."], ["UNC_M_ACT_COUNT:WR", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Write."], ["UNC_M_BYP_CMDS:ACT", "TBD. ACT command issued by 2 cycle bypass."], ["UNC_M_BYP_CMDS:CAS", "TBD. CAS command issued by 2 cycle bypass."], ["UNC_M_BYP_CMDS:PRE", "TBD. PRE command issued by 2 cycle bypass."], ["UNC_M_CAS_COUNT:ALL", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM WR_CAS (w/ and w/out auto-pre)."], ["UNC_M_CAS_COUNT:RD", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM Reads (RD_CAS + Underfills)."], ["UNC_M_CAS_COUNT:RD_REG", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM RD_CAS (w/ and w/out auto-pre)."], ["UNC_M_CAS_COUNT:RD_RMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Read CAS issued in RMM."], ["UNC_M_CAS_COUNT:RD_UNDERFILL", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Underfill Read Issued."], ["UNC_M_CAS_COUNT:RD_WMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Read CAS issued in WMM."], ["UNC_M_CAS_COUNT:WR", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM WR_CAS (both Modes)."], ["UNC_M_CAS_COUNT:WR_RMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. DRAM WR_CAS (w/ and w/out auto-pre) in Read Major Mode."], ["UNC_M_CAS_COUNT:WR_WMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. DRAM WR_CAS (w/ and w/out auto-pre) in Write Major Mode."], ["UNC_M_DCLOCKTICKS", "TBD."], ["UNC_M_DRAM_PRE_ALL", "Counts the number of times that the precharge all command was sent.."], ["UNC_M_DRAM_REFRESH:HIGH", "Counts the number of refreshes issued.. Number of DRAM Refreshes Issued."], ["UNC_M_DRAM_REFRESH:PANIC", "Counts the number of refreshes issued.. Number of DRAM Refreshes Issued."], ["UNC_M_ECC_CORRECTABLE_ERRORS", "Counts the number of ECC errors detected and corrected by the iMC on this channel.  This counter is only useful with ECC DRAM devices.  This count will increment one time for each correction regardless of the number of bits corrected.  The iMC can correct up to 4 bit errors in independent channel mode and 8 bit erros in lockstep mode.."], ["UNC_M_MAJOR_MODES:ISOCH", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Isoch Major Mode."], ["UNC_M_MAJOR_MODES:PARTIAL", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Partial Major Mode."], ["UNC_M_MAJOR_MODES:READ", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Read Major Mode."], ["UNC_M_MAJOR_MODES:WRITE", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Write Major Mode."], ["UNC_M_POWER_CHANNEL_DLLOFF", "Number of cycles when all the ranks in the channel are in CKE Slow (DLLOFF) mode.."], ["UNC_M_POWER_CHANNEL_PPD", "Number of cycles when all the ranks in the channel are in PPD mode.  If IBT=off is enabled, then this can be used to count those cycles.  If it is not enabled, then this can count the number of cycles when that could have been taken advantage of.."], ["UNC_M_POWER_CKE_CYCLES:RANK0", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank0 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK1", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank1 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK2", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank2 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK3", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank3 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK4", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank4 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK5", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank5 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK6", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank6 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK7", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank7 -- DIMM ID."], ["UNC_M_POWER_CRITICAL_THROTTLE_CYCLES", "Counts the number of cycles when the iMC is in critical thermal throttling.  When this happens, all traffic is blocked.  This should be rare unless something bad is going on in the platform.  There is no filtering by rank for this event.."], ["UNC_M_POWER_PCU_THROTTLING", "TBD."], ["UNC_M_POWER_SELF_REFRESH", "Counts the number of cycles when the iMC is in self-refresh and the iMC still has a clock.  This happens in some package C-states.  For example, the PCU may ask the iMC to enter self-refresh even though some of the cores are still processing.  One use of this is for Monroe technology.  Self-refresh is required during package C3 and C6, but there is no clock in the iMC at this time, so it is not possible to count these cases.."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK0", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank0 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK1", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank1 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK2", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank2 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK3", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank3 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK4", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank4 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK5", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank5 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK6", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank6 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK7", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank7 -- DIMM ID."], ["UNC_M_PREEMPTION:RD_PREEMPT_RD", "Counts the number of times a read in the iMC preempts another read or write.  Generally reads to an open page are issued ahead of requests to closed pages.  This improves the page hit rate of the system.  However, high priority requests can cause pages of active requests to be closed in order to get them out.  This will reduce the latency of the high-priority request at the expense of lower bandwidth and increased overall average latency.. Read Preemption Count -- Read over Read Preemption."], ["UNC_M_PREEMPTION:RD_PREEMPT_WR", "Counts the number of times a read in the iMC preempts another read or write.  Generally reads to an open page are issued ahead of requests to closed pages.  This improves the page hit rate of the system.  However, high priority requests can cause pages of active requests to be closed in order to get them out.  This will reduce the latency of the high-priority request at the expense of lower bandwidth and increased overall average latency.. Read Preemption Count -- Read over Write Preemption."], ["UNC_M_PRE_COUNT:BYP", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to bypass."], ["UNC_M_PRE_COUNT:PAGE_CLOSE", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to timer expiration."], ["UNC_M_PRE_COUNT:PAGE_MISS", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharges due to page miss."], ["UNC_M_PRE_COUNT:RD", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to read."], ["UNC_M_PRE_COUNT:WR", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to write."], ["UNC_M_RD_CAS_PRIO:HIGH", "TBD. Read CAS issued with HIGH priority."], ["UNC_M_RD_CAS_PRIO:LOW", "TBD. Read CAS issued with LOW priority."], ["UNC_M_RD_CAS_PRIO:MED", "TBD. Read CAS issued with MEDIUM priority."], ["UNC_M_RD_CAS_PRIO:PANIC", "TBD. Read CAS issued with PANIC NON ISOCH priority (starved)."], ["UNC_M_RD_CAS_RANK0:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK0:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK0:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK0:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK0:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK0:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK0:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK0:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK0:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK0:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK0:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK0:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK0:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK0:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK0:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK0:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK0:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK0:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK0:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK0:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK0:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK1:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK1:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK1:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK1:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK1:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK1:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK1:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK1:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK1:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK1:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK1:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK1:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK1:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK1:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK1:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK1:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK1:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK1:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK1:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK1:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK1:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK2:BANK0", "TBD. RD_CAS Access to Rank 2 -- Bank 0."], ["UNC_M_RD_CAS_RANK4:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK4:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK4:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK4:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK4:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK4:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK4:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK4:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK4:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK4:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK4:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK4:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK4:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK4:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK4:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK4:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK4:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK4:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK4:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK4:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK4:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK5:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK5:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK5:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK5:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK5:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK5:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK5:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK5:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK5:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK5:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK5:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK5:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK5:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK5:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK5:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK5:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK5:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK5:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK5:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK5:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK5:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK6:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK6:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK6:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK6:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK6:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK6:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK6:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK6:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK6:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK6:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK6:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK6:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK6:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK6:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK6:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK6:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK6:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK6:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK6:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK6:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK6:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK7:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK7:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK7:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK7:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK7:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK7:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK7:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK7:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK7:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK7:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK7:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK7:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK7:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK7:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK7:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK7:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK7:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK7:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK7:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK7:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK7:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RPQ_CYCLES_NE", "Counts the number of cycles that the Read Pending Queue is not empty.  This can then be used to calculate the average occupancy (in conjunction with the Read Pending Queue Occupancy count).  The RPQ is used to schedule reads out to the memory controller and to track the requests.  Requests allocate into the RPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after the CAS command has been issued to memory.  This filter is to be used in conjunction with the occupancy filter so that one can correctly track the average occupancies for schedulable entries and scheduled requests.."], ["UNC_M_RPQ_INSERTS", "Counts the number of allocations into the Read Pending Queue.  This queue is used to schedule reads out to the memory controller and to track the requests.  Requests allocate into the RPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after the CAS command has been issued to memory.  This includes both ISOCH and non-ISOCH requests.."], ["UNC_M_VMSE_MXB_WR_OCCUPANCY", "TBD."], ["UNC_M_VMSE_WR_PUSH:RMM", "TBD. VMSE WR PUSH issued -- VMSE write PUSH issued in RMM."], ["UNC_M_VMSE_WR_PUSH:WMM", "TBD. VMSE WR PUSH issued -- VMSE write PUSH issued in WMM."], ["UNC_M_WMM_TO_RMM:LOW_THRESH", "TBD. Transition from WMM to RMM because of low threshold -- Transition from WMM to RMM because of starve counter."], ["UNC_M_WMM_TO_RMM:STARVE", "TBD. Transition from WMM to RMM because of low threshold -- ."], ["UNC_M_WMM_TO_RMM:VMSE_RETRY", "TBD. Transition from WMM to RMM because of low threshold -- ."], ["UNC_M_WPQ_CYCLES_FULL", "Counts the number of cycles when the Write Pending Queue is full.  When the WPQ is full, the HA will not be able to issue any additional read requests into the iMC.  This count should be similar count in the HA which tracks the number of cycles that the HA has no WPQ credits, just somewhat smaller to account for the credit return overhead.."], ["UNC_M_WPQ_CYCLES_NE", "Counts the number of cycles that the Write Pending Queue is not empty.  This can then be used to calculate the average queue occupancy (in conjunction with the WPQ Occupancy Accumulation count).  The WPQ is used to schedule write out to the memory controller and to track the writes.  Requests allocate into the WPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after being issued to DRAM.  Write requests themselves are able to complete (from the perspective of the rest of the system) as soon they have posted to the iMC.  This is not to be confused with actually performing the write to DRAM.  Therefore, the average latency for this queue is actually not useful for deconstruction intermediate write latencieies.."], ["UNC_M_WPQ_READ_HIT", "Counts the number of times a request hits in the WPQ (write-pending queue).  The iMC allows writes and reads to pass up other writes to different addresses.  Before a read or a write is issued, it will first CAM the WPQ to see if there is a write pending to that address.  When reads hit, they are able to directly pull their data from the WPQ instead of going to memory.  Writes that hit will overwrite the existing data.  Partial writes that hit will not need to do underfill reads and will simply update their relevant sections.."], ["UNC_M_WPQ_WRITE_HIT", "Counts the number of times a request hits in the WPQ (write-pending queue).  The iMC allows writes and reads to pass up other writes to different addresses.  Before a read or a write is issued, it will first CAM the WPQ to see if there is a write pending to that address.  When reads hit, they are able to directly pull their data from the WPQ instead of going to memory.  Writes that hit will overwrite the existing data.  Partial writes that hit will not need to do underfill reads and will simply update their relevant sections.."], ["UNC_M_WRONG_MM", "TBD."], ["UNC_M_WR_CAS_RANK0:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK0:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK0:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK0:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK0:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK0:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK0:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK0:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK0:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK0:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK0:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK0:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK0:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK0:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK0:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK0:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK0:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK0:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK0:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK0:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK0:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK1:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK1:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK1:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK1:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK1:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK1:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK1:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK1:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK1:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK1:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK1:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK1:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK1:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK1:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK1:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK1:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK1:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK1:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK1:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK1:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK1:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK4:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK4:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK4:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK4:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK4:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK4:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK4:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK4:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK4:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK4:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK4:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK4:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK4:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK4:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK4:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK4:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK4:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK4:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK4:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK4:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK4:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK5:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK5:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK5:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK5:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK5:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK5:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK5:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK5:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK5:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK5:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK5:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK5:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK5:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK5:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK5:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK5:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK5:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK5:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK5:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK5:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK5:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK6:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK6:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK6:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK6:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK6:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK6:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK6:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK6:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK6:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK6:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK6:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK6:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK6:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK6:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK6:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK6:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK6:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK6:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK6:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK6:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK6:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK7:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK7:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK7:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK7:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK7:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK7:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK7:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK7:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK7:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK7:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK7:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK7:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK7:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK7:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK7:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK7:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK7:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK7:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK7:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK7:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK7:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."]], "features": {"name": "Intel BroadwellX IMC3 uncore", "no_events": 42, "max_encoding": 1, "counters": 5, "type": "uncore PMU"}}, "bdx_unc_imc4": {"events": [["UNC_M_CLOCKTICKS", "IMC Uncore clockticks (fixed counter)."], ["UNC_M_ACT_COUNT:BYP", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Write."], ["UNC_M_ACT_COUNT:RD", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Read."], ["UNC_M_ACT_COUNT:WR", "Counts the number of DRAM Activate commands sent on this channel.  Activate commands are issued to open up a page on the DRAM devices so that it can be read or written to with a CAS.  One can calculate the number of Page Misses by subtracting the number of Page Miss precharges from the number of Activates.. DRAM Activate Count -- Activate due to Write."], ["UNC_M_BYP_CMDS:ACT", "TBD. ACT command issued by 2 cycle bypass."], ["UNC_M_BYP_CMDS:CAS", "TBD. CAS command issued by 2 cycle bypass."], ["UNC_M_BYP_CMDS:PRE", "TBD. PRE command issued by 2 cycle bypass."], ["UNC_M_CAS_COUNT:ALL", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM WR_CAS (w/ and w/out auto-pre)."], ["UNC_M_CAS_COUNT:RD", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM Reads (RD_CAS + Underfills)."], ["UNC_M_CAS_COUNT:RD_REG", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM RD_CAS (w/ and w/out auto-pre)."], ["UNC_M_CAS_COUNT:RD_RMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Read CAS issued in RMM."], ["UNC_M_CAS_COUNT:RD_UNDERFILL", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Underfill Read Issued."], ["UNC_M_CAS_COUNT:RD_WMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. Read CAS issued in WMM."], ["UNC_M_CAS_COUNT:WR", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. All DRAM WR_CAS (both Modes)."], ["UNC_M_CAS_COUNT:WR_RMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. DRAM WR_CAS (w/ and w/out auto-pre) in Read Major Mode."], ["UNC_M_CAS_COUNT:WR_WMM", "DRAM RD_CAS and WR_CAS Commands. DRAM RD_CAS and WR_CAS Commands. DRAM WR_CAS (w/ and w/out auto-pre) in Write Major Mode."], ["UNC_M_DCLOCKTICKS", "TBD."], ["UNC_M_DRAM_PRE_ALL", "Counts the number of times that the precharge all command was sent.."], ["UNC_M_DRAM_REFRESH:HIGH", "Counts the number of refreshes issued.. Number of DRAM Refreshes Issued."], ["UNC_M_DRAM_REFRESH:PANIC", "Counts the number of refreshes issued.. Number of DRAM Refreshes Issued."], ["UNC_M_ECC_CORRECTABLE_ERRORS", "Counts the number of ECC errors detected and corrected by the iMC on this channel.  This counter is only useful with ECC DRAM devices.  This count will increment one time for each correction regardless of the number of bits corrected.  The iMC can correct up to 4 bit errors in independent channel mode and 8 bit erros in lockstep mode.."], ["UNC_M_MAJOR_MODES:ISOCH", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Isoch Major Mode."], ["UNC_M_MAJOR_MODES:PARTIAL", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Partial Major Mode."], ["UNC_M_MAJOR_MODES:READ", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Read Major Mode."], ["UNC_M_MAJOR_MODES:WRITE", "Counts the total number of cycles spent in a major mode (selected by a filter) on the given channel.  Major modes are channel-wide, and not a per-rank (or dimm or bank) mode.. Cycles in a Major Mode -- Write Major Mode."], ["UNC_M_POWER_CHANNEL_DLLOFF", "Number of cycles when all the ranks in the channel are in CKE Slow (DLLOFF) mode.."], ["UNC_M_POWER_CHANNEL_PPD", "Number of cycles when all the ranks in the channel are in PPD mode.  If IBT=off is enabled, then this can be used to count those cycles.  If it is not enabled, then this can count the number of cycles when that could have been taken advantage of.."], ["UNC_M_POWER_CKE_CYCLES:RANK0", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank0 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK1", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank1 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK2", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank2 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK3", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank3 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK4", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank4 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK5", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank5 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK6", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank6 -- DIMM ID."], ["UNC_M_POWER_CKE_CYCLES:RANK7", "Number of cycles spent in CKE ON mode.  The filter allows you to select a rank to monitor.  If multiple ranks are in CKE ON mode at one time, the counter will ONLY increment by one rather than doing accumulation.  Multiple counters will need to be used to track multiple ranks simultaneously.  There is no distinction between the different CKE modes (APD, PPDS, PPDF).  This can be determined based on the system programming.  These events should commonly be used with Invert to get the number of cycles in power saving mode.  Edge Detect is also useful here.  Make sure that you do NOT use Invert with Edge Detect (this just confuses the system and is not necessary).. Rank7 -- DIMM ID."], ["UNC_M_POWER_CRITICAL_THROTTLE_CYCLES", "Counts the number of cycles when the iMC is in critical thermal throttling.  When this happens, all traffic is blocked.  This should be rare unless something bad is going on in the platform.  There is no filtering by rank for this event.."], ["UNC_M_POWER_PCU_THROTTLING", "TBD."], ["UNC_M_POWER_SELF_REFRESH", "Counts the number of cycles when the iMC is in self-refresh and the iMC still has a clock.  This happens in some package C-states.  For example, the PCU may ask the iMC to enter self-refresh even though some of the cores are still processing.  One use of this is for Monroe technology.  Self-refresh is required during package C3 and C6, but there is no clock in the iMC at this time, so it is not possible to count these cases.."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK0", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank0 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK1", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank1 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK2", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank2 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK3", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank3 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK4", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank4 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK5", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank5 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK6", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank6 -- DIMM ID."], ["UNC_M_POWER_THROTTLE_CYCLES:RANK7", "Counts the number of cycles while the iMC is being throttled by either thermal constraints or by the PCU throttling.  It is not possible to distinguish between the two.  This can be filtered by rank.  If multiple ranks are selected and are being throttled at the same time, the counter will only increment by 1.. Rank7 -- DIMM ID."], ["UNC_M_PREEMPTION:RD_PREEMPT_RD", "Counts the number of times a read in the iMC preempts another read or write.  Generally reads to an open page are issued ahead of requests to closed pages.  This improves the page hit rate of the system.  However, high priority requests can cause pages of active requests to be closed in order to get them out.  This will reduce the latency of the high-priority request at the expense of lower bandwidth and increased overall average latency.. Read Preemption Count -- Read over Read Preemption."], ["UNC_M_PREEMPTION:RD_PREEMPT_WR", "Counts the number of times a read in the iMC preempts another read or write.  Generally reads to an open page are issued ahead of requests to closed pages.  This improves the page hit rate of the system.  However, high priority requests can cause pages of active requests to be closed in order to get them out.  This will reduce the latency of the high-priority request at the expense of lower bandwidth and increased overall average latency.. Read Preemption Count -- Read over Write Preemption."], ["UNC_M_PRE_COUNT:BYP", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to bypass."], ["UNC_M_PRE_COUNT:PAGE_CLOSE", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to timer expiration."], ["UNC_M_PRE_COUNT:PAGE_MISS", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharges due to page miss."], ["UNC_M_PRE_COUNT:RD", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to read."], ["UNC_M_PRE_COUNT:WR", "Counts the number of DRAM Precharge commands sent on this channel.. DRAM Precharge commands. -- Precharge due to write."], ["UNC_M_RD_CAS_PRIO:HIGH", "TBD. Read CAS issued with HIGH priority."], ["UNC_M_RD_CAS_PRIO:LOW", "TBD. Read CAS issued with LOW priority."], ["UNC_M_RD_CAS_PRIO:MED", "TBD. Read CAS issued with MEDIUM priority."], ["UNC_M_RD_CAS_PRIO:PANIC", "TBD. Read CAS issued with PANIC NON ISOCH priority (starved)."], ["UNC_M_RD_CAS_RANK0:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK0:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK0:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK0:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK0:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK0:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK0:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK0:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK0:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK0:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK0:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK0:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK0:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK0:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK0:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK0:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK0:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK0:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK0:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK0:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK0:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK1:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK1:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK1:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK1:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK1:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK1:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK1:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK1:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK1:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK1:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK1:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK1:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK1:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK1:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK1:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK1:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK1:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK1:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK1:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK1:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK1:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK2:BANK0", "TBD. RD_CAS Access to Rank 2 -- Bank 0."], ["UNC_M_RD_CAS_RANK4:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK4:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK4:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK4:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK4:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK4:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK4:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK4:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK4:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK4:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK4:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK4:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK4:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK4:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK4:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK4:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK4:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK4:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK4:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK4:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK4:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK5:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK5:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK5:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK5:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK5:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK5:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK5:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK5:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK5:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK5:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK5:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK5:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK5:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK5:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK5:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK5:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK5:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK5:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK5:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK5:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK5:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK6:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK6:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK6:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK6:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK6:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK6:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK6:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK6:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK6:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK6:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK6:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK6:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK6:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK6:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK6:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK6:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK6:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK6:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK6:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK6:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK6:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RD_CAS_RANK7:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_RD_CAS_RANK7:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_RD_CAS_RANK7:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_RD_CAS_RANK7:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_RD_CAS_RANK7:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_RD_CAS_RANK7:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_RD_CAS_RANK7:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_RD_CAS_RANK7:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_RD_CAS_RANK7:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_RD_CAS_RANK7:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_RD_CAS_RANK7:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_RD_CAS_RANK7:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_RD_CAS_RANK7:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_RD_CAS_RANK7:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_RD_CAS_RANK7:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_RD_CAS_RANK7:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_RD_CAS_RANK7:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_RD_CAS_RANK7:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_RD_CAS_RANK7:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_RD_CAS_RANK7:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_RD_CAS_RANK7:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_RPQ_CYCLES_NE", "Counts the number of cycles that the Read Pending Queue is not empty.  This can then be used to calculate the average occupancy (in conjunction with the Read Pending Queue Occupancy count).  The RPQ is used to schedule reads out to the memory controller and to track the requests.  Requests allocate into the RPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after the CAS command has been issued to memory.  This filter is to be used in conjunction with the occupancy filter so that one can correctly track the average occupancies for schedulable entries and scheduled requests.."], ["UNC_M_RPQ_INSERTS", "Counts the number of allocations into the Read Pending Queue.  This queue is used to schedule reads out to the memory controller and to track the requests.  Requests allocate into the RPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after the CAS command has been issued to memory.  This includes both ISOCH and non-ISOCH requests.."], ["UNC_M_VMSE_MXB_WR_OCCUPANCY", "TBD."], ["UNC_M_VMSE_WR_PUSH:RMM", "TBD. VMSE WR PUSH issued -- VMSE write PUSH issued in RMM."], ["UNC_M_VMSE_WR_PUSH:WMM", "TBD. VMSE WR PUSH issued -- VMSE write PUSH issued in WMM."], ["UNC_M_WMM_TO_RMM:LOW_THRESH", "TBD. Transition from WMM to RMM because of low threshold -- Transition from WMM to RMM because of starve counter."], ["UNC_M_WMM_TO_RMM:STARVE", "TBD. Transition from WMM to RMM because of low threshold -- ."], ["UNC_M_WMM_TO_RMM:VMSE_RETRY", "TBD. Transition from WMM to RMM because of low threshold -- ."], ["UNC_M_WPQ_CYCLES_FULL", "Counts the number of cycles when the Write Pending Queue is full.  When the WPQ is full, the HA will not be able to issue any additional read requests into the iMC.  This count should be similar count in the HA which tracks the number of cycles that the HA has no WPQ credits, just somewhat smaller to account for the credit return overhead.."], ["UNC_M_WPQ_CYCLES_NE", "Counts the number of cycles that the Write Pending Queue is not empty.  This can then be used to calculate the average queue occupancy (in conjunction with the WPQ Occupancy Accumulation count).  The WPQ is used to schedule write out to the memory controller and to track the writes.  Requests allocate into the WPQ soon after they enter the memory controller, and need credits for an entry in this buffer before being sent from the HA to the iMC.  They deallocate after being issued to DRAM.  Write requests themselves are able to complete (from the perspective of the rest of the system) as soon they have posted to the iMC.  This is not to be confused with actually performing the write to DRAM.  Therefore, the average latency for this queue is actually not useful for deconstruction intermediate write latencieies.."], ["UNC_M_WPQ_READ_HIT", "Counts the number of times a request hits in the WPQ (write-pending queue).  The iMC allows writes and reads to pass up other writes to different addresses.  Before a read or a write is issued, it will first CAM the WPQ to see if there is a write pending to that address.  When reads hit, they are able to directly pull their data from the WPQ instead of going to memory.  Writes that hit will overwrite the existing data.  Partial writes that hit will not need to do underfill reads and will simply update their relevant sections.."], ["UNC_M_WPQ_WRITE_HIT", "Counts the number of times a request hits in the WPQ (write-pending queue).  The iMC allows writes and reads to pass up other writes to different addresses.  Before a read or a write is issued, it will first CAM the WPQ to see if there is a write pending to that address.  When reads hit, they are able to directly pull their data from the WPQ instead of going to memory.  Writes that hit will overwrite the existing data.  Partial writes that hit will not need to do underfill reads and will simply update their relevant sections.."], ["UNC_M_WRONG_MM", "TBD."], ["UNC_M_WR_CAS_RANK0:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK0:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK0:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK0:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK0:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK0:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK0:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK0:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK0:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK0:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK0:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK0:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK0:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK0:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK0:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK0:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK0:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK0:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK0:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK0:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK0:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK1:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK1:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK1:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK1:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK1:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK1:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK1:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK1:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK1:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK1:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK1:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK1:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK1:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK1:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK1:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK1:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK1:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK1:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK1:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK1:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK1:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK4:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK4:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK4:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK4:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK4:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK4:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK4:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK4:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK4:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK4:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK4:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK4:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK4:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK4:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK4:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK4:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK4:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK4:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK4:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK4:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK4:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK5:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK5:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK5:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK5:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK5:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK5:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK5:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK5:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK5:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK5:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK5:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK5:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK5:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK5:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK5:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK5:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK5:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK5:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK5:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK5:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK5:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK6:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK6:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK6:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK6:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK6:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK6:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK6:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK6:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK6:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK6:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK6:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK6:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK6:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK6:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK6:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK6:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK6:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK6:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK6:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK6:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK6:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."], ["UNC_M_WR_CAS_RANK7:ALLBANKS", "TBD. Access to Rank 0 -- All Banks."], ["UNC_M_WR_CAS_RANK7:BANK0", "TBD. Access to Rank 0 -- Bank 0."], ["UNC_M_WR_CAS_RANK7:BANK1", "TBD. Access to Rank 0 -- Bank 1."], ["UNC_M_WR_CAS_RANK7:BANK10", "TBD. Access to Rank 0 -- Bank 10."], ["UNC_M_WR_CAS_RANK7:BANK11", "TBD. Access to Rank 0 -- Bank 11."], ["UNC_M_WR_CAS_RANK7:BANK12", "TBD. Access to Rank 0 -- Bank 12."], ["UNC_M_WR_CAS_RANK7:BANK13", "TBD. Access to Rank 0 -- Bank 13."], ["UNC_M_WR_CAS_RANK7:BANK14", "TBD. Access to Rank 0 -- Bank 14."], ["UNC_M_WR_CAS_RANK7:BANK15", "TBD. Access to Rank 0 -- Bank 15."], ["UNC_M_WR_CAS_RANK7:BANK2", "TBD. Access to Rank 0 -- Bank 2."], ["UNC_M_WR_CAS_RANK7:BANK3", "TBD. Access to Rank 0 -- Bank 3."], ["UNC_M_WR_CAS_RANK7:BANK4", "TBD. Access to Rank 0 -- Bank 4."], ["UNC_M_WR_CAS_RANK7:BANK5", "TBD. Access to Rank 0 -- Bank 5."], ["UNC_M_WR_CAS_RANK7:BANK6", "TBD. Access to Rank 0 -- Bank 6."], ["UNC_M_WR_CAS_RANK7:BANK7", "TBD. Access to Rank 0 -- Bank 7."], ["UNC_M_WR_CAS_RANK7:BANK8", "TBD. Access to Rank 0 -- Bank 8."], ["UNC_M_WR_CAS_RANK7:BANK9", "TBD. Access to Rank 0 -- Bank 9."], ["UNC_M_WR_CAS_RANK7:BANKG0", "TBD. Access to Rank 0 -- Bank Group 0 (Banks 0-3)."], ["UNC_M_WR_CAS_RANK7:BANKG1", "TBD. Access to Rank 0 -- Bank Group 1 (Banks 4-7)."], ["UNC_M_WR_CAS_RANK7:BANKG2", "TBD. Access to Rank 0 -- Bank Group 2 (Banks 8-11)."], ["UNC_M_WR_CAS_RANK7:BANKG3", "TBD. Access to Rank 0 -- Bank Group 3 (Banks 12-15)."]], "features": {"name": "Intel BroadwellX IMC4 uncore", "no_events": 42, "max_encoding": 1, "counters": 5, "type": "uncore PMU"}}, "bdx_unc_pcu": {"events": [["UNC_P_CLOCKTICKS", "The PCU runs off a fixed 1 GHz clock.  This event counts the number of pclk cycles measured while the counter was enabled.  The pclk, like the Memory Controllers dclk, counts at a constant rate making it a good measure of actual wall timee.."], ["UNC_P_CORE0_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE10_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE11_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE12_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE13_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE14_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE15_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE16_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE17_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE1_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE2_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE3_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE4_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE5_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE6_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE7_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE8_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_CORE9_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions.  There is one event per core.."], ["UNC_P_DEMOTIONS_CORE0", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE1", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE10", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE11", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE12", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE13", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE14", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE15", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE16", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE17", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE2", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE3", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE4", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE5", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE6", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE7", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE8", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_DEMOTIONS_CORE9", "Counts the number of times when a configurable cores had a C-state demotion."], ["UNC_P_FREQ_MAX_LIMIT_THERMAL_CYCLES", "Counts the number of cycles when thermal conditions are the upper limit on frequency.  This is related to the THERMAL_THROTTLE CYCLES_ABOVE_TEMP event, which always counts cycles when we are above the thermal temperature.  This event (STRONGEST_UPPER_LIMIT) is sampled at the output of the algorithm that determines the actual frequency, while THERMAL_THROTTLE looks at the input.."], ["UNC_P_FREQ_MAX_OS_CYCLES", "Counts the number of cycles when the OS is the upper limit on frequency.."], ["UNC_P_FREQ_MAX_POWER_CYCLES", "Counts the number of cycles when power is the upper limit on frequency.."], ["UNC_P_FREQ_MIN_IO_P_CYCLES", "Counts the number of cycles when IO P Limit is preventing us from dropping the frequency lower.  This algorithm monitors the needs to the IO subsystem on both local and remote sockets and will maintain a frequency high enough to maintain good IO BW.  This is necessary for when all the IA cores on a socket are idle but a user still would like to maintain high IO Bandwidth.."], ["UNC_P_FREQ_TRANS_CYCLES", "Counts the number of cycles when the system is changing frequency.  This can not be filtered by thread ID.  One can also use it with the occupancy counter that monitors number of threads in C0 to estimate the performance impact that frequency transitions had on the system.."], ["UNC_P_MEMORY_PHASE_SHEDDING_CYCLES", "Counts the number of cycles that the PCU has triggered memory phase shedding.  This is a mode that can be run in the iMC physicals that saves power at the expense of additional latency.."], ["UNC_P_POWER_STATE_OCCUPANCY:CORES_C0", "This is an occupancy event that tracks the number of cores that are in the chosen C-State.  It can be used by itself to get the average number of cores in that C-state with threshholding to generate histograms, or with other PCU events and occupancy triggering to capture other details.. Number of cores in C-State -- C0 and C1."], ["UNC_P_POWER_STATE_OCCUPANCY:CORES_C3", "This is an occupancy event that tracks the number of cores that are in the chosen C-State.  It can be used by itself to get the average number of cores in that C-state with threshholding to generate histograms, or with other PCU events and occupancy triggering to capture other details.. Number of cores in C-State -- C3."], ["UNC_P_POWER_STATE_OCCUPANCY:CORES_C6", "This is an occupancy event that tracks the number of cores that are in the chosen C-State.  It can be used by itself to get the average number of cores in that C-state with threshholding to generate histograms, or with other PCU events and occupancy triggering to capture other details.. Number of cores in C-State -- C6 and C7."], ["UNC_P_PROCHOT_EXTERNAL_CYCLES", "Counts the number of cycles that we are in external PROCHOT mode.  This mode is triggered when a sensor off the die determines that something off-die (like DRAM) is too hot and must throttle to avoid damaging the chip.."], ["UNC_P_PROCHOT_INTERNAL_CYCLES", "Counts the number of cycles that we are in internal PROCHOT mode.  This mode is triggered when a sensor on the die determines that we are too hot and must throttle to avoid damaging the chip.."], ["UNC_P_TOTAL_TRANSITION_CYCLES", "Number of cycles spent performing core C state transitions across all cores.."], ["UNC_P_UFS_BANDWIDTH_MAX_RANGE", "TBD."], ["UNC_P_UFS_TRANSITIONS_DOWN", "Ring GV down due to low traffic."], ["UNC_P_UFS_TRANSITIONS_IO_P_LIMIT", "TBD."], ["UNC_P_UFS_TRANSITIONS_NO_CHANGE", "Ring GV with same final and initial frequency."], ["UNC_P_UFS_TRANSITIONS_UP_RING", "Ring GV up due to high ring traffic."], ["UNC_P_UFS_TRANSITIONS_UP_STALL", "Ring GV up due to high core stalls."], ["UNC_P_VR_HOT_CYCLES", "TBD."], ["UNC_P_FREQ_BAND0_CYCLES", "Frequency Residency."], ["UNC_P_FREQ_BAND1_CYCLES", "Frequency Residency."], ["UNC_P_FREQ_BAND2_CYCLES", "Frequency Residency."], ["UNC_P_FREQ_BAND3_CYCLES", "Frequency Residency."], ["UNC_P_FIVR_PS_PS0_CYCLES", "Cycles spent in phase-shedding power state 0."], ["UNC_P_FIVR_PS_PS1_CYCLES", "Cycles spent in phase-shedding power state 1."], ["UNC_P_FIVR_PS_PS2_CYCLES", "Cycles spent in phase-shedding power state 2."], ["UNC_P_FIVR_PS_PS3_CYCLES", "Cycles spent in phase-shedding power state 3."]], "features": {"name": "Intel BroadwellX PCU uncore", "no_events": 62, "max_encoding": 2, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_qpi0": {"events": [["UNC_Q_CLOCKTICKS", "Counts the number of clocks in the QPI LL.  This clock runs at 1/4th the GT/s speed of the QPI link.  For example, a 4GT/s link will have qfclk or 1GHz.  BDX does not support dynamic link speeds, so this frequency is fixexed.."], ["UNC_Q_CTO_COUNT", "Counts the number of CTO (cluster trigger outs) events that were asserted across the two slots.  If both slots trigger in a given cycle, the event will increment by 2.  You can use edge detect to count the number of cases when both events triggered.."], ["UNC_Q_DIRECT2CORE:FAILURE_CREDITS", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Failure - Egress Credits."], ["UNC_Q_DIRECT2CORE:FAILURE_CREDITS_MISS", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Failure - Egress and RBT Miss."], ["UNC_Q_DIRECT2CORE:FAILURE_CREDITS_RBT", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Failure - Egress and RBT Invalid."], ["UNC_Q_DIRECT2CORE:FAILURE_CREDITS_RBT_MISS", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Failure - Egress and RBT Miss, Invalid."], ["UNC_Q_DIRECT2CORE:FAILURE_MISS", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Failure - RBT Miss."], ["UNC_Q_DIRECT2CORE:FAILURE_RBT_HIT", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Failure - RBT Invalid."], ["UNC_Q_DIRECT2CORE:FAILURE_RBT_MISS", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Failure - RBT Miss and Invalid."], ["UNC_Q_DIRECT2CORE:SUCCESS_RBT_HIT", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Success."], ["UNC_Q_L1_POWER_CYCLES", "Number of QPI qfclk cycles spent in L1 power mode.  L1 is a mode that totally shuts down a QPI link.  Use edge detect to count the number of instances when the QPI link entered L1.  Link power states are per link and per direction, so for example the Tx direction could be in one state while Rx was in another. Because L1 totally shuts down the link, it takes a good amount of time to exit this mode.."], ["UNC_Q_RXL0P_POWER_CYCLES", "Number of QPI qfclk cycles spent in L0p power mode.  L0p is a mode where we disable 1/2 of the QPI lanes, decreasing our bandwidth in order to save power.  It increases snoop and data transfer latencies and decreases overall bandwidth.  This mode can be very useful in NUMA optimized workloads that largely only utilize QPI for snoops and their responses.  Use edge detect to count the number of instances when the QPI link entered L0p.  Link power states are per link and per direction, so for example the Tx direction could be in one state while Rx was in another.."], ["UNC_Q_RXL0_POWER_CYCLES", "Number of QPI qfclk cycles spent in L0 power mode in the Link Layer.  L0 is the default mode which provides the highest performance with the most power.  Use edge detect to count the number of instances that the link entered L0.  Link power states are per link and per direction, so for example the Tx direction could be in one state while Rx was in another.  The phy layer  sometimes leaves L0 for training, which will not be captured by this event.."], ["UNC_Q_RXL_BYPASSED", "Counts the number of times that an incoming flit was able to bypass the flit buffer and pass directly across the BGF and into the Egress.  This is a latency optimization, and should generally be the common case.  If this value is less than the number of flits transferred, it implies that there was queueing getting onto the ring, and thus the transactions saw higher latency.."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN0:DRS", "Counts the number of times that an RxQ VN0 credit was consumed (i.e. message uses a VN0 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- DRS."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN0:HOM", "Counts the number of times that an RxQ VN0 credit was consumed (i.e. message uses a VN0 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- HOM."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN0:NCB", "Counts the number of times that an RxQ VN0 credit was consumed (i.e. message uses a VN0 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- NCB."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN0:NCS", "Counts the number of times that an RxQ VN0 credit was consumed (i.e. message uses a VN0 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- NCS."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN0:NDR", "Counts the number of times that an RxQ VN0 credit was consumed (i.e. message uses a VN0 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- NDR."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN0:SNP", "Counts the number of times that an RxQ VN0 credit was consumed (i.e. message uses a VN0 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- SNP."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN1:DRS", "Counts the number of times that an RxQ VN1 credit was consumed (i.e. message uses a VN1 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- DRS."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN1:HOM", "Counts the number of times that an RxQ VN1 credit was consumed (i.e. message uses a VN1 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- HOM."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN1:NCB", "Counts the number of times that an RxQ VN1 credit was consumed (i.e. message uses a VN1 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- NCB."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN1:NCS", "Counts the number of times that an RxQ VN1 credit was consumed (i.e. message uses a VN1 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- NCS."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN1:NDR", "Counts the number of times that an RxQ VN1 credit was consumed (i.e. message uses a VN1 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- NDR."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN1:SNP", "Counts the number of times that an RxQ VN1 credit was consumed (i.e. message uses a VN1 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- SNP."], ["UNC_Q_RXL_CREDITS_CONSUMED_VNA", "Counts the number of times that an RxQ VNA credit was consumed (i.e. message uses a VNA credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.."], ["UNC_Q_RXL_CYCLES_NE", "Counts the number of cycles that the QPI RxQ was not empty.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy Accumulator event to calculate the average occupancy.."], ["UNC_Q_RXL_FLITS_G0:IDLE", "Counts the number of flits received from the QPI Link.. Number of data flits over QPI that do not hold payload. When QPI is not in a power saving state, it continuously transmits flits across the link. When there are no protocol flits to send, it will send IDLE and NULL flits across."], ["UNC_Q_RXL_FLITS_G0:DATA", "Counts the number of flits received from the QPI Link.. Number of data flits over QPI."], ["UNC_Q_RXL_FLITS_G0:NON_DATA", "Counts the number of flits received from the QPI Link.. Number of non-NULL non-data flits over QPI."], ["UNC_Q_RXL_FLITS_G1:DRS", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for SNP, HOM, and DRS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 1 -- DRS Flits (both Header and Data)."], ["UNC_Q_RXL_FLITS_G1:DRS_DATA", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for SNP, HOM, and DRS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 1 -- DRS Data Flits."], ["UNC_Q_RXL_FLITS_G1:DRS_NONDATA", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for SNP, HOM, and DRS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 1 -- DRS Header Flits."], ["UNC_Q_RXL_FLITS_G1:HOM", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for SNP, HOM, and DRS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 1 -- HOM Flits."], ["UNC_Q_RXL_FLITS_G1:HOM_NONREQ", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for SNP, HOM, and DRS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 1 -- HOM Non-Request Flits."], ["UNC_Q_RXL_FLITS_G1:HOM_REQ", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for SNP, HOM, and DRS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 1 -- HOM Request Flits."], ["UNC_Q_RXL_FLITS_G1:SNP", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for SNP, HOM, and DRS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 1 -- SNP Flits."], ["UNC_Q_RXL_FLITS_G2:NCB", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 2 -- Non-Coherent Rx Flits."], ["UNC_Q_RXL_FLITS_G2:NCB_DATA", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 2 -- Non-Coherent data Rx Flits."], ["UNC_Q_RXL_FLITS_G2:NCB_NONDATA", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 2 -- Non-Coherent non-data Rx Flits."], ["UNC_Q_RXL_FLITS_G2:NCS", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 2 -- Non-Coherent standard Rx Flits."], ["UNC_Q_RXL_FLITS_G2:NDR_AD", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 2 -- Non-Data Response Rx Flits - AD."], ["UNC_Q_RXL_FLITS_G2:NDR_AK", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 2 -- Non-Data Response Rx Flits - AK."], ["UNC_Q_RXL_INSERTS", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.."], ["UNC_Q_RXL_INSERTS_DRS:VN0", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only DRS flits.. for VN0."], ["UNC_Q_RXL_INSERTS_DRS:VN1", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only DRS flits.. for VN1."], ["UNC_Q_RXL_INSERTS_HOM:VN0", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only HOM flits.. for VN0."], ["UNC_Q_RXL_INSERTS_HOM:VN1", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only HOM flits.. for VN1."], ["UNC_Q_RXL_INSERTS_NCB:VN0", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only NCB flits.. for VN0."], ["UNC_Q_RXL_INSERTS_NCB:VN1", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only NCB flits.. for VN1."], ["UNC_Q_RXL_INSERTS_NCS:VN0", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only NCS flits.. for VN0."], ["UNC_Q_RXL_INSERTS_NCS:VN1", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only NCS flits.. for VN1."], ["UNC_Q_RXL_INSERTS_NDR:VN0", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only NDR flits.. for VN0."], ["UNC_Q_RXL_INSERTS_NDR:VN1", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only NDR flits.. for VN1."], ["UNC_Q_RXL_INSERTS_SNP:VN0", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only SNP flits.. for VN0."], ["UNC_Q_RXL_INSERTS_SNP:VN1", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only SNP flits.. for VN1."], ["UNC_Q_RXL_OCCUPANCY", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.."], ["UNC_Q_RXL_OCCUPANCY_DRS:VN0", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors DRS flits only.. for VN0."], ["UNC_Q_RXL_OCCUPANCY_DRS:VN1", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors DRS flits only.. for VN1."], ["UNC_Q_RXL_OCCUPANCY_HOM:VN0", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors HOM flits only.. for VN0."], ["UNC_Q_RXL_OCCUPANCY_HOM:VN1", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors HOM flits only.. for VN1."], ["UNC_Q_RXL_OCCUPANCY_NCB:VN0", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors NCB flits only.. for VN0."], ["UNC_Q_RXL_OCCUPANCY_NCB:VN1", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors NCB flits only.. for VN1."], ["UNC_Q_RXL_OCCUPANCY_NCS:VN0", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors NCS flits only.. for VN0."], ["UNC_Q_RXL_OCCUPANCY_NCS:VN1", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors NCS flits only.. for VN1."], ["UNC_Q_RXL_OCCUPANCY_NDR:VN0", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors NDR flits only.. for VN0."], ["UNC_Q_RXL_OCCUPANCY_NDR:VN1", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors NDR flits only.. for VN1."], ["UNC_Q_RXL_OCCUPANCY_SNP:VN0", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors SNP flits only.. for VN0."], ["UNC_Q_RXL_OCCUPANCY_SNP:VN1", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors SNP flits only.. for VN1."], ["UNC_Q_TXL0P_POWER_CYCLES", "Number of QPI qfclk cycles spent in L0p power mode.  L0p is a mode where we disable 1/2 of the QPI lanes, decreasing our bandwidth in order to save power.  It increases snoop and data transfer latencies and decreases overall bandwidth.  This mode can be very useful in NUMA optimized workloads that largely only utilize QPI for snoops and their responses.  Use edge detect to count the number of instances when the QPI link entered L0p.  Link power states are per link and per direction, so for example the Tx direction could be in one state while Rx was in another.."], ["UNC_Q_TXL0_POWER_CYCLES", "Number of QPI qfclk cycles spent in L0 power mode in the Link Layer.  L0 is the default mode which provides the highest performance with the most power.  Use edge detect to count the number of instances that the link entered L0.  Link power states are per link and per direction, so for example the Tx direction could be in one state while Rx was in another.  The phy layer  sometimes leaves L0 for training, which will not be captured by this event.."], ["UNC_Q_TXL_BYPASSED", "Counts the number of times that an incoming flit was able to bypass the Tx flit buffer and pass directly out the QPI Link. Generally, when data is transmitted across QPI, it will bypass the TxQ and pass directly to the link.  However, the TxQ will be used with L0p and when LLR occurs, increasing latency to transfer out to the link.."], ["UNC_Q_TXL_CYCLES_NE", "Counts the number of cycles when the TxQ is not empty. Generally, when data is transmitted across QPI, it will bypass the TxQ and pass directly to the link.  However, the TxQ will be used with L0p and when LLR occurs, increasing latency to transfer out to the link.."], ["UNC_Q_TXL_FLITS_G0:DATA", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 0 -- Data Tx Flits."], ["UNC_Q_TXL_FLITS_G0:NON_DATA", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 0 -- Non-Data protocol Tx Flits."], ["UNC_Q_TXL_FLITS_G1:DRS", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 1 -- DRS Flits (both Header and Data)."], ["UNC_Q_TXL_FLITS_G1:DRS_DATA", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 1 -- DRS Data Flits."], ["UNC_Q_TXL_FLITS_G1:DRS_NONDATA", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 1 -- DRS Header Flits."], ["UNC_Q_TXL_FLITS_G1:HOM", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 1 -- HOM Flits."], ["UNC_Q_TXL_FLITS_G1:HOM_NONREQ", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 1 -- HOM Non-Request Flits."], ["UNC_Q_TXL_FLITS_G1:HOM_REQ", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 1 -- HOM Request Flits."], ["UNC_Q_TXL_FLITS_G1:SNP", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 1 -- SNP Flits."], ["UNC_Q_TXL_FLITS_G2:NCB", "Counts the number of flits trasmitted across the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Transferred - Group 2 -- Non-Coherent Bypass Tx Flits."], ["UNC_Q_TXL_FLITS_G2:NCB_DATA", "Counts the number of flits trasmitted across the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Transferred - Group 2 -- Non-Coherent data Tx Flits."], ["UNC_Q_TXL_FLITS_G2:NCB_NONDATA", "Counts the number of flits trasmitted across the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Transferred - Group 2 -- Non-Coherent non-data Tx Flits."], ["UNC_Q_TXL_FLITS_G2:NCS", "Counts the number of flits trasmitted across the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Transferred - Group 2 -- Non-Coherent standard Tx Flits."], ["UNC_Q_TXL_FLITS_G2:NDR_AD", "Counts the number of flits trasmitted across the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Transferred - Group 2 -- Non-Data Response Tx Flits - AD."], ["UNC_Q_TXL_FLITS_G2:NDR_AK", "Counts the number of flits trasmitted across the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Transferred - Group 2 -- Non-Data Response Tx Flits - AK."], ["UNC_Q_TXL_INSERTS", "Number of allocations into the QPI Tx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the TxQ and pass directly to the link.  However, the TxQ will be used with L0p and when LLR occurs, increasing latency to transfer out to the link.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.."], ["UNC_Q_TXL_OCCUPANCY", "Accumulates the number of flits in the TxQ.  Generally, when data is transmitted across QPI, it will bypass the TxQ and pass directly to the link.  However, the TxQ will be used with L0p and when LLR occurs, increasing latency to transfer out to the link. This can be used with the cycles not empty event to track average occupancy, or the allocations event to track average lifetime in the TxQ.."], ["UNC_Q_TXR_AD_HOM_CREDIT_ACQUIRED:VN0", "Number of link layer credits into the R3 (for transactions across the BGF) acquired each cycle. Flow Control FIFO for Home messages on AD.. for VN0."], ["UNC_Q_TXR_AD_HOM_CREDIT_ACQUIRED:VN1", "Number of link layer credits into the R3 (for transactions across the BGF) acquired each cycle. Flow Control FIFO for Home messages on AD.. for VN1."], ["UNC_Q_TXR_AD_HOM_CREDIT_OCCUPANCY:VN0", "Occupancy event that tracks the number of link layer credits into the R3 (for transactions across the BGF) available in each cycle.  Flow Control FIFO for HOM messages on AD.. for VN0."], ["UNC_Q_TXR_AD_HOM_CREDIT_OCCUPANCY:VN1", "Occupancy event that tracks the number of link layer credits into the R3 (for transactions across the BGF) available in each cycle.  Flow Control FIFO for HOM messages on AD.. for VN1."], ["UNC_Q_TXR_AD_NDR_CREDIT_ACQUIRED:VN0", "Number of link layer credits into the R3 (for transactions across the BGF) acquired each cycle.  Flow Control FIFO for NDR messages on AD.. for VN0."], ["UNC_Q_TXR_AD_NDR_CREDIT_ACQUIRED:VN1", "Number of link layer credits into the R3 (for transactions across the BGF) acquired each cycle.  Flow Control FIFO for NDR messages on AD.. for VN1."], ["UNC_Q_TXR_AD_NDR_CREDIT_OCCUPANCY:VN0", "Occupancy event that tracks the number of link layer credits into the R3 (for transactions across the BGF) available in each cycle. Flow Control FIFO  for NDR messages on AD.. for VN0."], ["UNC_Q_TXR_AD_NDR_CREDIT_OCCUPANCY:VN1", "Occupancy event that tracks the number of link layer credits into the R3 (for transactions across the BGF) available in each cycle. Flow Control FIFO  for NDR messages on AD.. for VN1."], ["UNC_Q_TXR_AD_SNP_CREDIT_ACQUIRED:VN0", "Number of link layer credits into the R3 (for transactions across the BGF) acquired each cycle.  Flow Control FIFO for Snoop messages on AD.. for VN0."], ["UNC_Q_TXR_AD_SNP_CREDIT_ACQUIRED:VN1", "Number of link layer credits into the R3 (for transactions across the BGF) acquired each cycle.  Flow Control FIFO for Snoop messages on AD.. for VN1."], ["UNC_Q_TXR_AD_SNP_CREDIT_OCCUPANCY:VN0", "Occupancy event that tracks the number of link layer credits into the R3 (for transactions across the BGF) available in each cycle.  Flow Control FIFO fro Snoop messages on AD.. for VN0."], ["UNC_Q_TXR_AD_SNP_CREDIT_OCCUPANCY:VN1", "Occupancy event that tracks the number of link layer credits into the R3 (for transactions across the BGF) available in each cycle.  Flow Control FIFO fro Snoop messages on AD.. for VN1."], ["UNC_Q_TXR_AK_NDR_CREDIT_ACQUIRED", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. Local NDR message class to AK Egress.."], ["UNC_Q_TXR_AK_NDR_CREDIT_OCCUPANCY", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  Local NDR message class to AK Egress.."], ["UNC_Q_TXR_BL_DRS_CREDIT_ACQUIRED:VN0", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. DRS message class to BL Egress.. R3QPI Egress Credit Occupancy - DRS -- for VN0."], ["UNC_Q_TXR_BL_DRS_CREDIT_ACQUIRED:VN1", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. DRS message class to BL Egress.. R3QPI Egress Credit Occupancy - DRS -- for VN1."], ["UNC_Q_TXR_BL_DRS_CREDIT_ACQUIRED:VN_SHR", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. DRS message class to BL Egress.. R3QPI Egress Credit Occupancy - DRS -- for Shared VN."], ["UNC_Q_TXR_BL_DRS_CREDIT_OCCUPANCY:VN0", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  DRS message class to BL Egress.. R3QPI Egress Credit Occupancy - DRS -- for VN0."], ["UNC_Q_TXR_BL_DRS_CREDIT_OCCUPANCY:VN1", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  DRS message class to BL Egress.. R3QPI Egress Credit Occupancy - DRS -- for VN1."], ["UNC_Q_TXR_BL_DRS_CREDIT_OCCUPANCY:VN_SHR", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  DRS message class to BL Egress.. R3QPI Egress Credit Occupancy - DRS -- for Shared VN."], ["UNC_Q_TXR_BL_NCB_CREDIT_ACQUIRED:VN0", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. NCB message class to BL Egress.. for VN0."], ["UNC_Q_TXR_BL_NCB_CREDIT_ACQUIRED:VN1", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. NCB message class to BL Egress.. for VN1."], ["UNC_Q_TXR_BL_NCB_CREDIT_OCCUPANCY:VN0", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  NCB message class to BL Egress.. for VN0."], ["UNC_Q_TXR_BL_NCB_CREDIT_OCCUPANCY:VN1", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  NCB message class to BL Egress.. for VN1."], ["UNC_Q_TXR_BL_NCS_CREDIT_ACQUIRED:VN0", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. NCS message class to BL Egress.. for VN0."], ["UNC_Q_TXR_BL_NCS_CREDIT_ACQUIRED:VN1", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. NCS message class to BL Egress.. for VN1."], ["UNC_Q_TXR_BL_NCS_CREDIT_OCCUPANCY:VN0", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  NCS message class to BL Egress.. for VN0."], ["UNC_Q_TXR_BL_NCS_CREDIT_OCCUPANCY:VN1", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  NCS message class to BL Egress.. for VN1."], ["UNC_Q_VNA_CREDIT_RETURNS", "Number of VNA credits returned.."], ["UNC_Q_VNA_CREDIT_RETURN_OCCUPANCY", "Number of VNA credits in the Rx side that are waitng to be returned back across the link.."]], "features": {"name": "Intel BroadwellX QPI0 uncore", "no_events": 53, "max_encoding": 3, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_qpi1": {"events": [["UNC_Q_CLOCKTICKS", "Counts the number of clocks in the QPI LL.  This clock runs at 1/4th the GT/s speed of the QPI link.  For example, a 4GT/s link will have qfclk or 1GHz.  BDX does not support dynamic link speeds, so this frequency is fixexed.."], ["UNC_Q_CTO_COUNT", "Counts the number of CTO (cluster trigger outs) events that were asserted across the two slots.  If both slots trigger in a given cycle, the event will increment by 2.  You can use edge detect to count the number of cases when both events triggered.."], ["UNC_Q_DIRECT2CORE:FAILURE_CREDITS", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Failure - Egress Credits."], ["UNC_Q_DIRECT2CORE:FAILURE_CREDITS_MISS", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Failure - Egress and RBT Miss."], ["UNC_Q_DIRECT2CORE:FAILURE_CREDITS_RBT", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Failure - Egress and RBT Invalid."], ["UNC_Q_DIRECT2CORE:FAILURE_CREDITS_RBT_MISS", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Failure - Egress and RBT Miss, Invalid."], ["UNC_Q_DIRECT2CORE:FAILURE_MISS", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Failure - RBT Miss."], ["UNC_Q_DIRECT2CORE:FAILURE_RBT_HIT", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Failure - RBT Invalid."], ["UNC_Q_DIRECT2CORE:FAILURE_RBT_MISS", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Failure - RBT Miss and Invalid."], ["UNC_Q_DIRECT2CORE:SUCCESS_RBT_HIT", "Counts the number of DRS packets that we attempted to do direct2core on.  There are 4 mutually exclusive filters.  Filter [0] can be used to get successful spawns, while [1:3] provide the different failure cases.  Note that this does not count packets that are not candidates for Direct2Core.  The only candidates for Direct2Core are DRS packets destined for Cbos.. Direct 2 Core Spawning -- Spawn Success."], ["UNC_Q_L1_POWER_CYCLES", "Number of QPI qfclk cycles spent in L1 power mode.  L1 is a mode that totally shuts down a QPI link.  Use edge detect to count the number of instances when the QPI link entered L1.  Link power states are per link and per direction, so for example the Tx direction could be in one state while Rx was in another. Because L1 totally shuts down the link, it takes a good amount of time to exit this mode.."], ["UNC_Q_RXL0P_POWER_CYCLES", "Number of QPI qfclk cycles spent in L0p power mode.  L0p is a mode where we disable 1/2 of the QPI lanes, decreasing our bandwidth in order to save power.  It increases snoop and data transfer latencies and decreases overall bandwidth.  This mode can be very useful in NUMA optimized workloads that largely only utilize QPI for snoops and their responses.  Use edge detect to count the number of instances when the QPI link entered L0p.  Link power states are per link and per direction, so for example the Tx direction could be in one state while Rx was in another.."], ["UNC_Q_RXL0_POWER_CYCLES", "Number of QPI qfclk cycles spent in L0 power mode in the Link Layer.  L0 is the default mode which provides the highest performance with the most power.  Use edge detect to count the number of instances that the link entered L0.  Link power states are per link and per direction, so for example the Tx direction could be in one state while Rx was in another.  The phy layer  sometimes leaves L0 for training, which will not be captured by this event.."], ["UNC_Q_RXL_BYPASSED", "Counts the number of times that an incoming flit was able to bypass the flit buffer and pass directly across the BGF and into the Egress.  This is a latency optimization, and should generally be the common case.  If this value is less than the number of flits transferred, it implies that there was queueing getting onto the ring, and thus the transactions saw higher latency.."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN0:DRS", "Counts the number of times that an RxQ VN0 credit was consumed (i.e. message uses a VN0 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- DRS."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN0:HOM", "Counts the number of times that an RxQ VN0 credit was consumed (i.e. message uses a VN0 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- HOM."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN0:NCB", "Counts the number of times that an RxQ VN0 credit was consumed (i.e. message uses a VN0 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- NCB."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN0:NCS", "Counts the number of times that an RxQ VN0 credit was consumed (i.e. message uses a VN0 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- NCS."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN0:NDR", "Counts the number of times that an RxQ VN0 credit was consumed (i.e. message uses a VN0 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- NDR."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN0:SNP", "Counts the number of times that an RxQ VN0 credit was consumed (i.e. message uses a VN0 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- SNP."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN1:DRS", "Counts the number of times that an RxQ VN1 credit was consumed (i.e. message uses a VN1 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- DRS."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN1:HOM", "Counts the number of times that an RxQ VN1 credit was consumed (i.e. message uses a VN1 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- HOM."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN1:NCB", "Counts the number of times that an RxQ VN1 credit was consumed (i.e. message uses a VN1 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- NCB."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN1:NCS", "Counts the number of times that an RxQ VN1 credit was consumed (i.e. message uses a VN1 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- NCS."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN1:NDR", "Counts the number of times that an RxQ VN1 credit was consumed (i.e. message uses a VN1 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- NDR."], ["UNC_Q_RXL_CREDITS_CONSUMED_VN1:SNP", "Counts the number of times that an RxQ VN1 credit was consumed (i.e. message uses a VN1 credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.. VN0 Credit Consumed -- SNP."], ["UNC_Q_RXL_CREDITS_CONSUMED_VNA", "Counts the number of times that an RxQ VNA credit was consumed (i.e. message uses a VNA credit for the Rx Buffer).  This includes packets that went through the RxQ and those that were bypasssed.."], ["UNC_Q_RXL_CYCLES_NE", "Counts the number of cycles that the QPI RxQ was not empty.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy Accumulator event to calculate the average occupancy.."], ["UNC_Q_RXL_FLITS_G0:IDLE", "Counts the number of flits received from the QPI Link.. Number of data flits over QPI that do not hold payload. When QPI is not in a power saving state, it continuously transmits flits across the link. When there are no protocol flits to send, it will send IDLE and NULL flits across."], ["UNC_Q_RXL_FLITS_G0:DATA", "Counts the number of flits received from the QPI Link.. Number of data flits over QPI."], ["UNC_Q_RXL_FLITS_G0:NON_DATA", "Counts the number of flits received from the QPI Link.. Number of non-NULL non-data flits over QPI."], ["UNC_Q_RXL_FLITS_G1:DRS", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for SNP, HOM, and DRS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 1 -- DRS Flits (both Header and Data)."], ["UNC_Q_RXL_FLITS_G1:DRS_DATA", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for SNP, HOM, and DRS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 1 -- DRS Data Flits."], ["UNC_Q_RXL_FLITS_G1:DRS_NONDATA", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for SNP, HOM, and DRS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 1 -- DRS Header Flits."], ["UNC_Q_RXL_FLITS_G1:HOM", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for SNP, HOM, and DRS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 1 -- HOM Flits."], ["UNC_Q_RXL_FLITS_G1:HOM_NONREQ", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for SNP, HOM, and DRS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 1 -- HOM Non-Request Flits."], ["UNC_Q_RXL_FLITS_G1:HOM_REQ", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for SNP, HOM, and DRS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 1 -- HOM Request Flits."], ["UNC_Q_RXL_FLITS_G1:SNP", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for SNP, HOM, and DRS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 1 -- SNP Flits."], ["UNC_Q_RXL_FLITS_G2:NCB", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 2 -- Non-Coherent Rx Flits."], ["UNC_Q_RXL_FLITS_G2:NCB_DATA", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 2 -- Non-Coherent data Rx Flits."], ["UNC_Q_RXL_FLITS_G2:NCB_NONDATA", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 2 -- Non-Coherent non-data Rx Flits."], ["UNC_Q_RXL_FLITS_G2:NCS", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 2 -- Non-Coherent standard Rx Flits."], ["UNC_Q_RXL_FLITS_G2:NDR_AD", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 2 -- Non-Data Response Rx Flits - AD."], ["UNC_Q_RXL_FLITS_G2:NDR_AK", "Counts the number of flits received from the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Received - Group 2 -- Non-Data Response Rx Flits - AK."], ["UNC_Q_RXL_INSERTS", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.."], ["UNC_Q_RXL_INSERTS_DRS:VN0", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only DRS flits.. for VN0."], ["UNC_Q_RXL_INSERTS_DRS:VN1", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only DRS flits.. for VN1."], ["UNC_Q_RXL_INSERTS_HOM:VN0", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only HOM flits.. for VN0."], ["UNC_Q_RXL_INSERTS_HOM:VN1", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only HOM flits.. for VN1."], ["UNC_Q_RXL_INSERTS_NCB:VN0", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only NCB flits.. for VN0."], ["UNC_Q_RXL_INSERTS_NCB:VN1", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only NCB flits.. for VN1."], ["UNC_Q_RXL_INSERTS_NCS:VN0", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only NCS flits.. for VN0."], ["UNC_Q_RXL_INSERTS_NCS:VN1", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only NCS flits.. for VN1."], ["UNC_Q_RXL_INSERTS_NDR:VN0", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only NDR flits.. for VN0."], ["UNC_Q_RXL_INSERTS_NDR:VN1", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only NDR flits.. for VN1."], ["UNC_Q_RXL_INSERTS_SNP:VN0", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only SNP flits.. for VN0."], ["UNC_Q_RXL_INSERTS_SNP:VN1", "Number of allocations into the QPI Rx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.  This monitors only SNP flits.. for VN1."], ["UNC_Q_RXL_OCCUPANCY", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.."], ["UNC_Q_RXL_OCCUPANCY_DRS:VN0", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors DRS flits only.. for VN0."], ["UNC_Q_RXL_OCCUPANCY_DRS:VN1", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors DRS flits only.. for VN1."], ["UNC_Q_RXL_OCCUPANCY_HOM:VN0", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors HOM flits only.. for VN0."], ["UNC_Q_RXL_OCCUPANCY_HOM:VN1", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors HOM flits only.. for VN1."], ["UNC_Q_RXL_OCCUPANCY_NCB:VN0", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors NCB flits only.. for VN0."], ["UNC_Q_RXL_OCCUPANCY_NCB:VN1", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors NCB flits only.. for VN1."], ["UNC_Q_RXL_OCCUPANCY_NCS:VN0", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors NCS flits only.. for VN0."], ["UNC_Q_RXL_OCCUPANCY_NCS:VN1", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors NCS flits only.. for VN1."], ["UNC_Q_RXL_OCCUPANCY_NDR:VN0", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors NDR flits only.. for VN0."], ["UNC_Q_RXL_OCCUPANCY_NDR:VN1", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors NDR flits only.. for VN1."], ["UNC_Q_RXL_OCCUPANCY_SNP:VN0", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors SNP flits only.. for VN0."], ["UNC_Q_RXL_OCCUPANCY_SNP:VN1", "Accumulates the number of elements in the QPI RxQ in each cycle.  Generally, when data is transmitted across QPI, it will bypass the RxQ and pass directly to the ring interface.  If things back up getting transmitted onto the ring, however, it may need to allocate into this buffer, thus increasing the latency.  This event can be used in conjunction with the Flit Buffer Not Empty event to calculate average occupancy, or with the Flit Buffer Allocations event to track average lifetime.  This monitors SNP flits only.. for VN1."], ["UNC_Q_TXL0P_POWER_CYCLES", "Number of QPI qfclk cycles spent in L0p power mode.  L0p is a mode where we disable 1/2 of the QPI lanes, decreasing our bandwidth in order to save power.  It increases snoop and data transfer latencies and decreases overall bandwidth.  This mode can be very useful in NUMA optimized workloads that largely only utilize QPI for snoops and their responses.  Use edge detect to count the number of instances when the QPI link entered L0p.  Link power states are per link and per direction, so for example the Tx direction could be in one state while Rx was in another.."], ["UNC_Q_TXL0_POWER_CYCLES", "Number of QPI qfclk cycles spent in L0 power mode in the Link Layer.  L0 is the default mode which provides the highest performance with the most power.  Use edge detect to count the number of instances that the link entered L0.  Link power states are per link and per direction, so for example the Tx direction could be in one state while Rx was in another.  The phy layer  sometimes leaves L0 for training, which will not be captured by this event.."], ["UNC_Q_TXL_BYPASSED", "Counts the number of times that an incoming flit was able to bypass the Tx flit buffer and pass directly out the QPI Link. Generally, when data is transmitted across QPI, it will bypass the TxQ and pass directly to the link.  However, the TxQ will be used with L0p and when LLR occurs, increasing latency to transfer out to the link.."], ["UNC_Q_TXL_CYCLES_NE", "Counts the number of cycles when the TxQ is not empty. Generally, when data is transmitted across QPI, it will bypass the TxQ and pass directly to the link.  However, the TxQ will be used with L0p and when LLR occurs, increasing latency to transfer out to the link.."], ["UNC_Q_TXL_FLITS_G0:DATA", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 0 -- Data Tx Flits."], ["UNC_Q_TXL_FLITS_G0:NON_DATA", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 0 -- Non-Data protocol Tx Flits."], ["UNC_Q_TXL_FLITS_G1:DRS", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 1 -- DRS Flits (both Header and Data)."], ["UNC_Q_TXL_FLITS_G1:DRS_DATA", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 1 -- DRS Data Flits."], ["UNC_Q_TXL_FLITS_G1:DRS_NONDATA", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 1 -- DRS Header Flits."], ["UNC_Q_TXL_FLITS_G1:HOM", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 1 -- HOM Flits."], ["UNC_Q_TXL_FLITS_G1:HOM_NONREQ", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 1 -- HOM Non-Request Flits."], ["UNC_Q_TXL_FLITS_G1:HOM_REQ", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 1 -- HOM Request Flits."], ["UNC_Q_TXL_FLITS_G1:SNP", "Counts the number of flits transmitted across the QPI Link.  It includes filters for Idle, protocol, and Data Flits.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time (for L0) or 4B instead of 8B for L0p.. Flits Transferred - Group 1 -- SNP Flits."], ["UNC_Q_TXL_FLITS_G2:NCB", "Counts the number of flits trasmitted across the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Transferred - Group 2 -- Non-Coherent Bypass Tx Flits."], ["UNC_Q_TXL_FLITS_G2:NCB_DATA", "Counts the number of flits trasmitted across the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Transferred - Group 2 -- Non-Coherent data Tx Flits."], ["UNC_Q_TXL_FLITS_G2:NCB_NONDATA", "Counts the number of flits trasmitted across the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Transferred - Group 2 -- Non-Coherent non-data Tx Flits."], ["UNC_Q_TXL_FLITS_G2:NCS", "Counts the number of flits trasmitted across the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Transferred - Group 2 -- Non-Coherent standard Tx Flits."], ["UNC_Q_TXL_FLITS_G2:NDR_AD", "Counts the number of flits trasmitted across the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Transferred - Group 2 -- Non-Data Response Tx Flits - AD."], ["UNC_Q_TXL_FLITS_G2:NDR_AK", "Counts the number of flits trasmitted across the QPI Link.  This is one of three groups that allow us to track flits.  It includes filters for NDR, NCB, and NCS message classes.  Each flit is made up of 80 bits of information (in addition to some ECC data).  In full-width (L0) mode, flits are made up of four fits, each of which contains 20 bits of data (along with some additional ECC data).  In half-width (L0p) mode, the fits are only 10 bits, and therefore it takes twice as many fits to transmit a flit.  When one talks about QPI speed (for example, 8.0 GT/s), the transfers here refer to fits.  Therefore, in L0, the system will transfer 1 flit at the rate of 1/4th the QPI speed.  One can calculate the bandwidth of the link by taking: flits*80b/time.  Note that this is not the same as data bandwidth.  For example, when we are transferring a 64B cacheline across QPI, we will break it into 9 flits -- 1 with header information and 8 with 64 bits of actual data and an additional 16 bits of other information.  To calculate data bandwidth, one should therefore do: data flits * 8B / time.. Flits Transferred - Group 2 -- Non-Data Response Tx Flits - AK."], ["UNC_Q_TXL_INSERTS", "Number of allocations into the QPI Tx Flit Buffer.  Generally, when data is transmitted across QPI, it will bypass the TxQ and pass directly to the link.  However, the TxQ will be used with L0p and when LLR occurs, increasing latency to transfer out to the link.  This event can be used in conjunction with the Flit Buffer Occupancy event in order to calculate the average flit buffer lifetime.."], ["UNC_Q_TXL_OCCUPANCY", "Accumulates the number of flits in the TxQ.  Generally, when data is transmitted across QPI, it will bypass the TxQ and pass directly to the link.  However, the TxQ will be used with L0p and when LLR occurs, increasing latency to transfer out to the link. This can be used with the cycles not empty event to track average occupancy, or the allocations event to track average lifetime in the TxQ.."], ["UNC_Q_TXR_AD_HOM_CREDIT_ACQUIRED:VN0", "Number of link layer credits into the R3 (for transactions across the BGF) acquired each cycle. Flow Control FIFO for Home messages on AD.. for VN0."], ["UNC_Q_TXR_AD_HOM_CREDIT_ACQUIRED:VN1", "Number of link layer credits into the R3 (for transactions across the BGF) acquired each cycle. Flow Control FIFO for Home messages on AD.. for VN1."], ["UNC_Q_TXR_AD_HOM_CREDIT_OCCUPANCY:VN0", "Occupancy event that tracks the number of link layer credits into the R3 (for transactions across the BGF) available in each cycle.  Flow Control FIFO for HOM messages on AD.. for VN0."], ["UNC_Q_TXR_AD_HOM_CREDIT_OCCUPANCY:VN1", "Occupancy event that tracks the number of link layer credits into the R3 (for transactions across the BGF) available in each cycle.  Flow Control FIFO for HOM messages on AD.. for VN1."], ["UNC_Q_TXR_AD_NDR_CREDIT_ACQUIRED:VN0", "Number of link layer credits into the R3 (for transactions across the BGF) acquired each cycle.  Flow Control FIFO for NDR messages on AD.. for VN0."], ["UNC_Q_TXR_AD_NDR_CREDIT_ACQUIRED:VN1", "Number of link layer credits into the R3 (for transactions across the BGF) acquired each cycle.  Flow Control FIFO for NDR messages on AD.. for VN1."], ["UNC_Q_TXR_AD_NDR_CREDIT_OCCUPANCY:VN0", "Occupancy event that tracks the number of link layer credits into the R3 (for transactions across the BGF) available in each cycle. Flow Control FIFO  for NDR messages on AD.. for VN0."], ["UNC_Q_TXR_AD_NDR_CREDIT_OCCUPANCY:VN1", "Occupancy event that tracks the number of link layer credits into the R3 (for transactions across the BGF) available in each cycle. Flow Control FIFO  for NDR messages on AD.. for VN1."], ["UNC_Q_TXR_AD_SNP_CREDIT_ACQUIRED:VN0", "Number of link layer credits into the R3 (for transactions across the BGF) acquired each cycle.  Flow Control FIFO for Snoop messages on AD.. for VN0."], ["UNC_Q_TXR_AD_SNP_CREDIT_ACQUIRED:VN1", "Number of link layer credits into the R3 (for transactions across the BGF) acquired each cycle.  Flow Control FIFO for Snoop messages on AD.. for VN1."], ["UNC_Q_TXR_AD_SNP_CREDIT_OCCUPANCY:VN0", "Occupancy event that tracks the number of link layer credits into the R3 (for transactions across the BGF) available in each cycle.  Flow Control FIFO fro Snoop messages on AD.. for VN0."], ["UNC_Q_TXR_AD_SNP_CREDIT_OCCUPANCY:VN1", "Occupancy event that tracks the number of link layer credits into the R3 (for transactions across the BGF) available in each cycle.  Flow Control FIFO fro Snoop messages on AD.. for VN1."], ["UNC_Q_TXR_AK_NDR_CREDIT_ACQUIRED", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. Local NDR message class to AK Egress.."], ["UNC_Q_TXR_AK_NDR_CREDIT_OCCUPANCY", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  Local NDR message class to AK Egress.."], ["UNC_Q_TXR_BL_DRS_CREDIT_ACQUIRED:VN0", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. DRS message class to BL Egress.. R3QPI Egress Credit Occupancy - DRS -- for VN0."], ["UNC_Q_TXR_BL_DRS_CREDIT_ACQUIRED:VN1", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. DRS message class to BL Egress.. R3QPI Egress Credit Occupancy - DRS -- for VN1."], ["UNC_Q_TXR_BL_DRS_CREDIT_ACQUIRED:VN_SHR", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. DRS message class to BL Egress.. R3QPI Egress Credit Occupancy - DRS -- for Shared VN."], ["UNC_Q_TXR_BL_DRS_CREDIT_OCCUPANCY:VN0", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  DRS message class to BL Egress.. R3QPI Egress Credit Occupancy - DRS -- for VN0."], ["UNC_Q_TXR_BL_DRS_CREDIT_OCCUPANCY:VN1", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  DRS message class to BL Egress.. R3QPI Egress Credit Occupancy - DRS -- for VN1."], ["UNC_Q_TXR_BL_DRS_CREDIT_OCCUPANCY:VN_SHR", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  DRS message class to BL Egress.. R3QPI Egress Credit Occupancy - DRS -- for Shared VN."], ["UNC_Q_TXR_BL_NCB_CREDIT_ACQUIRED:VN0", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. NCB message class to BL Egress.. for VN0."], ["UNC_Q_TXR_BL_NCB_CREDIT_ACQUIRED:VN1", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. NCB message class to BL Egress.. for VN1."], ["UNC_Q_TXR_BL_NCB_CREDIT_OCCUPANCY:VN0", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  NCB message class to BL Egress.. for VN0."], ["UNC_Q_TXR_BL_NCB_CREDIT_OCCUPANCY:VN1", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  NCB message class to BL Egress.. for VN1."], ["UNC_Q_TXR_BL_NCS_CREDIT_ACQUIRED:VN0", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. NCS message class to BL Egress.. for VN0."], ["UNC_Q_TXR_BL_NCS_CREDIT_ACQUIRED:VN1", "Number of credits into the R3 (for transactions across the BGF) acquired each cycle. NCS message class to BL Egress.. for VN1."], ["UNC_Q_TXR_BL_NCS_CREDIT_OCCUPANCY:VN0", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  NCS message class to BL Egress.. for VN0."], ["UNC_Q_TXR_BL_NCS_CREDIT_OCCUPANCY:VN1", "Occupancy event that tracks the number of credits into the R3 (for transactions across the BGF) available in each cycle.  NCS message class to BL Egress.. for VN1."], ["UNC_Q_VNA_CREDIT_RETURNS", "Number of VNA credits returned.."], ["UNC_Q_VNA_CREDIT_RETURN_OCCUPANCY", "Number of VNA credits in the Rx side that are waitng to be returned back across the link.."]], "features": {"name": "Intel BroadwellX QPI1 uncore", "no_events": 53, "max_encoding": 3, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_ubo": {"events": [["UNC_U_EVENT_MSG:DOORBELL_RCVD", "Virtual Logical Wire (legacy) message were received from uncore. VLW Received."], ["UNC_U_PHOLD_CYCLES:ASSERT_TO_ACK", "PHOLD cycles.  Filter from source CoreID.. Cycles PHOLD Assert to Ack. Assert to ACK."], ["UNC_U_RACU_REQUESTS", "Number outstanding register requests within message channel tracker."]], "features": {"name": "Intel BroadwellX U-Box uncore", "no_events": 3, "max_encoding": 1, "counters": 3, "type": "uncore PMU"}}, "bdx_unc_r2pcie": {"events": [["UNC_R2_CLOCKTICKS", "Counts the number of uclks in the R2PCIe uclk domain.  This could be slightly different than the count in the Ubox because of enable/freeze delays.  However, because the R2PCIe is close to the Ubox, they generally should not diverge by more than a handful of cycles.."], ["UNC_R2_IIO_CREDIT:ISOCH_QPI0", "TBD. TBD."], ["UNC_R2_IIO_CREDIT:ISOCH_QPI1", "TBD. TBD."], ["UNC_R2_IIO_CREDIT:PRQ_QPI0", "TBD. TBD."], ["UNC_R2_IIO_CREDIT:PRQ_QPI1", "TBD. TBD."], ["UNC_R2_RING_AD_USED:CCW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise."], ["UNC_R2_RING_AD_USED:CCW_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Even."], ["UNC_R2_RING_AD_USED:CCW_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Odd."], ["UNC_R2_RING_AD_USED:CW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise."], ["UNC_R2_RING_AD_USED:CW_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Even."], ["UNC_R2_RING_AD_USED:CW_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Odd."], ["UNC_R2_RING_AK_BOUNCES:DN", "Counts the number of times when a request destined for the AK ingress bounced.. AK Ingress Bounced -- Dn."], ["UNC_R2_RING_AK_BOUNCES:UP", "Counts the number of times when a request destined for the AK ingress bounced.. AK Ingress Bounced -- Up."], ["UNC_R2_RING_AK_USED:CCW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise."], ["UNC_R2_RING_AK_USED:CCW_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Even."], ["UNC_R2_RING_AK_USED:CCW_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Odd."], ["UNC_R2_RING_AK_USED:CW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise."], ["UNC_R2_RING_AK_USED:CW_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Even."], ["UNC_R2_RING_AK_USED:CW_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Odd."], ["UNC_R2_RING_BL_USED:CCW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise."], ["UNC_R2_RING_BL_USED:CCW_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Even."], ["UNC_R2_RING_BL_USED:CCW_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Odd."], ["UNC_R2_RING_BL_USED:CW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise."], ["UNC_R2_RING_BL_USED:CW_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Even."], ["UNC_R2_RING_BL_USED:CW_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Odd."], ["UNC_R2_RING_IV_USED:ANY", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sent, but does not include when packets are being sunk into the ring stop.. Any directions."], ["UNC_R2_RING_IV_USED:CCW", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sent, but does not include when packets are being sunk into the ring stop.. Counterclockwise."], ["UNC_R2_RING_IV_USED:CW", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sent, but does not include when packets are being sunk into the ring stop.. Clockwise."], ["UNC_R2_RXR_CYCLES_NE:NCB", "Counts the number of cycles when the R2PCIe Ingress is not empty.  This tracks one of the three rings that are used by the R2PCIe agent.  This can be used in conjunction with the R2PCIe Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. NCB."], ["UNC_R2_RXR_CYCLES_NE:NCS", "Counts the number of cycles when the R2PCIe Ingress is not empty.  This tracks one of the three rings that are used by the R2PCIe agent.  This can be used in conjunction with the R2PCIe Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. NCS."], ["UNC_R2_RXR_INSERTS:NCB", "Counts the number of allocations into the R2PCIe Ingress.  This tracks one of the three rings that are used by the R2PCIe agent.  This can be used in conjunction with the R2PCIe Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. NCB."], ["UNC_R2_RXR_INSERTS:NCS", "Counts the number of allocations into the R2PCIe Ingress.  This tracks one of the three rings that are used by the R2PCIe agent.  This can be used in conjunction with the R2PCIe Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. NCS."], ["UNC_R2_RXR_OCCUPANCY:DRS", "Accumulates the occupancy of a given R2PCIe Ingress queue in each cycles.  This tracks one of the three ring Ingress buffers.  This can be used with the R2PCIe Ingress Not Empty event to calculate average occupancy or the R2PCIe Ingress Allocations event in order to calculate average queuing latency.. Ingress Occupancy Accumulator -- DRS."], ["UNC_R2_SBO0_CREDITS_ACQUIRED:AD", "Number of Sbo 0 credits acquired in a given cycle, per ring.. SBo0 Credits Acquired -- For AD Ring."], ["UNC_R2_SBO0_CREDITS_ACQUIRED:BL", "Number of Sbo 0 credits acquired in a given cycle, per ring.. SBo0 Credits Acquired -- For BL Ring."], ["UNC_R2_STALL_NO_SBO_CREDIT:SBO0_AD", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo0, AD Ring."], ["UNC_R2_STALL_NO_SBO_CREDIT:SBO0_BL", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo0, BL Ring."], ["UNC_R2_STALL_NO_SBO_CREDIT:SBO1_AD", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo1, AD Ring."], ["UNC_R2_STALL_NO_SBO_CREDIT:SBO1_BL", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo1, BL Ring."], ["UNC_R2_TXR_CYCLES_FULL:AD", "Counts the number of cycles when the R2PCIe Egress buffer is full.. Egress Cycles Full -- AD."], ["UNC_R2_TXR_CYCLES_FULL:AK", "Counts the number of cycles when the R2PCIe Egress buffer is full.. Egress Cycles Full -- AK."], ["UNC_R2_TXR_CYCLES_FULL:BL", "Counts the number of cycles when the R2PCIe Egress buffer is full.. Egress Cycles Full -- BL."], ["UNC_R2_TXR_CYCLES_NE:AD", "Counts the number of cycles when the R2PCIe Egress is not empty.  This tracks one of the three rings that are used by the R2PCIe agent.  This can be used in conjunction with the R2PCIe Egress Occupancy Accumulator event in order to calculate average queue occupancy.  Only a single Egress queue can be tracked at any given time.  It is not possible to filter based on direction or polarity.. Egress Cycles Not Empty -- AD."], ["UNC_R2_TXR_CYCLES_NE:AK", "Counts the number of cycles when the R2PCIe Egress is not empty.  This tracks one of the three rings that are used by the R2PCIe agent.  This can be used in conjunction with the R2PCIe Egress Occupancy Accumulator event in order to calculate average queue occupancy.  Only a single Egress queue can be tracked at any given time.  It is not possible to filter based on direction or polarity.. Egress Cycles Not Empty -- AK."], ["UNC_R2_TXR_CYCLES_NE:BL", "Counts the number of cycles when the R2PCIe Egress is not empty.  This tracks one of the three rings that are used by the R2PCIe agent.  This can be used in conjunction with the R2PCIe Egress Occupancy Accumulator event in order to calculate average queue occupancy.  Only a single Egress queue can be tracked at any given time.  It is not possible to filter based on direction or polarity.. Egress Cycles Not Empty -- BL."], ["UNC_R2_TXR_NACK_CW:DN_AD", "TBD. Egress CCW NACK -- AD CCW."], ["UNC_R2_TXR_NACK_CW:DN_AK", "TBD. Egress CCW NACK -- AK CCW."], ["UNC_R2_TXR_NACK_CW:DN_BL", "TBD. Egress CCW NACK -- BL CCW."], ["UNC_R2_TXR_NACK_CW:UP_AD", "TBD. Egress CCW NACK -- AK CCW."], ["UNC_R2_TXR_NACK_CW:UP_AK", "TBD. Egress CCW NACK -- BL CW."], ["UNC_R2_TXR_NACK_CW:UP_BL", "TBD. Egress CCW NACK -- BL CCW."]], "features": {"name": "Intel BroadwellX R2PCIe uncore", "no_events": 15, "max_encoding": 1, "counters": 4, "type": "uncore PMU"}}, "bdx_unc_r3qpi0": {"events": [["UNC_R3_CLOCKTICKS", "Counts the number of uclks in the QPI uclk domain.  This could be slightly different than the count in the Ubox because of enable/freeze delays.  However, because the QPI Agent is close to the Ubox, they generally should not diverge by more than a handful of cycles.."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO10", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO11", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO12", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO13", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO14_16", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO8", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO9", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO_15_17", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO0", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO1", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO2", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO3", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO4", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO5", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO6", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO7", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_HA_R2_BL_CREDITS_EMPTY:HA0", "No credits available to send to either HA or R2 on the BL Ring. HA/R2 AD Credits Empty."], ["UNC_R3_HA_R2_BL_CREDITS_EMPTY:HA1", "No credits available to send to either HA or R2 on the BL Ring. HA/R2 AD Credits Empty."], ["UNC_R3_HA_R2_BL_CREDITS_EMPTY:R2_NCB", "No credits available to send to either HA or R2 on the BL Ring. HA/R2 AD Credits Empty."], ["UNC_R3_HA_R2_BL_CREDITS_EMPTY:R2_NCS", "No credits available to send to either HA or R2 on the BL Ring. HA/R2 AD Credits Empty."], ["UNC_R3_QPI0_AD_CREDITS_EMPTY:VN0_HOM", "No credits available to send to QPI0 on the AD Ring. VN0 HOM messages."], ["UNC_R3_QPI0_AD_CREDITS_EMPTY:VN0_NDR", "No credits available to send to QPI0 on the AD Ring. VN0 NDR messages."], ["UNC_R3_QPI0_AD_CREDITS_EMPTY:VN0_SNP", "No credits available to send to QPI0 on the AD Ring. VN0 SNP messages."], ["UNC_R3_QPI0_AD_CREDITS_EMPTY:VN1_HOM", "No credits available to send to QPI0 on the AD Ring. VN1 HOM messages."], ["UNC_R3_QPI0_AD_CREDITS_EMPTY:VN1_NDR", "No credits available to send to QPI0 on the AD Ring. VN1 NDR messages."], ["UNC_R3_QPI0_AD_CREDITS_EMPTY:VN1_SNP", "No credits available to send to QPI0 on the AD Ring. VN1 SNP messages."], ["UNC_R3_QPI0_AD_CREDITS_EMPTY:VNA", "No credits available to send to QPI0 on the AD Ring. VNA messages."], ["UNC_R3_QPI0_BL_CREDITS_EMPTY:VN1_HOM", "No credits available to send to QPI0 on the BL Ring. QPIx BL Credits Empty."], ["UNC_R3_QPI0_BL_CREDITS_EMPTY:VN1_NDR", "No credits available to send to QPI0 on the BL Ring. QPIx BL Credits Empty."], ["UNC_R3_QPI0_BL_CREDITS_EMPTY:VN1_SNP", "No credits available to send to QPI0 on the BL Ring. QPIx BL Credits Empty."], ["UNC_R3_QPI0_BL_CREDITS_EMPTY:VNA", "No credits available to send to QPI0 on the BL Ring. QPIx BL Credits Empty."], ["UNC_R3_QPI1_AD_CREDITS_EMPTY:VN0_HOM", "No credits available to send to QPI1 on the AD Ring. VN0 HOM messages."], ["UNC_R3_QPI1_AD_CREDITS_EMPTY:VN0_NDR", "No credits available to send to QPI1 on the AD Ring. VN0 NDR messages."], ["UNC_R3_QPI1_AD_CREDITS_EMPTY:VN0_SNP", "No credits available to send to QPI1 on the AD Ring. VN0 SNP messages."], ["UNC_R3_QPI1_AD_CREDITS_EMPTY:VN1_HOM", "No credits available to send to QPI1 on the AD Ring. VN1 HOM messages."], ["UNC_R3_QPI1_AD_CREDITS_EMPTY:VN1_NDR", "No credits available to send to QPI1 on the AD Ring. VN1 NDR messages."], ["UNC_R3_QPI1_AD_CREDITS_EMPTY:VN1_SNP", "No credits available to send to QPI1 on the AD Ring. VN1 SNP messages."], ["UNC_R3_QPI1_AD_CREDITS_EMPTY:VNA", "No credits available to send to QPI1 on the AD Ring. VNA messages."], ["UNC_R3_QPI1_BL_CREDITS_EMPTY:VN0_HOM", "No credits available to send to QPI1 on the BL Ring. VN0 HOM messages."], ["UNC_R3_QPI1_BL_CREDITS_EMPTY:VN0_NDR", "No credits available to send to QPI1 on the BL Ring. VN0 NDR messages."], ["UNC_R3_QPI1_BL_CREDITS_EMPTY:VN0_SNP", "No credits available to send to QPI1 on the BL Ring. VN0 SNP messages."], ["UNC_R3_QPI1_BL_CREDITS_EMPTY:VN1_HOM", "No credits available to send to QPI1 on the BL Ring. VN1 HOM messages."], ["UNC_R3_QPI1_BL_CREDITS_EMPTY:VN1_NDR", "No credits available to send to QPI1 on the BL Ring. VN1 NDR messages."], ["UNC_R3_QPI1_BL_CREDITS_EMPTY:VN1_SNP", "No credits available to send to QPI1 on the BL Ring. VN1 SNP messages."], ["UNC_R3_QPI1_BL_CREDITS_EMPTY:VNA", "No credits available to send to QPI1 on the BL Ring. VNA messages."], ["UNC_R3_RING_AD_USED:CCW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise."], ["UNC_R3_RING_AD_USED:CCW_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Even."], ["UNC_R3_RING_AD_USED:CCW_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Odd."], ["UNC_R3_RING_AD_USED:CW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise."], ["UNC_R3_RING_AD_USED:CW_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Even."], ["UNC_R3_RING_AD_USED:CW_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Odd."], ["UNC_R3_RING_AK_USED:CCW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise."], ["UNC_R3_RING_AK_USED:CCW_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Even."], ["UNC_R3_RING_AK_USED:CCW_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Odd."], ["UNC_R3_RING_AK_USED:CW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise."], ["UNC_R3_RING_AK_USED:CW_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Even."], ["UNC_R3_RING_AK_USED:CW_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Odd."], ["UNC_R3_RING_BL_USED:CCW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise."], ["UNC_R3_RING_BL_USED:CCW_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Even."], ["UNC_R3_RING_BL_USED:CCW_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Odd."], ["UNC_R3_RING_BL_USED:CW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise."], ["UNC_R3_RING_BL_USED:CW_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Even."], ["UNC_R3_RING_BL_USED:CW_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Odd."], ["UNC_R3_RING_IV_USED:ANY", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sent, but does not include when packets are being sunk into the ring stop.. Any."], ["UNC_R3_RING_IV_USED:CW", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sent, but does not include when packets are being sunk into the ring stop.. Clockwise."], ["UNC_R3_RING_SINK_STARVED:AK", "Number of cycles the ringstop is in starvation (per ring). AK."], ["UNC_R3_RXR_CYCLES_NE:HOM", "Counts the number of cycles when the QPI Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Cycles Not Empty -- HOM."], ["UNC_R3_RXR_CYCLES_NE:NDR", "Counts the number of cycles when the QPI Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Cycles Not Empty -- NDR."], ["UNC_R3_RXR_CYCLES_NE:SNP", "Counts the number of cycles when the QPI Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Cycles Not Empty -- SNP."], ["UNC_R3_RXR_CYCLES_NE_VN1:DRS", "Counts the number of cycles when the QPI VN1  Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. VN1 Ingress Cycles Not Empty -- DRS."], ["UNC_R3_RXR_CYCLES_NE_VN1:HOM", "Counts the number of cycles when the QPI VN1  Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. VN1 Ingress Cycles Not Empty -- HOM."], ["UNC_R3_RXR_CYCLES_NE_VN1:NCB", "Counts the number of cycles when the QPI VN1  Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. VN1 Ingress Cycles Not Empty -- NCB."], ["UNC_R3_RXR_CYCLES_NE_VN1:NCS", "Counts the number of cycles when the QPI VN1  Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. VN1 Ingress Cycles Not Empty -- NCS."], ["UNC_R3_RXR_CYCLES_NE_VN1:NDR", "Counts the number of cycles when the QPI VN1  Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. VN1 Ingress Cycles Not Empty -- NDR."], ["UNC_R3_RXR_CYCLES_NE_VN1:SNP", "Counts the number of cycles when the QPI VN1  Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. VN1 Ingress Cycles Not Empty -- SNP."], ["UNC_R3_RXR_INSERTS:DRS", "Counts the number of allocations into the QPI Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- DRS."], ["UNC_R3_RXR_INSERTS:HOM", "Counts the number of allocations into the QPI Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- HOM."], ["UNC_R3_RXR_INSERTS:NCB", "Counts the number of allocations into the QPI Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- NCB."], ["UNC_R3_RXR_INSERTS:NCS", "Counts the number of allocations into the QPI Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- NCS."], ["UNC_R3_RXR_INSERTS:NDR", "Counts the number of allocations into the QPI Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- NDR."], ["UNC_R3_RXR_INSERTS:SNP", "Counts the number of allocations into the QPI Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- SNP."], ["UNC_R3_RXR_INSERTS_VN1:DRS", "Counts the number of allocations into the QPI VN1  Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- DRS."], ["UNC_R3_RXR_INSERTS_VN1:HOM", "Counts the number of allocations into the QPI VN1  Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- HOM."], ["UNC_R3_RXR_INSERTS_VN1:NCB", "Counts the number of allocations into the QPI VN1  Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- NCB."], ["UNC_R3_RXR_INSERTS_VN1:NCS", "Counts the number of allocations into the QPI VN1  Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- NCS."], ["UNC_R3_RXR_INSERTS_VN1:NDR", "Counts the number of allocations into the QPI VN1  Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- NDR."], ["UNC_R3_RXR_INSERTS_VN1:SNP", "Counts the number of allocations into the QPI VN1  Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- SNP."], ["UNC_R3_RXR_OCCUPANCY_VN1:DRS", "Accumulates the occupancy of a given QPI VN1  Ingress queue in each cycles.  This tracks one of the three ring Ingress buffers.  This can be used with the QPI VN1  Ingress Not Empty event to calculate average occupancy or the QPI VN1  Ingress Allocations event in order to calculate average queuing latency.. Ingress Allocations -- DRS."], ["UNC_R3_RXR_OCCUPANCY_VN1:HOM", "Accumulates the occupancy of a given QPI VN1  Ingress queue in each cycles.  This tracks one of the three ring Ingress buffers.  This can be used with the QPI VN1  Ingress Not Empty event to calculate average occupancy or the QPI VN1  Ingress Allocations event in order to calculate average queuing latency.. Ingress Allocations -- HOM."], ["UNC_R3_RXR_OCCUPANCY_VN1:NCB", "Accumulates the occupancy of a given QPI VN1  Ingress queue in each cycles.  This tracks one of the three ring Ingress buffers.  This can be used with the QPI VN1  Ingress Not Empty event to calculate average occupancy or the QPI VN1  Ingress Allocations event in order to calculate average queuing latency.. Ingress Allocations -- NCB."], ["UNC_R3_RXR_OCCUPANCY_VN1:NCS", "Accumulates the occupancy of a given QPI VN1  Ingress queue in each cycles.  This tracks one of the three ring Ingress buffers.  This can be used with the QPI VN1  Ingress Not Empty event to calculate average occupancy or the QPI VN1  Ingress Allocations event in order to calculate average queuing latency.. Ingress Allocations -- NCS."], ["UNC_R3_RXR_OCCUPANCY_VN1:NDR", "Accumulates the occupancy of a given QPI VN1  Ingress queue in each cycles.  This tracks one of the three ring Ingress buffers.  This can be used with the QPI VN1  Ingress Not Empty event to calculate average occupancy or the QPI VN1  Ingress Allocations event in order to calculate average queuing latency.. Ingress Allocations -- NDR."], ["UNC_R3_RXR_OCCUPANCY_VN1:SNP", "Accumulates the occupancy of a given QPI VN1  Ingress queue in each cycles.  This tracks one of the three ring Ingress buffers.  This can be used with the QPI VN1  Ingress Not Empty event to calculate average occupancy or the QPI VN1  Ingress Allocations event in order to calculate average queuing latency.. Ingress Allocations -- SNP."], ["UNC_R3_SBO0_CREDITS_ACQUIRED:AD", "Number of Sbo 0 credits acquired in a given cycle, per ring.. SBo0 Credits Acquired -- For AD Ring."], ["UNC_R3_SBO0_CREDITS_ACQUIRED:BL", "Number of Sbo 0 credits acquired in a given cycle, per ring.. SBo0 Credits Acquired -- For BL Ring."], ["UNC_R3_SBO1_CREDITS_ACQUIRED:AD", "Number of Sbo 1 credits acquired in a given cycle, per ring.. SBo1 Credits Acquired -- For AD Ring."], ["UNC_R3_SBO1_CREDITS_ACQUIRED:BL", "Number of Sbo 1 credits acquired in a given cycle, per ring.. SBo1 Credits Acquired -- For BL Ring."], ["UNC_R3_STALL_NO_SBO_CREDIT:SBO0_AD", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo0, AD Ring."], ["UNC_R3_STALL_NO_SBO_CREDIT:SBO0_BL", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo0, BL Ring."], ["UNC_R3_STALL_NO_SBO_CREDIT:SBO1_AD", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo1, AD Ring."], ["UNC_R3_STALL_NO_SBO_CREDIT:SBO1_BL", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo1, BL Ring."], ["UNC_R3_TXR_NACK:DN_AD", "TBD. Egress CCW NACK -- AD CCW."], ["UNC_R3_TXR_NACK:DN_AK", "TBD. Egress CCW NACK -- AK CCW."], ["UNC_R3_TXR_NACK:DN_BL", "TBD. Egress CCW NACK -- BL CCW."], ["UNC_R3_TXR_NACK:UP_AD", "TBD. Egress CCW NACK -- AK CCW."], ["UNC_R3_TXR_NACK:UP_AK", "TBD. Egress CCW NACK -- BL CW."], ["UNC_R3_TXR_NACK:UP_BL", "TBD. Egress CCW NACK -- BL CCW."], ["UNC_R3_VN0_CREDITS_REJECT:DRS", "Number of times a request failed to acquire a DRS VN0 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN0 credit and is delayed.  This should generally be a rare situation.. VN0 Credit Acquisition Failed on DRS -- DRS Message Class."], ["UNC_R3_VN0_CREDITS_REJECT:HOM", "Number of times a request failed to acquire a DRS VN0 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN0 credit and is delayed.  This should generally be a rare situation.. VN0 Credit Acquisition Failed on DRS -- HOM Message Class."], ["UNC_R3_VN0_CREDITS_REJECT:NCB", "Number of times a request failed to acquire a DRS VN0 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN0 credit and is delayed.  This should generally be a rare situation.. VN0 Credit Acquisition Failed on DRS -- NCB Message Class."], ["UNC_R3_VN0_CREDITS_REJECT:NCS", "Number of times a request failed to acquire a DRS VN0 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN0 credit and is delayed.  This should generally be a rare situation.. VN0 Credit Acquisition Failed on DRS -- NCS Message Class."], ["UNC_R3_VN0_CREDITS_REJECT:NDR", "Number of times a request failed to acquire a DRS VN0 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN0 credit and is delayed.  This should generally be a rare situation.. VN0 Credit Acquisition Failed on DRS -- NDR Message Class."], ["UNC_R3_VN0_CREDITS_REJECT:SNP", "Number of times a request failed to acquire a DRS VN0 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN0 credit and is delayed.  This should generally be a rare situation.. VN0 Credit Acquisition Failed on DRS -- SNP Message Class."], ["UNC_R3_VN0_CREDITS_USED:DRS", "Number of times a VN0 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This counts the number of times a VN0 credit was used.  Note that a single VN0 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN0 will only count a single credit even though it may use multiple buffers.. VN0 Credit Used -- DRS Message Class."], ["UNC_R3_VN0_CREDITS_USED:HOM", "Number of times a VN0 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This counts the number of times a VN0 credit was used.  Note that a single VN0 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN0 will only count a single credit even though it may use multiple buffers.. VN0 Credit Used -- HOM Message Class."], ["UNC_R3_VN0_CREDITS_USED:NCB", "Number of times a VN0 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This counts the number of times a VN0 credit was used.  Note that a single VN0 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN0 will only count a single credit even though it may use multiple buffers.. VN0 Credit Used -- NCB Message Class."], ["UNC_R3_VN0_CREDITS_USED:NCS", "Number of times a VN0 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This counts the number of times a VN0 credit was used.  Note that a single VN0 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN0 will only count a single credit even though it may use multiple buffers.. VN0 Credit Used -- NCS Message Class."], ["UNC_R3_VN0_CREDITS_USED:NDR", "Number of times a VN0 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This counts the number of times a VN0 credit was used.  Note that a single VN0 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN0 will only count a single credit even though it may use multiple buffers.. VN0 Credit Used -- NDR Message Class."], ["UNC_R3_VN0_CREDITS_USED:SNP", "Number of times a VN0 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This counts the number of times a VN0 credit was used.  Note that a single VN0 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN0 will only count a single credit even though it may use multiple buffers.. VN0 Credit Used -- SNP Message Class."], ["UNC_R3_VN1_CREDITS_REJECT:DRS", "Number of times a request failed to acquire a VN1 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN1 credit and is delayed.  This should generally be a rare situation.. VN1 Credit Acquisition Failed on DRS -- DRS Message Class."], ["UNC_R3_VN1_CREDITS_REJECT:HOM", "Number of times a request failed to acquire a VN1 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN1 credit and is delayed.  This should generally be a rare situation.. VN1 Credit Acquisition Failed on DRS -- HOM Message Class."], ["UNC_R3_VN1_CREDITS_REJECT:NCB", "Number of times a request failed to acquire a VN1 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN1 credit and is delayed.  This should generally be a rare situation.. VN1 Credit Acquisition Failed on DRS -- NCB Message Class."], ["UNC_R3_VN1_CREDITS_REJECT:NCS", "Number of times a request failed to acquire a VN1 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN1 credit and is delayed.  This should generally be a rare situation.. VN1 Credit Acquisition Failed on DRS -- NCS Message Class."], ["UNC_R3_VN1_CREDITS_REJECT:NDR", "Number of times a request failed to acquire a VN1 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN1 credit and is delayed.  This should generally be a rare situation.. VN1 Credit Acquisition Failed on DRS -- NDR Message Class."], ["UNC_R3_VN1_CREDITS_REJECT:SNP", "Number of times a request failed to acquire a VN1 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN1 credit and is delayed.  This should generally be a rare situation.. VN1 Credit Acquisition Failed on DRS -- SNP Message Class."], ["UNC_R3_VN1_CREDITS_USED:DRS", "Number of times a VN1 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This counts the number of times a VN1 credit was used.  Note that a single VN1 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN1 will only count a single credit even though it may use multiple buffers.. VN1 Credit Used -- DRS Message Class."], ["UNC_R3_VN1_CREDITS_USED:HOM", "Number of times a VN1 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This counts the number of times a VN1 credit was used.  Note that a single VN1 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN1 will only count a single credit even though it may use multiple buffers.. VN1 Credit Used -- HOM Message Class."], ["UNC_R3_VN1_CREDITS_USED:NCB", "Number of times a VN1 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This counts the number of times a VN1 credit was used.  Note that a single VN1 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN1 will only count a single credit even though it may use multiple buffers.. VN1 Credit Used -- NCB Message Class."], ["UNC_R3_VN1_CREDITS_USED:NCS", "Number of times a VN1 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This counts the number of times a VN1 credit was used.  Note that a single VN1 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN1 will only count a single credit even though it may use multiple buffers.. VN1 Credit Used -- NCS Message Class."], ["UNC_R3_VN1_CREDITS_USED:NDR", "Number of times a VN1 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This counts the number of times a VN1 credit was used.  Note that a single VN1 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN1 will only count a single credit even though it may use multiple buffers.. VN1 Credit Used -- NDR Message Class."], ["UNC_R3_VN1_CREDITS_USED:SNP", "Number of times a VN1 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This counts the number of times a VN1 credit was used.  Note that a single VN1 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN1 will only count a single credit even though it may use multiple buffers.. VN1 Credit Used -- SNP Message Class."], ["UNC_R3_VNA_CREDITS_ACQUIRED:AD", "Number of QPI VNA Credit acquisitions.  This event can be used in conjunction with the VNA In-Use Accumulator to calculate the average lifetime of a credit holder.  VNA credits are used by all message classes in order to communicate across QPI.  If a packet is unable to acquire credits, it will then attempt to use credts from the VN0 pool.  Note that a single packet may require multiple flit buffers (i.e. when data is being transferred).  Therefore, this event will increment by the number of credits acquired in each cycle.  Filtering based on message class is not provided.  One can count the number of packets transferred in a given message class using an qfclk event.. VNA credit Acquisitions -- HOM Message Class."], ["UNC_R3_VNA_CREDITS_ACQUIRED:BL", "Number of QPI VNA Credit acquisitions.  This event can be used in conjunction with the VNA In-Use Accumulator to calculate the average lifetime of a credit holder.  VNA credits are used by all message classes in order to communicate across QPI.  If a packet is unable to acquire credits, it will then attempt to use credts from the VN0 pool.  Note that a single packet may require multiple flit buffers (i.e. when data is being transferred).  Therefore, this event will increment by the number of credits acquired in each cycle.  Filtering based on message class is not provided.  One can count the number of packets transferred in a given message class using an qfclk event.. VNA credit Acquisitions -- HOM Message Class."], ["UNC_R3_VNA_CREDITS_REJECT:DRS", "Number of attempted VNA credit acquisitions that were rejected because the VNA credit pool was full (or almost full).  It is possible to filter this event by message class.  Some packets use more than one flit buffer, and therefore must acquire multiple credits.  Therefore, one could get a reject even if the VNA credits were not fully used up.  The VNA pool is generally used to provide the bulk of the QPI bandwidth (as opposed to the VN0 pool which is used to guarantee forward progress).  VNA credits can run out if the flit buffer on the receiving side starts to queue up substantially.  This can happen if the rest of the uncore is unable to drain the requests fast enough.. VNA Credit Reject -- DRS Message Class."], ["UNC_R3_VNA_CREDITS_REJECT:HOM", "Number of attempted VNA credit acquisitions that were rejected because the VNA credit pool was full (or almost full).  It is possible to filter this event by message class.  Some packets use more than one flit buffer, and therefore must acquire multiple credits.  Therefore, one could get a reject even if the VNA credits were not fully used up.  The VNA pool is generally used to provide the bulk of the QPI bandwidth (as opposed to the VN0 pool which is used to guarantee forward progress).  VNA credits can run out if the flit buffer on the receiving side starts to queue up substantially.  This can happen if the rest of the uncore is unable to drain the requests fast enough.. VNA Credit Reject -- HOM Message Class."], ["UNC_R3_VNA_CREDITS_REJECT:NCB", "Number of attempted VNA credit acquisitions that were rejected because the VNA credit pool was full (or almost full).  It is possible to filter this event by message class.  Some packets use more than one flit buffer, and therefore must acquire multiple credits.  Therefore, one could get a reject even if the VNA credits were not fully used up.  The VNA pool is generally used to provide the bulk of the QPI bandwidth (as opposed to the VN0 pool which is used to guarantee forward progress).  VNA credits can run out if the flit buffer on the receiving side starts to queue up substantially.  This can happen if the rest of the uncore is unable to drain the requests fast enough.. VNA Credit Reject -- NCB Message Class."], ["UNC_R3_VNA_CREDITS_REJECT:NCS", "Number of attempted VNA credit acquisitions that were rejected because the VNA credit pool was full (or almost full).  It is possible to filter this event by message class.  Some packets use more than one flit buffer, and therefore must acquire multiple credits.  Therefore, one could get a reject even if the VNA credits were not fully used up.  The VNA pool is generally used to provide the bulk of the QPI bandwidth (as opposed to the VN0 pool which is used to guarantee forward progress).  VNA credits can run out if the flit buffer on the receiving side starts to queue up substantially.  This can happen if the rest of the uncore is unable to drain the requests fast enough.. VNA Credit Reject -- NCS Message Class."], ["UNC_R3_VNA_CREDITS_REJECT:NDR", "Number of attempted VNA credit acquisitions that were rejected because the VNA credit pool was full (or almost full).  It is possible to filter this event by message class.  Some packets use more than one flit buffer, and therefore must acquire multiple credits.  Therefore, one could get a reject even if the VNA credits were not fully used up.  The VNA pool is generally used to provide the bulk of the QPI bandwidth (as opposed to the VN0 pool which is used to guarantee forward progress).  VNA credits can run out if the flit buffer on the receiving side starts to queue up substantially.  This can happen if the rest of the uncore is unable to drain the requests fast enough.. VNA Credit Reject -- NDR Message Class."], ["UNC_R3_VNA_CREDITS_REJECT:SNP", "Number of attempted VNA credit acquisitions that were rejected because the VNA credit pool was full (or almost full).  It is possible to filter this event by message class.  Some packets use more than one flit buffer, and therefore must acquire multiple credits.  Therefore, one could get a reject even if the VNA credits were not fully used up.  The VNA pool is generally used to provide the bulk of the QPI bandwidth (as opposed to the VN0 pool which is used to guarantee forward progress).  VNA credits can run out if the flit buffer on the receiving side starts to queue up substantially.  This can happen if the rest of the uncore is unable to drain the requests fast enough.. VNA Credit Reject -- SNP Message Class."]], "features": {"name": "Intel BroadwellX R3QPI0 uncore", "no_events": 28, "max_encoding": 1, "counters": 3, "type": "uncore PMU"}}, "bdx_unc_r3qpi1": {"events": [["UNC_R3_CLOCKTICKS", "Counts the number of uclks in the QPI uclk domain.  This could be slightly different than the count in the Ubox because of enable/freeze delays.  However, because the QPI Agent is close to the Ubox, they generally should not diverge by more than a handful of cycles.."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO10", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO11", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO12", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO13", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO14_16", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO8", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO9", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_HI_AD_CREDITS_EMPTY:CBO_15_17", "No credits available to send to Cbox on the AD Ring (covers higher CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO0", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO1", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO2", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO3", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO4", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO5", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO6", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_C_LO_AD_CREDITS_EMPTY:CBO7", "No credits available to send to Cbox on the AD Ring (covers lower CBoxes). CBox AD Credits Empty."], ["UNC_R3_HA_R2_BL_CREDITS_EMPTY:HA0", "No credits available to send to either HA or R2 on the BL Ring. HA/R2 AD Credits Empty."], ["UNC_R3_HA_R2_BL_CREDITS_EMPTY:HA1", "No credits available to send to either HA or R2 on the BL Ring. HA/R2 AD Credits Empty."], ["UNC_R3_HA_R2_BL_CREDITS_EMPTY:R2_NCB", "No credits available to send to either HA or R2 on the BL Ring. HA/R2 AD Credits Empty."], ["UNC_R3_HA_R2_BL_CREDITS_EMPTY:R2_NCS", "No credits available to send to either HA or R2 on the BL Ring. HA/R2 AD Credits Empty."], ["UNC_R3_QPI0_AD_CREDITS_EMPTY:VN0_HOM", "No credits available to send to QPI0 on the AD Ring. VN0 HOM messages."], ["UNC_R3_QPI0_AD_CREDITS_EMPTY:VN0_NDR", "No credits available to send to QPI0 on the AD Ring. VN0 NDR messages."], ["UNC_R3_QPI0_AD_CREDITS_EMPTY:VN0_SNP", "No credits available to send to QPI0 on the AD Ring. VN0 SNP messages."], ["UNC_R3_QPI0_AD_CREDITS_EMPTY:VN1_HOM", "No credits available to send to QPI0 on the AD Ring. VN1 HOM messages."], ["UNC_R3_QPI0_AD_CREDITS_EMPTY:VN1_NDR", "No credits available to send to QPI0 on the AD Ring. VN1 NDR messages."], ["UNC_R3_QPI0_AD_CREDITS_EMPTY:VN1_SNP", "No credits available to send to QPI0 on the AD Ring. VN1 SNP messages."], ["UNC_R3_QPI0_AD_CREDITS_EMPTY:VNA", "No credits available to send to QPI0 on the AD Ring. VNA messages."], ["UNC_R3_QPI0_BL_CREDITS_EMPTY:VN1_HOM", "No credits available to send to QPI0 on the BL Ring. QPIx BL Credits Empty."], ["UNC_R3_QPI0_BL_CREDITS_EMPTY:VN1_NDR", "No credits available to send to QPI0 on the BL Ring. QPIx BL Credits Empty."], ["UNC_R3_QPI0_BL_CREDITS_EMPTY:VN1_SNP", "No credits available to send to QPI0 on the BL Ring. QPIx BL Credits Empty."], ["UNC_R3_QPI0_BL_CREDITS_EMPTY:VNA", "No credits available to send to QPI0 on the BL Ring. QPIx BL Credits Empty."], ["UNC_R3_QPI1_AD_CREDITS_EMPTY:VN0_HOM", "No credits available to send to QPI1 on the AD Ring. VN0 HOM messages."], ["UNC_R3_QPI1_AD_CREDITS_EMPTY:VN0_NDR", "No credits available to send to QPI1 on the AD Ring. VN0 NDR messages."], ["UNC_R3_QPI1_AD_CREDITS_EMPTY:VN0_SNP", "No credits available to send to QPI1 on the AD Ring. VN0 SNP messages."], ["UNC_R3_QPI1_AD_CREDITS_EMPTY:VN1_HOM", "No credits available to send to QPI1 on the AD Ring. VN1 HOM messages."], ["UNC_R3_QPI1_AD_CREDITS_EMPTY:VN1_NDR", "No credits available to send to QPI1 on the AD Ring. VN1 NDR messages."], ["UNC_R3_QPI1_AD_CREDITS_EMPTY:VN1_SNP", "No credits available to send to QPI1 on the AD Ring. VN1 SNP messages."], ["UNC_R3_QPI1_AD_CREDITS_EMPTY:VNA", "No credits available to send to QPI1 on the AD Ring. VNA messages."], ["UNC_R3_QPI1_BL_CREDITS_EMPTY:VN0_HOM", "No credits available to send to QPI1 on the BL Ring. VN0 HOM messages."], ["UNC_R3_QPI1_BL_CREDITS_EMPTY:VN0_NDR", "No credits available to send to QPI1 on the BL Ring. VN0 NDR messages."], ["UNC_R3_QPI1_BL_CREDITS_EMPTY:VN0_SNP", "No credits available to send to QPI1 on the BL Ring. VN0 SNP messages."], ["UNC_R3_QPI1_BL_CREDITS_EMPTY:VN1_HOM", "No credits available to send to QPI1 on the BL Ring. VN1 HOM messages."], ["UNC_R3_QPI1_BL_CREDITS_EMPTY:VN1_NDR", "No credits available to send to QPI1 on the BL Ring. VN1 NDR messages."], ["UNC_R3_QPI1_BL_CREDITS_EMPTY:VN1_SNP", "No credits available to send to QPI1 on the BL Ring. VN1 SNP messages."], ["UNC_R3_QPI1_BL_CREDITS_EMPTY:VNA", "No credits available to send to QPI1 on the BL Ring. VNA messages."], ["UNC_R3_RING_AD_USED:CCW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise."], ["UNC_R3_RING_AD_USED:CCW_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Even."], ["UNC_R3_RING_AD_USED:CCW_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Odd."], ["UNC_R3_RING_AD_USED:CW", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise."], ["UNC_R3_RING_AD_USED:CW_EVEN", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Even."], ["UNC_R3_RING_AD_USED:CW_ODD", "Counts the number of cycles that the AD ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Odd."], ["UNC_R3_RING_AK_USED:CCW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise."], ["UNC_R3_RING_AK_USED:CCW_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Even."], ["UNC_R3_RING_AK_USED:CCW_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Odd."], ["UNC_R3_RING_AK_USED:CW", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise."], ["UNC_R3_RING_AK_USED:CW_EVEN", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Even."], ["UNC_R3_RING_AK_USED:CW_ODD", "Counts the number of cycles that the AK ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Odd."], ["UNC_R3_RING_BL_USED:CCW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise."], ["UNC_R3_RING_BL_USED:CCW_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Even."], ["UNC_R3_RING_BL_USED:CCW_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Counterclockwise and Odd."], ["UNC_R3_RING_BL_USED:CW", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise."], ["UNC_R3_RING_BL_USED:CW_EVEN", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Even."], ["UNC_R3_RING_BL_USED:CW_ODD", "Counts the number of cycles that the BL ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sunk, but does not include when packets are being sent from the ring stop.. Clockwise and Odd."], ["UNC_R3_RING_IV_USED:ANY", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sent, but does not include when packets are being sunk into the ring stop.. Any."], ["UNC_R3_RING_IV_USED:CW", "Counts the number of cycles that the IV ring is being used at this ring stop.  This includes when packets are passing by and when packets are being sent, but does not include when packets are being sunk into the ring stop.. Clockwise."], ["UNC_R3_RING_SINK_STARVED:AK", "Number of cycles the ringstop is in starvation (per ring). AK."], ["UNC_R3_RXR_CYCLES_NE:HOM", "Counts the number of cycles when the QPI Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Cycles Not Empty -- HOM."], ["UNC_R3_RXR_CYCLES_NE:NDR", "Counts the number of cycles when the QPI Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Cycles Not Empty -- NDR."], ["UNC_R3_RXR_CYCLES_NE:SNP", "Counts the number of cycles when the QPI Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Cycles Not Empty -- SNP."], ["UNC_R3_RXR_CYCLES_NE_VN1:DRS", "Counts the number of cycles when the QPI VN1  Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. VN1 Ingress Cycles Not Empty -- DRS."], ["UNC_R3_RXR_CYCLES_NE_VN1:HOM", "Counts the number of cycles when the QPI VN1  Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. VN1 Ingress Cycles Not Empty -- HOM."], ["UNC_R3_RXR_CYCLES_NE_VN1:NCB", "Counts the number of cycles when the QPI VN1  Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. VN1 Ingress Cycles Not Empty -- NCB."], ["UNC_R3_RXR_CYCLES_NE_VN1:NCS", "Counts the number of cycles when the QPI VN1  Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. VN1 Ingress Cycles Not Empty -- NCS."], ["UNC_R3_RXR_CYCLES_NE_VN1:NDR", "Counts the number of cycles when the QPI VN1  Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. VN1 Ingress Cycles Not Empty -- NDR."], ["UNC_R3_RXR_CYCLES_NE_VN1:SNP", "Counts the number of cycles when the QPI VN1  Ingress is not empty.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue occupancy.  Multiple ingress buffers can be tracked at a given time using multiple counters.. VN1 Ingress Cycles Not Empty -- SNP."], ["UNC_R3_RXR_INSERTS:DRS", "Counts the number of allocations into the QPI Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- DRS."], ["UNC_R3_RXR_INSERTS:HOM", "Counts the number of allocations into the QPI Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- HOM."], ["UNC_R3_RXR_INSERTS:NCB", "Counts the number of allocations into the QPI Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- NCB."], ["UNC_R3_RXR_INSERTS:NCS", "Counts the number of allocations into the QPI Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- NCS."], ["UNC_R3_RXR_INSERTS:NDR", "Counts the number of allocations into the QPI Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- NDR."], ["UNC_R3_RXR_INSERTS:SNP", "Counts the number of allocations into the QPI Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- SNP."], ["UNC_R3_RXR_INSERTS_VN1:DRS", "Counts the number of allocations into the QPI VN1  Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- DRS."], ["UNC_R3_RXR_INSERTS_VN1:HOM", "Counts the number of allocations into the QPI VN1  Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- HOM."], ["UNC_R3_RXR_INSERTS_VN1:NCB", "Counts the number of allocations into the QPI VN1  Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- NCB."], ["UNC_R3_RXR_INSERTS_VN1:NCS", "Counts the number of allocations into the QPI VN1  Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- NCS."], ["UNC_R3_RXR_INSERTS_VN1:NDR", "Counts the number of allocations into the QPI VN1  Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- NDR."], ["UNC_R3_RXR_INSERTS_VN1:SNP", "Counts the number of allocations into the QPI VN1  Ingress.  This tracks one of the three rings that are used by the QPI agent.  This can be used in conjunction with the QPI VN1  Ingress Occupancy Accumulator event in order to calculate average queue latency.  Multiple ingress buffers can be tracked at a given time using multiple counters.. Ingress Allocations -- SNP."], ["UNC_R3_RXR_OCCUPANCY_VN1:DRS", "Accumulates the occupancy of a given QPI VN1  Ingress queue in each cycles.  This tracks one of the three ring Ingress buffers.  This can be used with the QPI VN1  Ingress Not Empty event to calculate average occupancy or the QPI VN1  Ingress Allocations event in order to calculate average queuing latency.. Ingress Allocations -- DRS."], ["UNC_R3_RXR_OCCUPANCY_VN1:HOM", "Accumulates the occupancy of a given QPI VN1  Ingress queue in each cycles.  This tracks one of the three ring Ingress buffers.  This can be used with the QPI VN1  Ingress Not Empty event to calculate average occupancy or the QPI VN1  Ingress Allocations event in order to calculate average queuing latency.. Ingress Allocations -- HOM."], ["UNC_R3_RXR_OCCUPANCY_VN1:NCB", "Accumulates the occupancy of a given QPI VN1  Ingress queue in each cycles.  This tracks one of the three ring Ingress buffers.  This can be used with the QPI VN1  Ingress Not Empty event to calculate average occupancy or the QPI VN1  Ingress Allocations event in order to calculate average queuing latency.. Ingress Allocations -- NCB."], ["UNC_R3_RXR_OCCUPANCY_VN1:NCS", "Accumulates the occupancy of a given QPI VN1  Ingress queue in each cycles.  This tracks one of the three ring Ingress buffers.  This can be used with the QPI VN1  Ingress Not Empty event to calculate average occupancy or the QPI VN1  Ingress Allocations event in order to calculate average queuing latency.. Ingress Allocations -- NCS."], ["UNC_R3_RXR_OCCUPANCY_VN1:NDR", "Accumulates the occupancy of a given QPI VN1  Ingress queue in each cycles.  This tracks one of the three ring Ingress buffers.  This can be used with the QPI VN1  Ingress Not Empty event to calculate average occupancy or the QPI VN1  Ingress Allocations event in order to calculate average queuing latency.. Ingress Allocations -- NDR."], ["UNC_R3_RXR_OCCUPANCY_VN1:SNP", "Accumulates the occupancy of a given QPI VN1  Ingress queue in each cycles.  This tracks one of the three ring Ingress buffers.  This can be used with the QPI VN1  Ingress Not Empty event to calculate average occupancy or the QPI VN1  Ingress Allocations event in order to calculate average queuing latency.. Ingress Allocations -- SNP."], ["UNC_R3_SBO0_CREDITS_ACQUIRED:AD", "Number of Sbo 0 credits acquired in a given cycle, per ring.. SBo0 Credits Acquired -- For AD Ring."], ["UNC_R3_SBO0_CREDITS_ACQUIRED:BL", "Number of Sbo 0 credits acquired in a given cycle, per ring.. SBo0 Credits Acquired -- For BL Ring."], ["UNC_R3_SBO1_CREDITS_ACQUIRED:AD", "Number of Sbo 1 credits acquired in a given cycle, per ring.. SBo1 Credits Acquired -- For AD Ring."], ["UNC_R3_SBO1_CREDITS_ACQUIRED:BL", "Number of Sbo 1 credits acquired in a given cycle, per ring.. SBo1 Credits Acquired -- For BL Ring."], ["UNC_R3_STALL_NO_SBO_CREDIT:SBO0_AD", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo0, AD Ring."], ["UNC_R3_STALL_NO_SBO_CREDIT:SBO0_BL", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo0, BL Ring."], ["UNC_R3_STALL_NO_SBO_CREDIT:SBO1_AD", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo1, AD Ring."], ["UNC_R3_STALL_NO_SBO_CREDIT:SBO1_BL", "Number of cycles Egress is stalled waiting for an Sbo credit to become available.  Per Sbo, per Ring.. Stall on No Sbo Credits -- For SBo1, BL Ring."], ["UNC_R3_TXR_NACK:DN_AD", "TBD. Egress CCW NACK -- AD CCW."], ["UNC_R3_TXR_NACK:DN_AK", "TBD. Egress CCW NACK -- AK CCW."], ["UNC_R3_TXR_NACK:DN_BL", "TBD. Egress CCW NACK -- BL CCW."], ["UNC_R3_TXR_NACK:UP_AD", "TBD. Egress CCW NACK -- AK CCW."], ["UNC_R3_TXR_NACK:UP_AK", "TBD. Egress CCW NACK -- BL CW."], ["UNC_R3_TXR_NACK:UP_BL", "TBD. Egress CCW NACK -- BL CCW."], ["UNC_R3_VN0_CREDITS_REJECT:DRS", "Number of times a request failed to acquire a DRS VN0 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN0 credit and is delayed.  This should generally be a rare situation.. VN0 Credit Acquisition Failed on DRS -- DRS Message Class."], ["UNC_R3_VN0_CREDITS_REJECT:HOM", "Number of times a request failed to acquire a DRS VN0 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN0 credit and is delayed.  This should generally be a rare situation.. VN0 Credit Acquisition Failed on DRS -- HOM Message Class."], ["UNC_R3_VN0_CREDITS_REJECT:NCB", "Number of times a request failed to acquire a DRS VN0 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN0 credit and is delayed.  This should generally be a rare situation.. VN0 Credit Acquisition Failed on DRS -- NCB Message Class."], ["UNC_R3_VN0_CREDITS_REJECT:NCS", "Number of times a request failed to acquire a DRS VN0 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN0 credit and is delayed.  This should generally be a rare situation.. VN0 Credit Acquisition Failed on DRS -- NCS Message Class."], ["UNC_R3_VN0_CREDITS_REJECT:NDR", "Number of times a request failed to acquire a DRS VN0 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN0 credit and is delayed.  This should generally be a rare situation.. VN0 Credit Acquisition Failed on DRS -- NDR Message Class."], ["UNC_R3_VN0_CREDITS_REJECT:SNP", "Number of times a request failed to acquire a DRS VN0 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN0 credit and is delayed.  This should generally be a rare situation.. VN0 Credit Acquisition Failed on DRS -- SNP Message Class."], ["UNC_R3_VN0_CREDITS_USED:DRS", "Number of times a VN0 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This counts the number of times a VN0 credit was used.  Note that a single VN0 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN0 will only count a single credit even though it may use multiple buffers.. VN0 Credit Used -- DRS Message Class."], ["UNC_R3_VN0_CREDITS_USED:HOM", "Number of times a VN0 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This counts the number of times a VN0 credit was used.  Note that a single VN0 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN0 will only count a single credit even though it may use multiple buffers.. VN0 Credit Used -- HOM Message Class."], ["UNC_R3_VN0_CREDITS_USED:NCB", "Number of times a VN0 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This counts the number of times a VN0 credit was used.  Note that a single VN0 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN0 will only count a single credit even though it may use multiple buffers.. VN0 Credit Used -- NCB Message Class."], ["UNC_R3_VN0_CREDITS_USED:NCS", "Number of times a VN0 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This counts the number of times a VN0 credit was used.  Note that a single VN0 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN0 will only count a single credit even though it may use multiple buffers.. VN0 Credit Used -- NCS Message Class."], ["UNC_R3_VN0_CREDITS_USED:NDR", "Number of times a VN0 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This counts the number of times a VN0 credit was used.  Note that a single VN0 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN0 will only count a single credit even though it may use multiple buffers.. VN0 Credit Used -- NDR Message Class."], ["UNC_R3_VN0_CREDITS_USED:SNP", "Number of times a VN0 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN0.  VNA is a shared pool used to achieve high performance.  The VN0 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN0 if they fail.  This counts the number of times a VN0 credit was used.  Note that a single VN0 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN0 will only count a single credit even though it may use multiple buffers.. VN0 Credit Used -- SNP Message Class."], ["UNC_R3_VN1_CREDITS_REJECT:DRS", "Number of times a request failed to acquire a VN1 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN1 credit and is delayed.  This should generally be a rare situation.. VN1 Credit Acquisition Failed on DRS -- DRS Message Class."], ["UNC_R3_VN1_CREDITS_REJECT:HOM", "Number of times a request failed to acquire a VN1 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN1 credit and is delayed.  This should generally be a rare situation.. VN1 Credit Acquisition Failed on DRS -- HOM Message Class."], ["UNC_R3_VN1_CREDITS_REJECT:NCB", "Number of times a request failed to acquire a VN1 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN1 credit and is delayed.  This should generally be a rare situation.. VN1 Credit Acquisition Failed on DRS -- NCB Message Class."], ["UNC_R3_VN1_CREDITS_REJECT:NCS", "Number of times a request failed to acquire a VN1 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN1 credit and is delayed.  This should generally be a rare situation.. VN1 Credit Acquisition Failed on DRS -- NCS Message Class."], ["UNC_R3_VN1_CREDITS_REJECT:NDR", "Number of times a request failed to acquire a VN1 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN1 credit and is delayed.  This should generally be a rare situation.. VN1 Credit Acquisition Failed on DRS -- NDR Message Class."], ["UNC_R3_VN1_CREDITS_REJECT:SNP", "Number of times a request failed to acquire a VN1 credit.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This therefore counts the number of times when a request failed to acquire either a VNA or VN1 credit and is delayed.  This should generally be a rare situation.. VN1 Credit Acquisition Failed on DRS -- SNP Message Class."], ["UNC_R3_VN1_CREDITS_USED:DRS", "Number of times a VN1 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This counts the number of times a VN1 credit was used.  Note that a single VN1 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN1 will only count a single credit even though it may use multiple buffers.. VN1 Credit Used -- DRS Message Class."], ["UNC_R3_VN1_CREDITS_USED:HOM", "Number of times a VN1 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This counts the number of times a VN1 credit was used.  Note that a single VN1 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN1 will only count a single credit even though it may use multiple buffers.. VN1 Credit Used -- HOM Message Class."], ["UNC_R3_VN1_CREDITS_USED:NCB", "Number of times a VN1 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This counts the number of times a VN1 credit was used.  Note that a single VN1 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN1 will only count a single credit even though it may use multiple buffers.. VN1 Credit Used -- NCB Message Class."], ["UNC_R3_VN1_CREDITS_USED:NCS", "Number of times a VN1 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This counts the number of times a VN1 credit was used.  Note that a single VN1 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN1 will only count a single credit even though it may use multiple buffers.. VN1 Credit Used -- NCS Message Class."], ["UNC_R3_VN1_CREDITS_USED:NDR", "Number of times a VN1 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This counts the number of times a VN1 credit was used.  Note that a single VN1 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN1 will only count a single credit even though it may use multiple buffers.. VN1 Credit Used -- NDR Message Class."], ["UNC_R3_VN1_CREDITS_USED:SNP", "Number of times a VN1 credit was used on the DRS message channel.  In order for a request to be transferred across QPI, it must be guaranteed to have a flit buffer on the remote socket to sink into.  There are two credit pools, VNA and VN1.  VNA is a shared pool used to achieve high performance.  The VN1 pool has reserved entries for each message class and is used to prevent deadlock.  Requests first attempt to acquire a VNA credit, and then fall back to VN1 if they fail.  This counts the number of times a VN1 credit was used.  Note that a single VN1 credit holds access to potentially multiple flit buffers.  For example, a transfer that uses VNA could use 9 flit buffers and in that case uses 9 credits.  A transfer on VN1 will only count a single credit even though it may use multiple buffers.. VN1 Credit Used -- SNP Message Class."], ["UNC_R3_VNA_CREDITS_ACQUIRED:AD", "Number of QPI VNA Credit acquisitions.  This event can be used in conjunction with the VNA In-Use Accumulator to calculate the average lifetime of a credit holder.  VNA credits are used by all message classes in order to communicate across QPI.  If a packet is unable to acquire credits, it will then attempt to use credts from the VN0 pool.  Note that a single packet may require multiple flit buffers (i.e. when data is being transferred).  Therefore, this event will increment by the number of credits acquired in each cycle.  Filtering based on message class is not provided.  One can count the number of packets transferred in a given message class using an qfclk event.. VNA credit Acquisitions -- HOM Message Class."], ["UNC_R3_VNA_CREDITS_ACQUIRED:BL", "Number of QPI VNA Credit acquisitions.  This event can be used in conjunction with the VNA In-Use Accumulator to calculate the average lifetime of a credit holder.  VNA credits are used by all message classes in order to communicate across QPI.  If a packet is unable to acquire credits, it will then attempt to use credts from the VN0 pool.  Note that a single packet may require multiple flit buffers (i.e. when data is being transferred).  Therefore, this event will increment by the number of credits acquired in each cycle.  Filtering based on message class is not provided.  One can count the number of packets transferred in a given message class using an qfclk event.. VNA credit Acquisitions -- HOM Message Class."], ["UNC_R3_VNA_CREDITS_REJECT:DRS", "Number of attempted VNA credit acquisitions that were rejected because the VNA credit pool was full (or almost full).  It is possible to filter this event by message class.  Some packets use more than one flit buffer, and therefore must acquire multiple credits.  Therefore, one could get a reject even if the VNA credits were not fully used up.  The VNA pool is generally used to provide the bulk of the QPI bandwidth (as opposed to the VN0 pool which is used to guarantee forward progress).  VNA credits can run out if the flit buffer on the receiving side starts to queue up substantially.  This can happen if the rest of the uncore is unable to drain the requests fast enough.. VNA Credit Reject -- DRS Message Class."], ["UNC_R3_VNA_CREDITS_REJECT:HOM", "Number of attempted VNA credit acquisitions that were rejected because the VNA credit pool was full (or almost full).  It is possible to filter this event by message class.  Some packets use more than one flit buffer, and therefore must acquire multiple credits.  Therefore, one could get a reject even if the VNA credits were not fully used up.  The VNA pool is generally used to provide the bulk of the QPI bandwidth (as opposed to the VN0 pool which is used to guarantee forward progress).  VNA credits can run out if the flit buffer on the receiving side starts to queue up substantially.  This can happen if the rest of the uncore is unable to drain the requests fast enough.. VNA Credit Reject -- HOM Message Class."], ["UNC_R3_VNA_CREDITS_REJECT:NCB", "Number of attempted VNA credit acquisitions that were rejected because the VNA credit pool was full (or almost full).  It is possible to filter this event by message class.  Some packets use more than one flit buffer, and therefore must acquire multiple credits.  Therefore, one could get a reject even if the VNA credits were not fully used up.  The VNA pool is generally used to provide the bulk of the QPI bandwidth (as opposed to the VN0 pool which is used to guarantee forward progress).  VNA credits can run out if the flit buffer on the receiving side starts to queue up substantially.  This can happen if the rest of the uncore is unable to drain the requests fast enough.. VNA Credit Reject -- NCB Message Class."], ["UNC_R3_VNA_CREDITS_REJECT:NCS", "Number of attempted VNA credit acquisitions that were rejected because the VNA credit pool was full (or almost full).  It is possible to filter this event by message class.  Some packets use more than one flit buffer, and therefore must acquire multiple credits.  Therefore, one could get a reject even if the VNA credits were not fully used up.  The VNA pool is generally used to provide the bulk of the QPI bandwidth (as opposed to the VN0 pool which is used to guarantee forward progress).  VNA credits can run out if the flit buffer on the receiving side starts to queue up substantially.  This can happen if the rest of the uncore is unable to drain the requests fast enough.. VNA Credit Reject -- NCS Message Class."], ["UNC_R3_VNA_CREDITS_REJECT:NDR", "Number of attempted VNA credit acquisitions that were rejected because the VNA credit pool was full (or almost full).  It is possible to filter this event by message class.  Some packets use more than one flit buffer, and therefore must acquire multiple credits.  Therefore, one could get a reject even if the VNA credits were not fully used up.  The VNA pool is generally used to provide the bulk of the QPI bandwidth (as opposed to the VN0 pool which is used to guarantee forward progress).  VNA credits can run out if the flit buffer on the receiving side starts to queue up substantially.  This can happen if the rest of the uncore is unable to drain the requests fast enough.. VNA Credit Reject -- NDR Message Class."], ["UNC_R3_VNA_CREDITS_REJECT:SNP", "Number of attempted VNA credit acquisitions that were rejected because the VNA credit pool was full (or almost full).  It is possible to filter this event by message class.  Some packets use more than one flit buffer, and therefore must acquire multiple credits.  Therefore, one could get a reject even if the VNA credits were not fully used up.  The VNA pool is generally used to provide the bulk of the QPI bandwidth (as opposed to the VN0 pool which is used to guarantee forward progress).  VNA credits can run out if the flit buffer on the receiving side starts to queue up substantially.  This can happen if the rest of the uncore is unable to drain the requests fast enough.. VNA Credit Reject -- SNP Message Class."]], "features": {"name": "Intel BroadwellX R3QPI1 uncore", "no_events": 28, "max_encoding": 1, "counters": 3, "type": "uncore PMU"}}}, "metrics_avail": ["jbd2.njournals", "jbd2.transaction.count", "jbd2.transaction.requested", "jbd2.transaction.max_blocks", "jbd2.transaction.total.blocks", "jbd2.transaction.total.blocks_logged", "jbd2.transaction.total.handles", "jbd2.transaction.total.time.waiting", "jbd2.transaction.total.time.request_delay", "jbd2.transaction.total.time.running", "jbd2.transaction.total.time.being_locked", "jbd2.transaction.total.time.flushing_ordered_mode_data", "jbd2.transaction.total.time.logging", "jbd2.transaction.average.blocks", "jbd2.transaction.average.blocks_logged", "jbd2.transaction.average.handles", "jbd2.transaction.average.time.waiting", "jbd2.transaction.average.time.request_delay", "jbd2.transaction.average.time.running", "jbd2.transaction.average.time.being_locked", "jbd2.transaction.average.time.flushing_ordered_mode_data", "jbd2.transaction.average.time.logging", "jbd2.transaction.average.time.committing", "hinv.physmem", "hinv.pagesize", "hinv.ncpu", "hinv.ndisk", "hinv.nfilesys", "hinv.ninterface", "hinv.nnode", "hinv.machine", "hinv.hugepagesize", "hinv.ntape", "hinv.map.scsi", "hinv.map.cpu_num", "hinv.map.cpu_node", "hinv.cpu.clock", "hinv.cpu.vendor", "hinv.cpu.model", "hinv.cpu.stepping", "hinv.cpu.cache", "hinv.cpu.bogomips", "hinv.cpu.model_name", "hinv.cpu.flags", "hinv.cpu.cache_alignment", "hinv.cpu.online", "hinv.node.online", "kernel.all.load", "kernel.all.intr", "kernel.all.pswitch", "kernel.all.sysfork", "kernel.all.running", "kernel.all.blocked", "kernel.all.hz", "kernel.all.uptime", "kernel.all.idletime", "kernel.all.nusers", "kernel.all.lastpid", "kernel.all.runnable", "kernel.all.nprocs", "kernel.all.pid_max", "kernel.all.cpu.user", "kernel.all.cpu.nice", "kernel.all.cpu.sys", "kernel.all.cpu.idle", "kernel.all.cpu.intr", "kernel.all.cpu.steal", "kernel.all.cpu.guest", "kernel.all.cpu.vuser", "kernel.all.cpu.guest_nice", "kernel.all.cpu.vnice", "kernel.all.cpu.wait.total", "kernel.all.cpu.irq.soft", "kernel.all.cpu.irq.hard", "kernel.all.interrupts.errors", "kernel.all.entropy.avail", "kernel.all.entropy.poolsize", "kernel.percpu.interrupts.PIW", "kernel.percpu.interrupts.NPI", "kernel.percpu.interrupts.PIN", "kernel.percpu.interrupts.MIS", "kernel.percpu.interrupts.ERR", "kernel.percpu.interrupts.MCP", "kernel.percpu.interrupts.MCE", "kernel.percpu.interrupts.DFR", "kernel.percpu.interrupts.THR", "kernel.percpu.interrupts.TRM", "kernel.percpu.interrupts.TLB", "kernel.percpu.interrupts.CAL", "kernel.percpu.interrupts.RES", "kernel.percpu.interrupts.RTR", "kernel.percpu.interrupts.IWI", "kernel.percpu.interrupts.PMI", "kernel.percpu.interrupts.SPU", "kernel.percpu.interrupts.LOC", "kernel.percpu.interrupts.NMI", "kernel.percpu.interrupts.line64", "kernel.percpu.interrupts.line63", "kernel.percpu.interrupts.line62", "kernel.percpu.interrupts.line61", "kernel.percpu.interrupts.line60", "kernel.percpu.interrupts.line59", "kernel.percpu.interrupts.line58", "kernel.percpu.interrupts.line57", "kernel.percpu.interrupts.line56", "kernel.percpu.interrupts.line55", "kernel.percpu.interrupts.line54", "kernel.percpu.interrupts.line53", "kernel.percpu.interrupts.line52", "kernel.percpu.interrupts.line51", "kernel.percpu.interrupts.line50", "kernel.percpu.interrupts.line49", "kernel.percpu.interrupts.line48", "kernel.percpu.interrupts.line47", "kernel.percpu.interrupts.line46", "kernel.percpu.interrupts.line45", "kernel.percpu.interrupts.line44", "kernel.percpu.interrupts.line43", "kernel.percpu.interrupts.line42", "kernel.percpu.interrupts.line41", "kernel.percpu.interrupts.line40", "kernel.percpu.interrupts.line39", "kernel.percpu.interrupts.line38", "kernel.percpu.interrupts.line37", "kernel.percpu.interrupts.line27", "kernel.percpu.interrupts.line26", "kernel.percpu.interrupts.line25", "kernel.percpu.interrupts.line24", "kernel.percpu.interrupts.line18", "kernel.percpu.interrupts.line17", "kernel.percpu.interrupts.line12", "kernel.percpu.interrupts.line9", "kernel.percpu.interrupts.line8", "kernel.percpu.interrupts.line1", "kernel.percpu.interrupts.line0", "kernel.percpu.softirqs.RCU", "kernel.percpu.softirqs.HRTIMER", "kernel.percpu.softirqs.SCHED", "kernel.percpu.softirqs.TASKLET", "kernel.percpu.softirqs.IRQ_POLL", "kernel.percpu.softirqs.BLOCK", "kernel.percpu.softirqs.NET_RX", "kernel.percpu.softirqs.NET_TX", "kernel.percpu.softirqs.TIMER", "kernel.percpu.softirqs.HI", "kernel.percpu.intr", "kernel.percpu.cpu.user", "kernel.percpu.cpu.nice", "kernel.percpu.cpu.sys", "kernel.percpu.cpu.idle", "kernel.percpu.cpu.intr", "kernel.percpu.cpu.steal", "kernel.percpu.cpu.guest", "kernel.percpu.cpu.vuser", "kernel.percpu.cpu.guest_nice", "kernel.percpu.cpu.vnice", "kernel.percpu.cpu.wait.total", "kernel.percpu.cpu.irq.soft", "kernel.percpu.cpu.irq.hard", "kernel.pernode.cpu.user", "kernel.pernode.cpu.nice", "kernel.pernode.cpu.sys", "kernel.pernode.cpu.idle", "kernel.pernode.cpu.intr", "kernel.pernode.cpu.steal", "kernel.pernode.cpu.guest", "kernel.pernode.cpu.vuser", "kernel.pernode.cpu.guest_nice", "kernel.pernode.cpu.vnice", "kernel.pernode.cpu.wait.total", "kernel.pernode.cpu.irq.soft", "kernel.pernode.cpu.irq.hard", "kernel.uname.release", "kernel.uname.version", "kernel.uname.sysname", "kernel.uname.machine", "kernel.uname.nodename", "kernel.uname.distro", "mem.physmem", "mem.freemem", "mem.util.used", "mem.util.free", "mem.util.bufmem", "mem.util.cached", "mem.util.other", "mem.util.swapCached", "mem.util.active", "mem.util.inactive", "mem.util.swapTotal", "mem.util.swapFree", "mem.util.dirty", "mem.util.writeback", "mem.util.mapped", "mem.util.slab", "mem.util.committed_AS", "mem.util.pageTables", "mem.util.cache_clean", "mem.util.anonpages", "mem.util.commitLimit", "mem.util.bounce", "mem.util.NFS_Unstable", "mem.util.slabReclaimable", "mem.util.slabUnreclaimable", "mem.util.active_anon", "mem.util.inactive_anon", "mem.util.active_file", "mem.util.inactive_file", "mem.util.unevictable", "mem.util.mlocked", "mem.util.shmem", "mem.util.kernelStack", "mem.util.hugepagesTotal", "mem.util.hugepagesFree", "mem.util.hugepagesRsvd", "mem.util.hugepagesSurp", "mem.util.directMap4k", "mem.util.directMap2M", "mem.util.vmallocTotal", "mem.util.vmallocUsed", "mem.util.vmallocChunk", "mem.util.corrupthardware", "mem.util.anonhugepages", "mem.util.directMap1G", "mem.util.available", "mem.util.hugepagesTotalBytes", "mem.util.hugepagesFreeBytes", "mem.util.hugepagesRsvdBytes", "mem.util.hugepagesSurpBytes", "mem.numa.util.total", "mem.numa.util.free", "mem.numa.util.used", "mem.numa.util.active", "mem.numa.util.inactive", "mem.numa.util.active_anon", "mem.numa.util.inactive_anon", "mem.numa.util.active_file", "mem.numa.util.inactive_file", "mem.numa.util.unevictable", "mem.numa.util.mlocked", "mem.numa.util.dirty", "mem.numa.util.writeback", "mem.numa.util.filePages", "mem.numa.util.mapped", "mem.numa.util.anonpages", "mem.numa.util.shmem", "mem.numa.util.kernelStack", "mem.numa.util.pageTables", "mem.numa.util.NFS_Unstable", "mem.numa.util.bounce", "mem.numa.util.writebackTmp", "mem.numa.util.slab", "mem.numa.util.slabReclaimable", "mem.numa.util.slabUnreclaimable", "mem.numa.util.hugepagesTotal", "mem.numa.util.hugepagesFree", "mem.numa.util.hugepagesSurp", "mem.numa.util.hugepagesTotalBytes", "mem.numa.util.hugepagesFreeBytes", "mem.numa.util.hugepagesSurpBytes", "mem.numa.alloc.hit", "mem.numa.alloc.miss", "mem.numa.alloc.foreign", "mem.numa.alloc.interleave_hit", "mem.numa.alloc.local_node", "mem.numa.alloc.other_node", "mem.vmstat.balloon_deflate", "mem.vmstat.balloon_inflate", "mem.vmstat.balloon_migrate", "mem.vmstat.compact_daemon_wake", "mem.vmstat.compact_fail", "mem.vmstat.compact_free_scanned", "mem.vmstat.compact_migrate_scanned", "mem.vmstat.compact_stall", "mem.vmstat.compact_success", "mem.vmstat.drop_pagecache", "mem.vmstat.drop_slab", "mem.vmstat.htlb_buddy_alloc_fail", "mem.vmstat.htlb_buddy_alloc_success", "mem.vmstat.kswapd_inodesteal", "mem.vmstat.kswapd_low_wmark_hit_quickly", "mem.vmstat.kswapd_high_wmark_hit_quickly", "mem.vmstat.nr_active_anon", "mem.vmstat.nr_active_file", "mem.vmstat.nr_anon_pages", "mem.vmstat.nr_anon_transparent_hugepages", "mem.vmstat.nr_bounce", "mem.vmstat.nr_dirtied", "mem.vmstat.nr_dirty", "mem.vmstat.nr_dirty_background_threshold", "mem.vmstat.nr_dirty_threshold", "mem.vmstat.nr_free_cma", "mem.vmstat.nr_free_pages", "mem.vmstat.nr_inactive_anon", "mem.vmstat.nr_inactive_file", "mem.vmstat.nr_isolated_anon", "mem.vmstat.nr_isolated_file", "mem.vmstat.nr_kernel_stack", "mem.vmstat.nr_mapped", "mem.vmstat.nr_mlock", "mem.vmstat.nr_page_table_pages", "mem.vmstat.nr_shmem", "mem.vmstat.nr_slab", "mem.vmstat.nr_slab_reclaimable", "mem.vmstat.nr_slab_unreclaimable", "mem.vmstat.nr_unevictable", "mem.vmstat.nr_unstable", "mem.vmstat.nr_vmscan_immediate_reclaim", "mem.vmstat.nr_vmscan_write", "mem.vmstat.nr_writeback", "mem.vmstat.nr_writeback_temp", "mem.vmstat.nr_written", "mem.vmstat.numa_foreign", "mem.vmstat.numa_hint_faults", "mem.vmstat.numa_hint_faults_local", "mem.vmstat.numa_hit", "mem.vmstat.numa_huge_pte_updates", "mem.vmstat.numa_interleave", "mem.vmstat.numa_local", "mem.vmstat.numa_miss", "mem.vmstat.numa_other", "mem.vmstat.numa_pages_migrated", "mem.vmstat.numa_pte_updates", "mem.vmstat.pageoutrun", "mem.vmstat.pgactivate", "mem.vmstat.pgalloc_dma", "mem.vmstat.pgalloc_dma32", "mem.vmstat.pgalloc_movable", "mem.vmstat.pgalloc_normal", "mem.vmstat.pgdeactivate", "mem.vmstat.pgfault", "mem.vmstat.pgfree", "mem.vmstat.pginodesteal", "mem.vmstat.pglazyfreed", "mem.vmstat.pgmajfault", "mem.vmstat.pgmigrate_fail", "mem.vmstat.pgmigrate_success", "mem.vmstat.pgpgin", "mem.vmstat.pgpgout", "mem.vmstat.pgrotated", "mem.vmstat.pgscan_direct", "mem.vmstat.pgscan_direct_throttle", "mem.vmstat.pgscan_kswapd", "mem.vmstat.pgsteal_kswapd", "mem.vmstat.pgsteal_direct", "mem.vmstat.pswpin", "mem.vmstat.pswpout", "mem.vmstat.slabs_scanned", "mem.vmstat.thp_collapse_alloc", "mem.vmstat.thp_collapse_alloc_failed", "mem.vmstat.thp_deferred_split_page", "mem.vmstat.thp_fault_alloc", "mem.vmstat.thp_fault_fallback", "mem.vmstat.thp_split", "mem.vmstat.thp_split_page", "mem.vmstat.thp_split_page_failed", "mem.vmstat.thp_split_pmd", "mem.vmstat.thp_zero_page_alloc", "mem.vmstat.thp_zero_page_alloc_failed", "mem.vmstat.unevictable_pgs_cleared", "mem.vmstat.unevictable_pgs_culled", "mem.vmstat.unevictable_pgs_mlocked", "mem.vmstat.unevictable_pgs_munlocked", "mem.vmstat.unevictable_pgs_rescued", "mem.vmstat.unevictable_pgs_scanned", "mem.vmstat.unevictable_pgs_stranded", "mem.vmstat.workingset_activate", "mem.vmstat.workingset_nodereclaim", "mem.vmstat.workingset_refault", "mem.vmstat.zone_reclaim_failed", "mem.vmstat.compact_isolated", "mem.vmstat.nr_shmem_hugepages", "mem.vmstat.nr_shmem_pmdmapped", "mem.vmstat.nr_zone_inactive_anon", "mem.vmstat.nr_zone_active_anon", "mem.vmstat.nr_zone_inactive_file", "mem.vmstat.nr_zone_active_file", "mem.vmstat.nr_zone_unevictable", "mem.vmstat.nr_zone_write_pending", "mem.vmstat.nr_zspages", "mem.vmstat.thp_file_alloc", "mem.vmstat.thp_file_mapped", "mem.buddyinfo.pages", "mem.buddyinfo.total", "mem.slabinfo.objects.active", "mem.slabinfo.objects.total", "mem.slabinfo.objects.size", "mem.slabinfo.slabs.active", "mem.slabinfo.slabs.total", "mem.slabinfo.slabs.pages_per_slab", "mem.slabinfo.slabs.total_size", "mem.zoneinfo.free", "mem.zoneinfo.min", "mem.zoneinfo.low", "mem.zoneinfo.high", "mem.zoneinfo.scanned", "mem.zoneinfo.spanned", "mem.zoneinfo.present", "mem.zoneinfo.managed", "mem.zoneinfo.nr_free_pages", "mem.zoneinfo.nr_alloc_batch", "mem.zoneinfo.nr_inactive_anon", "mem.zoneinfo.nr_active_anon", "mem.zoneinfo.nr_inactive_file", "mem.zoneinfo.nr_active_file", "mem.zoneinfo.nr_unevictable", "mem.zoneinfo.nr_mlock", "mem.zoneinfo.nr_anon_pages", "mem.zoneinfo.nr_mapped", "mem.zoneinfo.nr_file_pages", "mem.zoneinfo.nr_dirty", "mem.zoneinfo.nr_writeback", "mem.zoneinfo.nr_slab_reclaimable", "mem.zoneinfo.nr_slab_unreclaimable", "mem.zoneinfo.nr_page_table_pages", "mem.zoneinfo.nr_kernel_stack", "mem.zoneinfo.nr_unstable", "mem.zoneinfo.nr_bounce", "mem.zoneinfo.nr_vmscan_write", "mem.zoneinfo.nr_vmscan_immediate_reclaim", "mem.zoneinfo.nr_writeback_temp", "mem.zoneinfo.nr_isolated_anon", "mem.zoneinfo.nr_isolated_file", "mem.zoneinfo.nr_shmem", "mem.zoneinfo.nr_dirtied", "mem.zoneinfo.nr_written", "mem.zoneinfo.numa_hit", "mem.zoneinfo.numa_miss", "mem.zoneinfo.numa_foreign", "mem.zoneinfo.numa_interleave", "mem.zoneinfo.numa_local", "mem.zoneinfo.numa_other", "mem.zoneinfo.workingset_refault", "mem.zoneinfo.workingset_activate", "mem.zoneinfo.workingset_nodereclaim", "mem.zoneinfo.nr_anon_transparent_hugepages", "mem.zoneinfo.nr_free_cma", "mem.zoneinfo.protection", "mem.ksm.full_scans", "mem.ksm.merge_across_nodes", "mem.ksm.pages_shared", "mem.ksm.pages_sharing", "mem.ksm.pages_to_scan", "mem.ksm.pages_unshared", "mem.ksm.pages_volatile", "mem.ksm.run_state", "mem.ksm.sleep_time", "swap.pagesin", "swap.pagesout", "swap.free", "swap.length", "swap.used", "network.interface.collisions", "network.interface.mtu", "network.interface.speed", "network.interface.baudrate", "network.interface.duplex", "network.interface.up", "network.interface.running", "network.interface.wireless", "network.interface.type", "network.interface.inet_addr", "network.interface.ipv6_addr", "network.interface.ipv6_scope", "network.interface.hw_addr", "network.interface.in.bytes", "network.interface.in.packets", "network.interface.in.errors", "network.interface.in.drops", "network.interface.in.fifo", "network.interface.in.frame", "network.interface.in.compressed", "network.interface.in.mcasts", "network.interface.out.bytes", "network.interface.out.packets", "network.interface.out.errors", "network.interface.out.drops", "network.interface.out.fifo", "network.interface.out.carrier", "network.interface.out.compressed", "network.interface.total.bytes", "network.interface.total.packets", "network.interface.total.errors", "network.interface.total.drops", "network.interface.total.mcasts", "network.sockstat.total", "network.sockstat.tcp.inuse", "network.sockstat.tcp.orphan", "network.sockstat.tcp.tw", "network.sockstat.tcp.alloc", "network.sockstat.tcp.mem", "network.sockstat.udp.inuse", "network.sockstat.udp.mem", "network.sockstat.udplite.inuse", "network.sockstat.raw.inuse", "network.sockstat.frag.inuse", "network.sockstat.frag.memory", "network.sockstat.tcp6.inuse", "network.sockstat.udp6.inuse", "network.sockstat.udplite6.inuse", "network.sockstat.raw6.inuse", "network.sockstat.frag6.inuse", "network.sockstat.frag6.memory", "network.ip.forwarding", "network.ip.defaultttl", "network.ip.inreceives", "network.ip.inhdrerrors", "network.ip.inaddrerrors", "network.ip.forwdatagrams", "network.ip.inunknownprotos", "network.ip.indiscards", "network.ip.indelivers", "network.ip.outrequests", "network.ip.outdiscards", "network.ip.outnoroutes", "network.ip.reasmtimeout", "network.ip.reasmreqds", "network.ip.reasmoks", "network.ip.reasmfails", "network.ip.fragoks", "network.ip.fragfails", "network.ip.fragcreates", "network.ip.innoroutes", "network.ip.intruncatedpkts", "network.ip.inmcastpkts", "network.ip.inbcastpkts", "network.ip.outbcastpkts", "network.ip.inoctets", "network.ip.outoctets", "network.ip.inmcastoctets", "network.ip.outmcastoctets", "network.ip.inbcastoctets", "network.ip.outbcastoctets", "network.ip.csumerrors", "network.ip.noectpkts", "network.ip.ect1pkts", "network.ip.ect0pkts", "network.ip.cepkts", "network.icmp.inmsgs", "network.icmp.inerrors", "network.icmp.indestunreachs", "network.icmp.intimeexcds", "network.icmp.inparmprobs", "network.icmp.insrcquenchs", "network.icmp.inredirects", "network.icmp.inechos", "network.icmp.inechoreps", "network.icmp.intimestamps", "network.icmp.intimestampreps", "network.icmp.inaddrmasks", "network.icmp.inaddrmaskreps", "network.icmp.outmsgs", "network.icmp.outerrors", "network.icmp.outdestunreachs", "network.icmp.outtimeexcds", "network.icmp.outparmprobs", "network.icmp.outsrcquenchs", "network.icmp.outredirects", "network.icmp.outechos", "network.icmp.outechoreps", "network.icmp.outtimestamps", "network.icmp.outtimestampreps", "network.icmp.outaddrmasks", "network.icmp.outaddrmaskreps", "network.icmp.incsumerrors", "network.icmpmsg.intype", "network.icmpmsg.outtype", "network.tcp.rtoalgorithm", "network.tcp.rtomin", "network.tcp.rtomax", "network.tcp.maxconn", "network.tcp.activeopens", "network.tcp.passiveopens", "network.tcp.attemptfails", "network.tcp.estabresets", "network.tcp.currestab", "network.tcp.insegs", "network.tcp.outsegs", "network.tcp.retranssegs", "network.tcp.inerrs", "network.tcp.outrsts", "network.tcp.incsumerrors", "network.tcp.syncookiessent", "network.tcp.syncookiesrecv", "network.tcp.syncookiesfailed", "network.tcp.embryonicrsts", "network.tcp.prunecalled", "network.tcp.rcvpruned", "network.tcp.ofopruned", "network.tcp.outofwindowicmps", "network.tcp.lockdroppedicmps", "network.tcp.arpfilter", "network.tcp.timewaited", "network.tcp.timewaitrecycled", "network.tcp.timewaitkilled", "network.tcp.pawsactiverejected", "network.tcp.pawsestabrejected", "network.tcp.delayedacks", "network.tcp.delayedacklocked", "network.tcp.delayedacklost", "network.tcp.listenoverflows", "network.tcp.listendrops", "network.tcp.hphits", "network.tcp.pureacks", "network.tcp.hpacks", "network.tcp.renorecovery", "network.tcp.sackrecovery", "network.tcp.sackreneging", "network.tcp.sackreorder", "network.tcp.renoreorder", "network.tcp.tsreorder", "network.tcp.fullundo", "network.tcp.partialundo", "network.tcp.dsackundo", "network.tcp.lossundo", "network.tcp.lostretransmit", "network.tcp.renofailures", "network.tcp.sackfailures", "network.tcp.lossfailures", "network.tcp.fastretrans", "network.tcp.slowstartretrans", "network.tcp.timeouts", "network.tcp.lossprobes", "network.tcp.lossproberecovery", "network.tcp.renorecoveryfail", "network.tcp.sackrecoveryfail", "network.tcp.rcvcollapsed", "network.tcp.dsackoldsent", "network.tcp.dsackofosent", "network.tcp.dsackrecv", "network.tcp.dsackoforecv", "network.tcp.abortondata", "network.tcp.abortonclose", "network.tcp.abortonmemory", "network.tcp.abortontimeout", "network.tcp.abortonlinger", "network.tcp.abortfailed", "network.tcp.memorypressures", "network.tcp.sackdiscard", "network.tcp.dsackignoredold", "network.tcp.dsackignorednoundo", "network.tcp.spuriousrtos", "network.tcp.md5notfound", "network.tcp.md5unexpected", "network.tcp.sackshifted", "network.tcp.sackmerged", "network.tcp.sackshiftfallback", "network.tcp.backlogdrop", "network.tcp.minttldrop", "network.tcp.deferacceptdrop", "network.tcp.iprpfilter", "network.tcp.timewaitoverflow", "network.tcp.reqqfulldocookies", "network.tcp.reqqfulldrop", "network.tcp.retransfail", "network.tcp.rcvcoalesce", "network.tcp.ofoqueue", "network.tcp.ofodrop", "network.tcp.ofomerge", "network.tcp.challengeack", "network.tcp.synchallenge", "network.tcp.fastopenactive", "network.tcp.fastopenactivefail", "network.tcp.fastopenpassive", "network.tcp.fastopenpassivefail", "network.tcp.fastopenlistenoverflow", "network.tcp.fastopencookiereqd", "network.tcp.spuriousrtxhostqueues", "network.tcp.busypollrxpackets", "network.tcp.autocorking", "network.tcp.fromzerowindowadv", "network.tcp.tozerowindowadv", "network.tcp.wantzerowindowadv", "network.tcp.synretrans", "network.tcp.origdatasent", "network.udp.indatagrams", "network.udp.noports", "network.udp.inerrors", "network.udp.outdatagrams", "network.udp.recvbuferrors", "network.udp.sndbuferrors", "network.udp.incsumerrors", "network.udplite.indatagrams", "network.udplite.noports", "network.udplite.inerrors", "network.udplite.outdatagrams", "network.udplite.recvbuferrors", "network.udplite.sndbuferrors", "network.udplite.incsumerrors", "network.tcpconn.established", "network.tcpconn.syn_sent", "network.tcpconn.syn_recv", "network.tcpconn.fin_wait1", "network.tcpconn.fin_wait2", "network.tcpconn.time_wait", "network.tcpconn.close", "network.tcpconn.close_wait", "network.tcpconn.last_ack", "network.tcpconn.listen", "network.tcpconn.closing", "network.softnet.processed", "network.softnet.dropped", "network.softnet.time_squeeze", "network.softnet.cpu_collision", "network.softnet.received_rps", "network.softnet.flow_limit_count", "network.softnet.percpu.processed", "network.softnet.percpu.dropped", "network.softnet.percpu.time_squeeze", "network.softnet.percpu.cpu_collision", "network.softnet.percpu.received_rps", "network.softnet.percpu.flow_limit_count", "network.ip6.inreceives", "network.ip6.inhdrerrors", "network.ip6.intoobigerrors", "network.ip6.innoroutes", "network.ip6.inaddrerrors", "network.ip6.inunknownprotos", "network.ip6.intruncatedpkts", "network.ip6.indiscards", "network.ip6.indelivers", "network.ip6.outforwdatagrams", "network.ip6.outrequests", "network.ip6.outdiscards", "network.ip6.outnoroutes", "network.ip6.reasmtimeout", "network.ip6.reasmreqds", "network.ip6.reasmoks", "network.ip6.reasmfails", "network.ip6.fragoks", "network.ip6.fragfails", "network.ip6.fragcreates", "network.ip6.inmcastpkts", "network.ip6.outmcastpkts", "network.ip6.inoctets", "network.ip6.outoctets", "network.ip6.inmcastoctets", "network.ip6.outmcastoctets", "network.ip6.inbcastoctets", "network.ip6.outbcastoctets", "network.ip6.innoectpkts", "network.ip6.inect1pkts", "network.ip6.inect0pkts", "network.ip6.incepkts", "network.icmp6.inmsgs", "network.icmp6.inerrors", "network.icmp6.outmsgs", "network.icmp6.outerrors", "network.icmp6.incsumerrors", "network.icmp6.indestunreachs", "network.icmp6.inpkttoobigs", "network.icmp6.intimeexcds", "network.icmp6.inparmproblems", "network.icmp6.inechos", "network.icmp6.inechoreplies", "network.icmp6.ingroupmembqueries", "network.icmp6.ingroupmembresponses", "network.icmp6.ingroupmembreductions", "network.icmp6.inroutersolicits", "network.icmp6.inrouteradvertisements", "network.icmp6.inneighborsolicits", "network.icmp6.inneighboradvertisements", "network.icmp6.inredirects", "network.icmp6.inmldv2reports", "network.icmp6.outdestunreachs", "network.icmp6.outpkttoobigs", "network.icmp6.outtimeexcds", "network.icmp6.outparmproblems", "network.icmp6.outechos", "network.icmp6.outechoreplies", "network.icmp6.outgroupmembqueries", "network.icmp6.outgroupmembresponses", "network.icmp6.outgroupmembreductions", "network.icmp6.outroutersolicits", "network.icmp6.outrouteradvertisements", "network.icmp6.outneighborsolicits", "network.icmp6.outneighboradvertisements", "network.icmp6.outredirects", "network.icmp6.outmldv2reports", "network.udp6.indatagrams", "network.udp6.noports", "network.udp6.inerrors", "network.udp6.outdatagrams", "network.udp6.rcvbuferrors", "network.udp6.sndbuferrors", "network.udp6.incsumerrors", "network.udp6.ignoredmulti", "network.udplite6.indatagrams", "network.udplite6.noports", "network.udplite6.inerrors", "network.udplite6.outdatagrams", "network.udplite6.rcvbuferrors", "network.udplite6.sndbuferrors", "network.udplite6.incsumerrors", "disk.dev.read", "disk.dev.write", "disk.dev.total", "disk.dev.blkread", "disk.dev.blkwrite", "disk.dev.blktotal", "disk.dev.read_bytes", "disk.dev.write_bytes", "disk.dev.total_bytes", "disk.dev.read_merge", "disk.dev.write_merge", "disk.dev.avactive", "disk.dev.read_rawactive", "disk.dev.write_rawactive", "disk.dev.total_rawactive", "disk.dev.aveq", "disk.dev.scheduler", "disk.dev.capacity", "disk.all.read", "disk.all.write", "disk.all.total", "disk.all.blkread", "disk.all.blkwrite", "disk.all.blktotal", "disk.all.read_bytes", "disk.all.write_bytes", "disk.all.total_bytes", "disk.all.read_merge", "disk.all.write_merge", "disk.all.avactive", "disk.all.read_rawactive", "disk.all.write_rawactive", "disk.all.total_rawactive", "disk.all.aveq", "disk.partitions.read", "disk.partitions.write", "disk.partitions.total", "disk.partitions.blkread", "disk.partitions.blkwrite", "disk.partitions.blktotal", "disk.partitions.read_bytes", "disk.partitions.write_bytes", "disk.partitions.total_bytes", "disk.partitions.read_merge", "disk.partitions.write_merge", "disk.partitions.avactive", "disk.partitions.aveq", "disk.partitions.read_rawactive", "disk.partitions.write_rawactive", "disk.partitions.total_rawactive", "disk.partitions.capacity", "filesys.capacity", "filesys.used", "filesys.free", "filesys.maxfiles", "filesys.usedfiles", "filesys.freefiles", "filesys.mountdir", "filesys.full", "filesys.blocksize", "filesys.avail", "filesys.readonly", "swapdev.free", "swapdev.length", "swapdev.maxswap", "swapdev.vlength", "swapdev.priority", "rpc.server.ra_size", "rpc.server.ra_hits", "rpc.server.ra_misses", "pmda.uname", "pmda.version", "ipc.sem.max_semmap", "ipc.sem.max_semid", "ipc.sem.max_sem", "ipc.sem.num_undo", "ipc.sem.max_perid", "ipc.sem.max_ops", "ipc.sem.max_undoent", "ipc.sem.sz_semundo", "ipc.sem.max_semval", "ipc.sem.max_exit", "ipc.sem.used_sem", "ipc.sem.tot_sem", "ipc.msg.sz_pool", "ipc.msg.mapent", "ipc.msg.max_msgsz", "ipc.msg.max_defmsgq", "ipc.msg.max_msgqid", "ipc.msg.max_msgseg", "ipc.msg.num_smsghdr", "ipc.msg.max_seg", "ipc.msg.used_queues", "ipc.msg.tot_msg", "ipc.msg.tot_bytes", "ipc.shm.max_segsz", "ipc.shm.min_segsz", "ipc.shm.max_seg", "ipc.shm.max_segproc", "ipc.shm.max_shmsys", "ipc.shm.tot", "ipc.shm.rss", "ipc.shm.swp", "ipc.shm.used_ids", "ipc.shm.swap_attempts", "ipc.shm.swap_successes", "vfs.files.count", "vfs.files.free", "vfs.files.max", "vfs.inodes.count", "vfs.inodes.free", "vfs.dentry.count", "vfs.dentry.free", "tmpfs.capacity", "tmpfs.used", "tmpfs.free", "tmpfs.maxfiles", "tmpfs.usedfiles", "tmpfs.freefiles", "tmpfs.full", "sysfs.kernel.uevent_seqnum", "tty.serial.tx", "tty.serial.rx", "tty.serial.frame", "tty.serial.parity", "tty.serial.brk", "tty.serial.overrun", "tty.serial.irq", "mmv.control.files", "mmv.control.debug", "mmv.control.reload", "pmcd.datasize", "pmcd.numagents", "pmcd.numclients", "pmcd.timezone", "pmcd.simabi", "pmcd.version", "pmcd.services", "pmcd.openfds", "pmcd.build", "pmcd.hostname", "pmcd.sighups", "pmcd.pid", "pmcd.seqnum", "pmcd.labels", "pmcd.control.debug", "pmcd.control.timeout", "pmcd.control.register", "pmcd.control.traceconn", "pmcd.control.tracepdu", "pmcd.control.tracenobuf", "pmcd.control.tracebufs", "pmcd.control.dumptrace", "pmcd.control.dumpconn", "pmcd.control.sighup", "pmcd.pdu_in.error", "pmcd.pdu_in.result", "pmcd.pdu_in.profile", "pmcd.pdu_in.fetch", "pmcd.pdu_in.desc_req", "pmcd.pdu_in.desc", "pmcd.pdu_in.instance_req", "pmcd.pdu_in.instance", "pmcd.pdu_in.text_req", "pmcd.pdu_in.text", "pmcd.pdu_in.control_req", "pmcd.pdu_in.creds", "pmcd.pdu_in.pmns_ids", "pmcd.pdu_in.pmns_names", "pmcd.pdu_in.pmns_child", "pmcd.pdu_in.total", "pmcd.pdu_in.pmns_traverse", "pmcd.pdu_in.auth", "pmcd.pdu_in.label_req", "pmcd.pdu_in.label", "pmcd.pdu_out.error", "pmcd.pdu_out.result", "pmcd.pdu_out.profile", "pmcd.pdu_out.fetch", "pmcd.pdu_out.desc_req", "pmcd.pdu_out.desc", "pmcd.pdu_out.instance_req", "pmcd.pdu_out.instance", "pmcd.pdu_out.text_req", "pmcd.pdu_out.text", "pmcd.pdu_out.control_req", "pmcd.pdu_out.creds", "pmcd.pdu_out.pmns_ids", "pmcd.pdu_out.pmns_names", "pmcd.pdu_out.pmns_child", "pmcd.pdu_out.total", "pmcd.pdu_out.pmns_traverse", "pmcd.pdu_out.auth", "pmcd.pdu_out.label_req", "pmcd.pdu_out.label", "pmcd.agent.type", "pmcd.agent.status", "pmcd.pmlogger.host", "pmcd.pmlogger.port", "pmcd.pmlogger.archive", "pmcd.pmlogger.pmcd_host", "pmcd.pmie.configfile", "pmcd.pmie.logfile", "pmcd.pmie.pmcd_host", "pmcd.pmie.numrules", "pmcd.pmie.actions", "pmcd.pmie.eval.true", "pmcd.pmie.eval.false", "pmcd.pmie.eval.unknown", "pmcd.pmie.eval.expected", "pmcd.pmie.eval.actual", "pmcd.buf.alloc", "pmcd.buf.free", "pmcd.client.whoami", "pmcd.client.start_date", "pmcd.client.container", "pmcd.cputime.total", "pmcd.cputime.per_pdu_in", "pmcd.feature.secure", "pmcd.feature.compress", "pmcd.feature.ipv6", "pmcd.feature.authentication", "pmcd.feature.creds_required", "pmcd.feature.unix_domain_sockets", "pmcd.feature.service_discovery", "pmcd.feature.containers", "pmcd.feature.local", "pmcd.feature.client_cert_required", "cgroup.subsys.hierarchy", "cgroup.subsys.count", "cgroup.subsys.num_cgroups", "cgroup.subsys.enabled", "cgroup.mounts.subsys", "cgroup.mounts.count", "cgroup.cpuset.cpus", "cgroup.cpuset.mems", "cgroup.cpuset.id.container", "cgroup.cpuacct.usage", "cgroup.cpuacct.usage_percpu", "cgroup.cpuacct.stat.user", "cgroup.cpuacct.stat.system", "cgroup.cpuacct.id.container", "cgroup.cpusched.shares", "cgroup.cpusched.periods", "cgroup.cpusched.throttled", "cgroup.cpusched.throttled_time", "cgroup.cpusched.cfs_period", "cgroup.cpusched.cfs_quota", "cgroup.cpusched.id.container", "cgroup.memory.usage", "cgroup.memory.limit", "cgroup.memory.failcnt", "cgroup.memory.stat.cache", "cgroup.memory.stat.rss", "cgroup.memory.stat.rss_huge", "cgroup.memory.stat.mapped_file", "cgroup.memory.stat.writeback", "cgroup.memory.stat.swap", "cgroup.memory.stat.pgpgin", "cgroup.memory.stat.pgpgout", "cgroup.memory.stat.pgfault", "cgroup.memory.stat.pgmajfault", "cgroup.memory.stat.inactive_anon", "cgroup.memory.stat.active_anon", "cgroup.memory.stat.inactive_file", "cgroup.memory.stat.active_file", "cgroup.memory.stat.unevictable", "cgroup.memory.stat.total.cache", "cgroup.memory.stat.total.rss", "cgroup.memory.stat.total.rss_huge", "cgroup.memory.stat.total.mapped_file", "cgroup.memory.stat.total.writeback", "cgroup.memory.stat.total.swap", "cgroup.memory.stat.total.pgpgin", "cgroup.memory.stat.total.pgpgout", "cgroup.memory.stat.total.pgfault", "cgroup.memory.stat.total.pgmajfault", "cgroup.memory.stat.total.inactive_anon", "cgroup.memory.stat.total.active_anon", "cgroup.memory.stat.total.inactive_file", "cgroup.memory.stat.total.active_file", "cgroup.memory.stat.total.unevictable", "cgroup.memory.stat.recent.rotated_anon", "cgroup.memory.stat.recent.rotated_file", "cgroup.memory.stat.recent.scanned_anon", "cgroup.memory.stat.recent.scanned_file", "cgroup.memory.id.container", "cgroup.blkio.dev.sectors", "cgroup.blkio.dev.time", "cgroup.blkio.dev.io_merged.read", "cgroup.blkio.dev.io_merged.write", "cgroup.blkio.dev.io_merged.sync", "cgroup.blkio.dev.io_merged.async", "cgroup.blkio.dev.io_merged.total", "cgroup.blkio.dev.io_queued.read", "cgroup.blkio.dev.io_queued.write", "cgroup.blkio.dev.io_queued.sync", "cgroup.blkio.dev.io_queued.async", "cgroup.blkio.dev.io_queued.total", "cgroup.blkio.dev.io_service_bytes.read", "cgroup.blkio.dev.io_service_bytes.write", "cgroup.blkio.dev.io_service_bytes.sync", "cgroup.blkio.dev.io_service_bytes.async", "cgroup.blkio.dev.io_service_bytes.total", "cgroup.blkio.dev.io_serviced.read", "cgroup.blkio.dev.io_serviced.write", "cgroup.blkio.dev.io_serviced.sync", "cgroup.blkio.dev.io_serviced.async", "cgroup.blkio.dev.io_serviced.total", "cgroup.blkio.dev.io_service_time.read", "cgroup.blkio.dev.io_service_time.write", "cgroup.blkio.dev.io_service_time.sync", "cgroup.blkio.dev.io_service_time.async", "cgroup.blkio.dev.io_service_time.total", "cgroup.blkio.dev.io_wait_time.read", "cgroup.blkio.dev.io_wait_time.write", "cgroup.blkio.dev.io_wait_time.sync", "cgroup.blkio.dev.io_wait_time.async", "cgroup.blkio.dev.io_wait_time.total", "cgroup.blkio.dev.throttle.io_service_bytes.read", "cgroup.blkio.dev.throttle.io_service_bytes.write", "cgroup.blkio.dev.throttle.io_service_bytes.sync", "cgroup.blkio.dev.throttle.io_service_bytes.async", "cgroup.blkio.dev.throttle.io_service_bytes.total", "cgroup.blkio.dev.throttle.io_serviced.read", "cgroup.blkio.dev.throttle.io_serviced.write", "cgroup.blkio.dev.throttle.io_serviced.sync", "cgroup.blkio.dev.throttle.io_serviced.async", "cgroup.blkio.dev.throttle.io_serviced.total", "cgroup.blkio.all.sectors", "cgroup.blkio.all.time", "cgroup.blkio.all.io_merged.read", "cgroup.blkio.all.io_merged.write", "cgroup.blkio.all.io_merged.sync", "cgroup.blkio.all.io_merged.async", "cgroup.blkio.all.io_merged.total", "cgroup.blkio.all.io_queued.read", "cgroup.blkio.all.io_queued.write", "cgroup.blkio.all.io_queued.sync", "cgroup.blkio.all.io_queued.async", "cgroup.blkio.all.io_queued.total", "cgroup.blkio.all.io_service_bytes.read", "cgroup.blkio.all.io_service_bytes.write", "cgroup.blkio.all.io_service_bytes.sync", "cgroup.blkio.all.io_service_bytes.async", "cgroup.blkio.all.io_service_bytes.total", "cgroup.blkio.all.io_serviced.read", "cgroup.blkio.all.io_serviced.write", "cgroup.blkio.all.io_serviced.sync", "cgroup.blkio.all.io_serviced.async", "cgroup.blkio.all.io_serviced.total", "cgroup.blkio.all.io_service_time.read", "cgroup.blkio.all.io_service_time.write", "cgroup.blkio.all.io_service_time.sync", "cgroup.blkio.all.io_service_time.async", "cgroup.blkio.all.io_service_time.total", "cgroup.blkio.all.io_wait_time.read", "cgroup.blkio.all.io_wait_time.write", "cgroup.blkio.all.io_wait_time.sync", "cgroup.blkio.all.io_wait_time.async", "cgroup.blkio.all.io_wait_time.total", "cgroup.blkio.all.throttle.io_service_bytes.read", "cgroup.blkio.all.throttle.io_service_bytes.write", "cgroup.blkio.all.throttle.io_service_bytes.sync", "cgroup.blkio.all.throttle.io_service_bytes.async", "cgroup.blkio.all.throttle.io_service_bytes.total", "cgroup.blkio.all.throttle.io_serviced.read", "cgroup.blkio.all.throttle.io_serviced.write", "cgroup.blkio.all.throttle.io_serviced.sync", "cgroup.blkio.all.throttle.io_serviced.async", "cgroup.blkio.all.throttle.io_serviced.total", "cgroup.blkio.id.container", "proc.nprocs", "proc.psinfo.tgid", "proc.psinfo.ngid", "proc.psinfo.cpusallowed", "proc.psinfo.nvctxsw", "proc.psinfo.vctxsw", "proc.psinfo.labels", "proc.psinfo.cgroups", "proc.psinfo.threads", "proc.psinfo.sigcatch_s", "proc.psinfo.sigignore_s", "proc.psinfo.blocked_s", "proc.psinfo.signal_s", "proc.psinfo.environ", "proc.psinfo.cguest_time", "proc.psinfo.guest_time", "proc.psinfo.delayacct_blkio_time", "proc.psinfo.policy", "proc.psinfo.rt_priority", "proc.psinfo.psargs", "proc.psinfo.wchan_s", "proc.psinfo.ttyname", "proc.psinfo.processor", "proc.psinfo.exit_signal", "proc.psinfo.cnswap", "proc.psinfo.nswap", "proc.psinfo.wchan", "proc.psinfo.sigcatch", "proc.psinfo.sigignore", "proc.psinfo.blocked", "proc.psinfo.signal", "proc.psinfo.eip", "proc.psinfo.esp", "proc.psinfo.start_stack", "proc.psinfo.end_code", "proc.psinfo.start_code", "proc.psinfo.rss_rlim", "proc.psinfo.rss", "proc.psinfo.vsize", "proc.psinfo.start_time", "proc.psinfo.it_real_value", "proc.psinfo.nice", "proc.psinfo.priority", "proc.psinfo.cstime", "proc.psinfo.cutime", "proc.psinfo.stime", "proc.psinfo.utime", "proc.psinfo.cmaj_flt", "proc.psinfo.maj_flt", "proc.psinfo.cmin_flt", "proc.psinfo.minflt", "proc.psinfo.flags", "proc.psinfo.tty_pgrp", "proc.psinfo.tty", "proc.psinfo.session", "proc.psinfo.pgrp", "proc.psinfo.ppid", "proc.psinfo.sname", "proc.psinfo.cmd", "proc.psinfo.pid", "proc.memory.vmnonlib", "proc.memory.vmreal", "proc.memory.vmpte", "proc.memory.vmhwm", "proc.memory.vmpin", "proc.memory.vmpeak", "proc.memory.vmswap", "proc.memory.vmlib", "proc.memory.vmexe", "proc.memory.vmstack", "proc.memory.vmdata", "proc.memory.vmrss", "proc.memory.vmlock", "proc.memory.vmsize", "proc.memory.maps", "proc.memory.dirty", "proc.memory.datrss", "proc.memory.librss", "proc.memory.textrss", "proc.memory.share", "proc.memory.rss", "proc.memory.size", "proc.id.container", "proc.id.fsgid_nm", "proc.id.sgid_nm", "proc.id.egid_nm", "proc.id.gid_nm", "proc.id.fsuid_nm", "proc.id.suid_nm", "proc.id.euid_nm", "proc.id.uid_nm", "proc.id.fsgid", "proc.id.sgid", "proc.id.egid", "proc.id.gid", "proc.id.fsuid", "proc.id.suid", "proc.id.euid", "proc.id.uid", "proc.io.cancelled_write_bytes", "proc.io.write_bytes", "proc.io.read_bytes", "proc.io.syscw", "proc.io.syscr", "proc.io.wchar", "proc.io.rchar", "proc.schedstat.pcount", "proc.schedstat.run_delay", "proc.schedstat.cpu_time", "proc.fd.count", "proc.namespaces.sid", "proc.namespaces.pgid", "proc.namespaces.pid", "proc.namespaces.tgid", "proc.runq.runnable", "proc.runq.blocked", "proc.runq.sleeping", "proc.runq.stopped", "proc.runq.swapped", "proc.runq.defunct", "proc.runq.unknown", "proc.runq.kernel", "proc.control.all.threads", "proc.control.perclient.threads", "proc.control.perclient.cgroups", "hotproc.nprocs", "hotproc.control.refresh", "hotproc.control.config", "hotproc.control.config_gen", "hotproc.control.reload_config", "hotproc.total.cpuidle", "hotproc.total.cpuburn", "hotproc.total.cpuother.transient", "hotproc.total.cpuother.not_cpuburn", "hotproc.total.cpuother.total", "hotproc.total.cpuother.percent", "containers.engine", "containers.name", "containers.state.running", "containers.state.paused", "containers.state.restarting", "xfs.write", "xfs.write_bytes", "xfs.read", "xfs.read_bytes", "xfs.iflush_count", "xfs.icluster_flushcnt", "xfs.icluster_flushinode", "xfs.allocs.alloc_extent", "xfs.allocs.alloc_block", "xfs.allocs.free_extent", "xfs.allocs.free_block", "xfs.alloc_btree.lookup", "xfs.alloc_btree.compare", "xfs.alloc_btree.insrec", "xfs.alloc_btree.delrec", "xfs.block_map.read_ops", "xfs.block_map.write_ops", "xfs.block_map.unmap", "xfs.block_map.add_exlist", "xfs.block_map.del_exlist", "xfs.block_map.look_exlist", "xfs.block_map.cmp_exlist", "xfs.bmap_btree.lookup", "xfs.bmap_btree.compare", "xfs.bmap_btree.insrec", "xfs.bmap_btree.delrec", "xfs.dir_ops.lookup", "xfs.dir_ops.create", "xfs.dir_ops.remove", "xfs.dir_ops.getdents", "xfs.transactions.sync", "xfs.transactions.async", "xfs.transactions.empty", "xfs.inode_ops.ig_attempts", "xfs.inode_ops.ig_found", "xfs.inode_ops.ig_frecycle", "xfs.inode_ops.ig_missed", "xfs.inode_ops.ig_dup", "xfs.inode_ops.ig_reclaims", "xfs.inode_ops.ig_attrchg", "xfs.log.writes", "xfs.log.blocks", "xfs.log.write_ratio", "xfs.log.noiclogs", "xfs.log.force", "xfs.log.force_sleep", "xfs.log_tail.try_logspace", "xfs.log_tail.sleep_logspace", "xfs.log_tail.push_ail.pushes", "xfs.log_tail.push_ail.success", "xfs.log_tail.push_ail.pushbuf", "xfs.log_tail.push_ail.pinned", "xfs.log_tail.push_ail.locked", "xfs.log_tail.push_ail.flushing", "xfs.log_tail.push_ail.restarts", "xfs.log_tail.push_ail.flush", "xfs.xstrat.bytes", "xfs.xstrat.quick", "xfs.xstrat.split", "xfs.attr.get", "xfs.attr.set", "xfs.attr.remove", "xfs.attr.list", "xfs.quota.reclaims", "xfs.quota.reclaim_misses", "xfs.quota.dquot_dups", "xfs.quota.cachemisses", "xfs.quota.cachehits", "xfs.quota.wants", "xfs.quota.shake_reclaims", "xfs.quota.inact_reclaims", "xfs.buffer.get", "xfs.buffer.create", "xfs.buffer.get_locked", "xfs.buffer.get_locked_waited", "xfs.buffer.busy_locked", "xfs.buffer.miss_locked", "xfs.buffer.page_retries", "xfs.buffer.page_found", "xfs.buffer.get_read", "xfs.vnodes.active", "xfs.vnodes.alloc", "xfs.vnodes.get", "xfs.vnodes.hold", "xfs.vnodes.rele", "xfs.vnodes.reclaim", "xfs.vnodes.remove", "xfs.vnodes.free", "xfs.control.reset", "xfs.btree.alloc_blocks.lookup", "xfs.btree.alloc_blocks.compare", "xfs.btree.alloc_blocks.insrec", "xfs.btree.alloc_blocks.delrec", "xfs.btree.alloc_blocks.newroot", "xfs.btree.alloc_blocks.killroot", "xfs.btree.alloc_blocks.increment", "xfs.btree.alloc_blocks.decrement", "xfs.btree.alloc_blocks.lshift", "xfs.btree.alloc_blocks.rshift", "xfs.btree.alloc_blocks.split", "xfs.btree.alloc_blocks.join", "xfs.btree.alloc_blocks.alloc", "xfs.btree.alloc_blocks.free", "xfs.btree.alloc_blocks.moves", "xfs.btree.alloc_contig.lookup", "xfs.btree.alloc_contig.compare", "xfs.btree.alloc_contig.insrec", "xfs.btree.alloc_contig.delrec", "xfs.btree.alloc_contig.newroot", "xfs.btree.alloc_contig.killroot", "xfs.btree.alloc_contig.increment", "xfs.btree.alloc_contig.decrement", "xfs.btree.alloc_contig.lshift", "xfs.btree.alloc_contig.rshift", "xfs.btree.alloc_contig.split", "xfs.btree.alloc_contig.join", "xfs.btree.alloc_contig.alloc", "xfs.btree.alloc_contig.free", "xfs.btree.alloc_contig.moves", "xfs.btree.block_map.lookup", "xfs.btree.block_map.compare", "xfs.btree.block_map.insrec", "xfs.btree.block_map.delrec", "xfs.btree.block_map.newroot", "xfs.btree.block_map.killroot", "xfs.btree.block_map.increment", "xfs.btree.block_map.decrement", "xfs.btree.block_map.lshift", "xfs.btree.block_map.rshift", "xfs.btree.block_map.split", "xfs.btree.block_map.join", "xfs.btree.block_map.alloc", "xfs.btree.block_map.free", "xfs.btree.block_map.moves", "xfs.btree.inode.lookup", "xfs.btree.inode.compare", "xfs.btree.inode.insrec", "xfs.btree.inode.delrec", "xfs.btree.inode.newroot", "xfs.btree.inode.killroot", "xfs.btree.inode.increment", "xfs.btree.inode.decrement", "xfs.btree.inode.lshift", "xfs.btree.inode.rshift", "xfs.btree.inode.split", "xfs.btree.inode.join", "xfs.btree.inode.alloc", "xfs.btree.inode.free", "xfs.btree.inode.moves", "lmsensors.n_total", "lmsensors.n_lm75", "lmsensors.n_lm79", "lmsensors.n_lm87", "lmsensors.n_w83781d", "lmsensors.n_mtp008", "lmsensors.lm75.temp", "lmsensors.lm79.fan1", "lmsensors.lm79.fan2", "lmsensors.lm79.fan3", "lmsensors.lm79.fan_div", "lmsensors.lm79.temp", "lmsensors.lm79.alarms", "lmsensors.lm79.VCore1", "lmsensors.lm79.VCore2", "lmsensors.lm79.p33V", "lmsensors.lm79.p5V", "lmsensors.lm79.p12V", "lmsensors.lm79.n12V", "lmsensors.lm79.n5V", "lmsensors.lm79.vid", "lmsensors.lm87.fan1", "lmsensors.lm87.fan2", "lmsensors.lm87.temp1", "lmsensors.lm87.CPUtemp", "lmsensors.lm87.Vccp1", "lmsensors.lm87.Vccp2", "lmsensors.lm87.p25V", "lmsensors.lm87.p33V", "lmsensors.lm87.p5V", "lmsensors.lm87.p12V", "lmsensors.lm87.vid", "lmsensors.w83781d.fan1", "lmsensors.w83781d.fan2", "lmsensors.w83781d.fan3", "lmsensors.w83781d.fan_div", "lmsensors.w83781d.temp1", "lmsensors.w83781d.temp2", "lmsensors.w83781d.temp3", "lmsensors.w83781d.alarms", "lmsensors.w83781d.beep", "lmsensors.w83781d.VCore1", "lmsensors.w83781d.VCore2", "lmsensors.w83781d.p33V", "lmsensors.w83781d.p5V", "lmsensors.w83781d.p12V", "lmsensors.w83781d.n12V", "lmsensors.w83781d.n5V", "lmsensors.w83781d.vid", "lmsensors.mtp008.fan1", "lmsensors.mtp008.fan2", "lmsensors.mtp008.fan3", "lmsensors.mtp008.temp1", "lmsensors.mtp008.temp2", "lmsensors.mtp008.VCore1", "lmsensors.mtp008.VCore2", "lmsensors.mtp008.p33V", "lmsensors.mtp008.p12V", "lmsensors.mtp008.n12V", "lmsensors.mtp008.vid", "lmsensors.mtp008.vtt", "perfevent.version", "perfevent.active", "perfevent.hwcounters.RAPL_ENERGY_PKG.dutycycle", "perfevent.hwcounters.RAPL_ENERGY_PKG.value", "perfevent.hwcounters.RAPL_ENERGY_DRAM.dutycycle", "perfevent.hwcounters.RAPL_ENERGY_DRAM.value", "perfevent.derived.active", "proc.psinfo.age", "proc.io.total_bytes"]}