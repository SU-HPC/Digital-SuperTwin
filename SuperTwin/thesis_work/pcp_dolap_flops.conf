[options]
influx_server = http://127.0.0.1:8086
influx_db = dolap_main
influx_tags = tag=_monitor
source = 10.36.54.195


[configured]
#perfevent.hwcounters.UNHALTED_REFERENCE_CYCLES.value = ,,
#perfevent.hwcounters.UNHALTED_CORE_CYCLES.value = ,,
#perfevent.hwcounters.INSTRUCTION_RETIRED.value = ,,
perfevent.hwcounters.FP_ARITH_SCALAR_DOUBLE.value = ,,
perfevent.hwcounters.FP_ARITH_SCALAR_SINGLE.value = ,,
perfevent.hwcounters.FP_ARITH_128B_PACKED_DOUBLE.value = ,,
perfevent.hwcounters.FP_ARITH_128B_PACKED_SINGLE.value = ,,
perfevent.hwcounters.FP_ARITH_256B_PACKED_DOUBLE.value = ,,
perfevent.hwcounters.FP_ARITH_256B_PACKED_SINGLE.value = ,,
perfevent.hwcounters.FP_ARITH_512B_PACKED_DOUBLE.value = ,,
perfevent.hwcounters.FP_ARITH_512B_PACKED_SINGLE.value = ,,
perfevent.hwcounters.MEM_UOPS_RETIRED_ALL_LOADS.value = ,,
perfevent.hwcounters.MEM_UOPS_RETIRED_ALL_STORES.value = ,,
#perfevent.hwcounters.UOPS_DISPATCHED_PORT_PORT_0 = ,,
#perfevent.hwcounters.UOPS_DISPATCHED_PORT_PORT_1 = ,,
#perfevent.hwcounters.UOPS_DISPATCHED_PORT_PORT_2 = ,,
#perfevent.hwcounters.UOPS_DISPATCHED_PORT_PORT_3 = ,,
#perfevent.hwcounters.UOPS_DISPATCHED_PORT_PORT_4 = ,,
#perfevent.hwcounters.UOPS_DISPATCHED_PORT_PORT_5 = ,,
#perfevent.hwcounters.UOPS_DISPATCHED_PORT_PORT_6 = ,,
#perfevent.hwcounters.UOPS_DISPATCHED_PORT_PORT_7 = ,,
perfevent.hwcounters.RAPL_ENERGY_PKG.value = ,,
perfevent.hwcounters.RAPL_ENERGY_DRAM.value = ,,
SCALAR_SINGLE_FLOP = SCALAR_SINGLE_FLOP
SCALAR_SINGLE_FLOP.formula = perfevent.hwcounters.FP_ARITH_SCALAR_SINGLE.value * 1
SCALAR_DOUBLE_FLOP = SCALAR_DOUBLE_FLOP
SCALAR_DOUBLE_FLOP.formula = perfevent.hwcounters.FP_ARITH_SCALAR_DOUBLE.value * 1
SSE_DOUBLE_FLOP = SSE_DOUBLE_FLOP
SSE_DOUBLE_FLOP.formula = perfevent.hwcounters.FP_ARITH_128B_PACKED_DOUBLE.value * 2
SSE_SINGLE_FLOP = SSE_SINGLE_FLOP
SSE_SINGLE_FLOP.formula = perfevent.hwcounters.FP_ARITH_128B_PACKED_SINGLE.value * 4
AVX256_PACKED_DOUBLE_FLOP = AVX256_DOUBLE_FLOP
AVX256_PACKED_DOUBLE_FLOP.formula = perfevent.hwcounters.FP_ARITH_256B_PACKED_DOUBLE.value * 4
AVX256_PACKED_SINGLE_FLOP = AVX256_SINGLE_FLOP
AVX256_PACKED_SINGLE_FLOP.formula = perfevent.hwcounters.FP_ARITH_256B_PACKED_DOUBLE.value * 8
AVX512_PACKED_DOUBLE_FLOP = AVX512_DOUBLE_FLOP
AVX512_PACKED_DOUBLE_FLOP.formula = perfevent.hwcounters.FP_ARITH_512B_PACKED_DOUBLE.value * 8
AVX512_PACKED_SINGLE_FLOP = AVX512_SINGLE_FLOP
AVX512_PACKED_SINGLE_FLOP.formula = perfevent.hwcounters.FP_ARITH_512B_PACKED_SINGLE.value * 16

#MEM_RETIRED_LOADS = MEM_RETIRED_LOADS
#MEM_RETIRED_LOADS.formula = matchinst(!/^(dutycycle)/, perfevent.hwcounters.MEM_UOPS_RETIRED_ALL_LOADS.value)
#MEM_RETIRED_STORES = MEM_RETIRED_STORES
#MEM_RETIRED_STORES.formula = matchinst(!/^(dutycycle)/, perfevent.hwcounters.MEM_UOPS_RETIRED_ALL_STORES.value)
#MEM_RETIRED_ALL = MEM_RETIRED_ALL
#MEM_RETIRED_ALL.formula = MEM_RETIRED_LOADS + MEM_RETIRED_STORES
#MEM_RETIRED_ALL.formula = scalar(perfevent.hwcounters.MEM_UOPS_RETIRED_ALL_LOADS.value[cpu0]) + scalar(perfevent.hwcounters.MEM_UOPS_RETIRED_ALL_STORES.value[cpu0])
#FLOP_UOPS_ALL = scalar(SCALAR_SINGLE_FLOP[cpu0]) + 
perfevent.hwcounters.UNHALTED_CORE_CYCLES.value = ,,
perfevent.hwcounters.UNHALTED_REFERENCE_CYCLES.value = ,,
perfevent.hwcounters.INSTRUCTION_RETIRED.value = ,,
perfevent.hwcounters.UOPS_ISSUED_ANY.value = ,,