-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 88000000 (elements), Offset = 0 (elements)
Memory per array = 671.4 MiB (= 0.7 GiB).
Total memory required = 2014.2 MiB (= 2.0 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140086257411968 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140086249015296 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140086240618624 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140086232221952 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140086223825280 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140086215428608 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140086207031936 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140085727062784 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140085718666112 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140085710269440 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140085701872768 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140085693476096 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140085685079424 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140085676682752 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140085190192768 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 140085181796096 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 140085173399424 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 140085165002752 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 140085156606080 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 140085148209408 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 140085139812736 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 140084653322752 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 140084644926080 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 140084636529408 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 140084628132736 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 140084619736064 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 140084611339392 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 140084602942720 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 140084116452736 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 140084108056064 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 140084099659392 -> hwthread 31 - OK[0m[1;34m
[0mNumber of Threads requested = 32
Number of Threads counted = 32
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 232850 microseconds.
   (= 232850 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           41468.0     0.109146     0.033954     0.190343
Scale:          41450.8     0.107549     0.033968     0.197654
Add:            40582.6     0.148271     0.052042     0.286423
Triad:          46704.9     0.142670     0.045220     0.280696
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 88000000 (elements), Offset = 0 (elements)
Memory per array = 671.4 MiB (= 0.7 GiB).
Total memory required = 2014.2 MiB (= 2.0 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 139691966891904 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 139691958495232 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 139691950098560 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 139691941701888 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 139691730921856 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 139691722525184 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 139691714128512 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 139691705731840 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 139691697335168 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 139691688938496 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 139691680541824 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 139691126942976 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 139691118546304 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 139691110149632 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 139691101752960 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 139691093356288 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 139691084959616 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 139691076562944 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 139690590072960 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 139690581676288 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 139690573279616 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 139690564882944 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 139690556486272 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 139690548089600 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 139690539692928 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 139690053202944 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 139690044806272 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 139690036409600 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 139690028012928 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 139690019616256 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 139690011219584 -> hwthread 31 - OK[0m[1;34m
[0mNumber of Threads requested = 32
Number of Threads counted = 32
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 219150 microseconds.
   (= 219150 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           44101.8     0.091709     0.031926     0.176281
Scale:          44104.7     0.088454     0.031924     0.186524
Add:            49085.5     0.112109     0.043027     0.264493
Triad:          48905.9     0.124038     0.043185     0.271129
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
