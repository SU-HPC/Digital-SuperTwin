-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 88000000 (elements), Offset = 0 (elements)
Memory per array = 671.4 MiB (= 0.7 GiB).
Total memory required = 2014.2 MiB (= 2.0 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140082343339904 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140082334943232 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140082326546560 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140082318149888 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140082103183744 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140082094787072 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140082086390400 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140082077993728 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140082069597056 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140082061200384 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140082052803712 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140081499204864 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140081490808192 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140081482411520 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140081474014848 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 140081465618176 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 140081457221504 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 140081448824832 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 140080962334848 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 140080953938176 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 140080945541504 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 140080937144832 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 140080928748160 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 140080920351488 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 140080911954816 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 140080425464832 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 140080417068160 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 140080408671488 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 140080400274816 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 140080391878144 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 140080383481472 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 140080375084800 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 140079888590720 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 140079880189952 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 140079871789184 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 140079863388416 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 140079854987648 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 140079846586880 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 140079838186112 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 140079351720704 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 140079343319936 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 140079334919168 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 140079326518400 -> hwthread 43 - OK[0m[1;34m
[0mNumber of Threads requested = 44
Number of Threads counted = 44
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 43386 microseconds.
   (= 43386 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           55734.1     0.059057     0.025263     0.150989
Scale:          49610.5     0.067014     0.028381     0.148644
Add:            63235.7     0.088895     0.033399     0.207999
Triad:          63121.7     0.092128     0.033459     0.213377
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
-------------------------------------------------------------
STREAM version $Revision: 5.10 $
-------------------------------------------------------------
This system uses 8 bytes per array element.
-------------------------------------------------------------
Array size = 88000000 (elements), Offset = 0 (elements)
Memory per array = 671.4 MiB (= 0.7 GiB).
Total memory required = 2014.2 MiB (= 2.0 GiB).
Each kernel will be executed 20 times.
 The *best* time for each kernel (excluding the first iteration)
 will be used to compute the reported bandwidth.
-------------------------------------------------------------
[1;34m[pthread wrapper] 
[0m[1;34m[pthread wrapper] MAIN -> 0
[0m[1;34m[pthread wrapper] PIN_MASK: [0m[1;34m0->1  [0m[1;34m1->2  [0m[1;34m2->3  [0m[1;34m3->4  [0m[1;34m4->5  [0m[1;34m5->6  [0m[1;34m6->7  [0m[1;34m7->8  [0m[1;34m8->9  [0m[1;34m9->10  [0m[1;34m10->11  [0m[1;34m11->12  [0m[1;34m12->13  [0m[1;34m13->14  [0m[1;34m14->15  [0m[1;34m15->16  [0m[1;34m16->17  [0m[1;34m17->18  [0m[1;34m18->19  [0m[1;34m19->20  [0m[1;34m20->21  [0m[1;34m21->22  [0m[1;34m22->23  [0m[1;34m23->24  [0m[1;34m24->25  [0m[1;34m25->26  [0m[1;34m26->27  [0m[1;34m27->28  [0m[1;34m28->29  [0m[1;34m29->30  [0m[1;34m30->31  [0m[1;34m31->32  [0m[1;34m32->33  [0m[1;34m33->34  [0m[1;34m34->35  [0m[1;34m35->36  [0m[1;34m36->37  [0m[1;34m37->38  [0m[1;34m38->39  [0m[1;34m39->40  [0m[1;34m40->41  [0m[1;34m41->42  [0m[1;34m42->43  [0m[1;34m
[pthread wrapper] SKIP MASK: 0x0
[0m[1;34m	threadid 140336569808768 -> hwthread 1 - OK[0m[1;34m
[0m[1;34m	threadid 140336561412096 -> hwthread 2 - OK[0m[1;34m
[0m[1;34m	threadid 140336553015424 -> hwthread 3 - OK[0m[1;34m
[0m[1;34m	threadid 140336544618752 -> hwthread 4 - OK[0m[1;34m
[0m[1;34m	threadid 140336536222080 -> hwthread 5 - OK[0m[1;34m
[0m[1;34m	threadid 140336527825408 -> hwthread 6 - OK[0m[1;34m
[0m[1;34m	threadid 140336177343104 -> hwthread 7 - OK[0m[1;34m
[0m[1;34m	threadid 140336168946432 -> hwthread 8 - OK[0m[1;34m
[0m[1;34m	threadid 140336160549760 -> hwthread 9 - OK[0m[1;34m
[0m[1;34m	threadid 140336152153088 -> hwthread 10 - OK[0m[1;34m
[0m[1;34m	threadid 140336143756416 -> hwthread 11 - OK[0m[1;34m
[0m[1;34m	threadid 140336135359744 -> hwthread 12 - OK[0m[1;34m
[0m[1;34m	threadid 140336126963072 -> hwthread 13 - OK[0m[1;34m
[0m[1;34m	threadid 140335573364224 -> hwthread 14 - OK[0m[1;34m
[0m[1;34m	threadid 140335564967552 -> hwthread 15 - OK[0m[1;34m
[0m[1;34m	threadid 140335556570880 -> hwthread 16 - OK[0m[1;34m
[0m[1;34m	threadid 140335548174208 -> hwthread 17 - OK[0m[1;34m
[0m[1;34m	threadid 140335539777536 -> hwthread 18 - OK[0m[1;34m
[0m[1;34m	threadid 140335531380864 -> hwthread 19 - OK[0m[1;34m
[0m[1;34m	threadid 140335522984192 -> hwthread 20 - OK[0m[1;34m
[0m[1;34m	threadid 140335036494208 -> hwthread 21 - OK[0m[1;34m
[0m[1;34m	threadid 140335028097536 -> hwthread 22 - OK[0m[1;34m
[0m[1;34m	threadid 140335019700864 -> hwthread 23 - OK[0m[1;34m
[0m[1;34m	threadid 140335011304192 -> hwthread 24 - OK[0m[1;34m
[0m[1;34m	threadid 140335002907520 -> hwthread 25 - OK[0m[1;34m
[0m[1;34m	threadid 140334994510848 -> hwthread 26 - OK[0m[1;34m
[0m[1;34m	threadid 140334986114176 -> hwthread 27 - OK[0m[1;34m
[0m[1;34m	threadid 140334499624192 -> hwthread 28 - OK[0m[1;34m
[0m[1;34m	threadid 140334491227520 -> hwthread 29 - OK[0m[1;34m
[0m[1;34m	threadid 140334482830848 -> hwthread 30 - OK[0m[1;34m
[0m[1;34m	threadid 140334474434176 -> hwthread 31 - OK[0m[1;34m
[0m[1;34m	threadid 140334466037504 -> hwthread 32 - OK[0m[1;34m
[0m[1;34m	threadid 140334457636736 -> hwthread 33 - OK[0m[1;34m
[0m[1;34m	threadid 140334449235968 -> hwthread 34 - OK[0m[1;34m
[0m[1;34m	threadid 140333962750080 -> hwthread 35 - OK[0m[1;34m
[0m[1;34m	threadid 140333954349312 -> hwthread 36 - OK[0m[1;34m
[0m[1;34m	threadid 140333945948544 -> hwthread 37 - OK[0m[1;34m
[0m[1;34m	threadid 140333937547776 -> hwthread 38 - OK[0m[1;34m
[0m[1;34m	threadid 140333929147008 -> hwthread 39 - OK[0m[1;34m
[0m[1;34m	threadid 140333920746240 -> hwthread 40 - OK[0m[1;34m
[0m[1;34m	threadid 140333912345472 -> hwthread 41 - OK[0m[1;34m
[0m[1;34m	threadid 140333425880064 -> hwthread 42 - OK[0m[1;34m
[0m[1;34m	threadid 140333417479296 -> hwthread 43 - OK[0m[1;34m
[0mNumber of Threads requested = 44
Number of Threads counted = 44
-------------------------------------------------------------
Your clock granularity/precision appears to be 1 microseconds.
Each test below will take on the order of 21104 microseconds.
   (= 21104 clock ticks)
Increase the size of the arrays if this shows that
you are not getting at least 20 clock ticks per test.
-------------------------------------------------------------
WARNING -- The above is only a rough guideline.
For best results, please be sure you know the
precision of your system timer.
-------------------------------------------------------------
Function    Best Rate MB/s  Avg time     Min time     Max time
Copy:           60684.6     0.023314     0.023202     0.023619
Scale:          60650.3     0.023869     0.023215     0.030046
Add:            67573.2     0.031789     0.031255     0.035976
Triad:          67276.0     0.031844     0.031393     0.036077
-------------------------------------------------------------
Solution Validates: avg error less than 1.000000e-13 on all three arrays
-------------------------------------------------------------
