import os
import pprint


def main():

    
    ##out.txt is generated by >./showevtinfo -L -D &>> out.txt
    reader = open("/tmp/dt_probing/pmu_event_query/out.txt", "r")
    lines = reader.readlines()
    reader.close()

    PMUs = {}
    for line in lines:
        fields = line.strip("\n").split("\t")
        pmu,metric = fields[0].split("::")
        desc = fields[1].replace('"', '')
        if(pmu not in PMUs.keys()):
            PMUs[pmu] = {}
            PMUs[pmu]["events"] = []
        PMUs[pmu]["events"].append([metric, desc])


    ##out_emp.txt is generated by >./showevt &>> out_emp.txt
    reader = open("/tmp/dt_probing/pmu_event_query/out_emp.txt", "r")
    lines = reader.readlines()
    reader.close()

    detect_ind_start = 0
    detect_ind_end = 0
    for i in range(len(lines)):
        if(lines[i].find("Detected PMU") != -1):
            detect_ind_start = i + 1
        if(lines[i].find("Total events") != -1):
            detect_ind_end = i

    for i in range(detect_ind_start, detect_ind_end):
        line_fields = lines[i].strip("\t").strip("\n").split(",")
        line_fields = [x.replace('"', '').strip(" ").strip("[").strip("]") for x in line_fields]

        key = line_fields[1]
        name = line_fields[2]
        events = int(line_fields[3].split(" ")[0])
        max_encoding = int(line_fields[4].split(" ")[0])
        counters = int(line_fields[5].split(" ")[0])
        _type = line_fields[6]

        PMUs[key]["features"] = {}
        PMUs[key]["features"]["name"] = name
        PMUs[key]["features"]["no_events"] = events
        PMUs[key]["features"]["max_encoding"] = max_encoding
        PMUs[key]["features"]["counters"] = counters
        PMUs[key]["features"]["type"] = _type
        

    for key in PMUs.keys():
        print(PMUs[key]["features"])
        print(PMUs[key]["events"][0])

    return PMUs

if __name__ == "__main__":

    main()
